simulation:
  batch_size:
    steps: [ 1, 2, 3, 4, 5 ]
  client_count: 100
  fraction_fit: 0.1
  global_rounds: 10
  local_rounds:
    steps: [ 10, 20, 30, 40, 50 ]
  optimizer:
    optimizer_name: SGD
    lr:
      steps: [ 0.1, 0.2, 0.3, 0.4, 0.5 ]
dataset:
  name: MNIST
  splitter:
    alpha: 1
    percent_non_iid: 25
  preprocess_fn: |
    def preprocess_fn(element):
      return {
        "x": element["image"].reshape(784) / 255.,
        "y": element["label"]
      }
model:
  name: Logistic Regression
  criterion: CrossEntropyLoss
  layers:
    - type: Linear
      in_features: 784
      out_features: 10
    - type: Softmax
      dim: -1
