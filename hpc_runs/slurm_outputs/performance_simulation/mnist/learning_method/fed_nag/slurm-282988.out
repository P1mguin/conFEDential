ctit083
2024-04-28 18:21:38.808875: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-04-28 18:21:55.138774: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
INFO flwr 2024-04-28 18:22:50,008 | batch_run_simulation.py:80 | Loaded 81 configs with name MNIST-LOGISTICREGRESSION-FEDNAG, running...
INFO flwr 2024-04-28 18:22:50,008 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:22:57,589 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
2024-04-28 18:23:05,504	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:23:07,627	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:23:07,989	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:23:07,991	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:23:19,003 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79446115123.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'memory': 175374268621.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-28 18:23:19,003 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:23:19,003 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:23:19,022 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:23:19,023 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:23:19,023 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:23:19,023 | server.py:91 | Evaluating initial parameters
[2m[36m(pid=1316686)[0m 2024-04-28 18:23:25.219755: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1316686)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
INFO flwr 2024-04-28 18:23:27,158 | server.py:94 | initial parameters (loss, other metrics): 2.3044753074645996, {'accuracy': 0.0654, 'data_size': 10000}
INFO flwr 2024-04-28 18:23:27,158 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:23:27,159 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1316686)[0m 2024-04-28 18:23:27.770048: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1316686)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1316686)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1316676)[0m 2024-04-28 18:23:25.369821: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/ray-logging.html#log-deduplication for more options.)[0m
[2m[36m(pid=1316676)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1316675)[0m 2024-04-28 18:23:27.770048: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:24:10,663 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:24:12,112 | server.py:125 | fit progress: (1, 1.7536749839782715, {'accuracy': 0.7332, 'data_size': 10000}, 44.95309977498255)
INFO flwr 2024-04-28 18:24:12,112 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:24:12,112 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:24:36,333 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:24:37,847 | server.py:125 | fit progress: (2, 1.663846731185913, {'accuracy': 0.8005, 'data_size': 10000}, 70.68838665500516)
INFO flwr 2024-04-28 18:24:37,847 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:24:37,847 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:24:59,483 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:25:00,754 | server.py:125 | fit progress: (3, 1.6211814880371094, {'accuracy': 0.8454, 'data_size': 10000}, 93.59576789298444)
INFO flwr 2024-04-28 18:25:00,755 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:25:00,755 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:25:22,392 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:25:23,879 | server.py:125 | fit progress: (4, 1.5790435075759888, {'accuracy': 0.8877, 'data_size': 10000}, 116.72062681498937)
INFO flwr 2024-04-28 18:25:23,879 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:25:23,880 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:25:47,548 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:25:48,982 | server.py:125 | fit progress: (5, 1.5652849674224854, {'accuracy': 0.9035, 'data_size': 10000}, 141.8232350309845)
INFO flwr 2024-04-28 18:25:48,982 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:25:48,982 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:26:12,192 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:26:13,662 | server.py:125 | fit progress: (6, 1.5560251474380493, {'accuracy': 0.9101, 'data_size': 10000}, 166.50343150499975)
INFO flwr 2024-04-28 18:26:13,662 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:26:13,662 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:26:33,517 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:26:35,000 | server.py:125 | fit progress: (7, 1.5561165809631348, {'accuracy': 0.9083, 'data_size': 10000}, 187.84149619500386)
INFO flwr 2024-04-28 18:26:35,000 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:26:35,000 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:27:03,170 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:27:04,716 | server.py:125 | fit progress: (8, 1.5644079446792603, {'accuracy': 0.9012, 'data_size': 10000}, 217.55787635300658)
INFO flwr 2024-04-28 18:27:04,717 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:27:04,717 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:27:29,050 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:27:30,470 | server.py:125 | fit progress: (9, 1.5666509866714478, {'accuracy': 0.899, 'data_size': 10000}, 243.31127154899877)
INFO flwr 2024-04-28 18:27:30,470 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:27:30,470 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:27:53,675 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:27:55,188 | server.py:125 | fit progress: (10, 1.5511976480484009, {'accuracy': 0.9118, 'data_size': 10000}, 268.029967585986)
INFO flwr 2024-04-28 18:27:55,189 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:27:55,189 | server.py:153 | FL finished in 268.0303929949878
INFO flwr 2024-04-28 18:27:55,189 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:27:55,195 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00013795,  0.00019948,  0.00588711, -0.00507068,  0.00248853,
        0.00231804,  0.00010543,  0.00961385, -0.00252344, -0.01288032],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00061602, -0.00251525, -0.00122671,  0.00120021,  0.00255603,
        0.00197101, -0.00060748, -0.00088192, -0.00051826, -0.0005936 ],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0011352 ,  0.00039858,  0.00178238,  0.00012648,  0.00682434,
        0.0036901 , -0.00039863, -0.00493947, -0.00602694, -0.00032163],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00025313,  0.00165321, -0.00012763, -0.00110708,  0.00741467,
        0.00112399, -0.00015145,  0.00213203, -0.00344352, -0.00774732],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0929950e-05,  3.6102228e-04,  2.4926109e-04,  4.7572423e-04,
        4.1197999e-03,  1.5509463e-04, -7.5829512e-04, -8.1417640e-04,
       -6.7423028e-04, -3.1032253e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.7568678e-05, -1.3476404e-03,  2.0236934e-03,  1.1167543e-03,
        6.8632858e-03,  8.4432261e-04, -2.3347628e-03, -8.4947242e-05,
        6.7607290e-04, -7.6591601e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00019512, -0.00037116,  0.00027982,  0.00107276,  0.00193013,
       -0.00024742,  0.00020318, -0.00042013, -0.00094772, -0.00130432],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.9493283e-05, -8.0468704e-04,  8.7509048e-04,  3.1937547e-03,
        3.1489595e-03,  6.4054341e-03,  5.6761764e-05,  6.2618736e-04,
       -9.5932242e-03, -3.9577521e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1871783e-05,  2.8141998e-05,  2.8799695e-05,  2.6567858e-02,
        1.6277109e-03, -2.5647929e-02, -1.0237230e-04,  2.1455129e-05,
       -1.6724333e-04, -2.3245206e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1283068e-04, -8.4819348e-04,  4.1701722e-05,  1.2144161e-03,
        9.8378281e-04, -5.7395466e-04, -2.4644012e-04, -3.4149713e-04,
        9.1542250e-05, -4.3417068e-04], dtype=float32)])]}
INFO flwr 2024-04-28 18:27:55,195 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:27:55,195 | app.py:229 | app_fit: losses_centralized [(0, 2.3044753074645996), (1, 1.7536749839782715), (2, 1.663846731185913), (3, 1.6211814880371094), (4, 1.5790435075759888), (5, 1.5652849674224854), (6, 1.5560251474380493), (7, 1.5561165809631348), (8, 1.5644079446792603), (9, 1.5666509866714478), (10, 1.5511976480484009)]
INFO flwr 2024-04-28 18:27:55,195 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0654), (1, 0.7332), (2, 0.8005), (3, 0.8454), (4, 0.8877), (5, 0.9035), (6, 0.9101), (7, 0.9083), (8, 0.9012), (9, 0.899), (10, 0.9118)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9118
wandb:     loss 1.5512
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_182253-hqfs6dpn
wandb: Find logs at: ./wandb/offline-run-20240428_182253-hqfs6dpn/logs
INFO flwr 2024-04-28 18:27:58,807 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:27:59,502 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1316675)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1316675)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:28:04,187	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:28:04,605	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:28:04,954	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:28:04,955	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:28:15,850 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79348070400.0, 'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 175145497600.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 18:28:15,851 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:28:15,851 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:28:15,868 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:28:15,869 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:28:15,869 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:28:15,870 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:28:18,458 | server.py:94 | initial parameters (loss, other metrics): 2.3022866249084473, {'accuracy': 0.1039, 'data_size': 10000}
INFO flwr 2024-04-28 18:28:18,459 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:28:18,459 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1320813)[0m 2024-04-28 18:28:21.912124: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1320813)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1320813)[0m 2024-04-28 18:28:24.219340: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1320814)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1320814)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1320814)[0m 2024-04-28 18:28:22.292532: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1320814)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1320814)[0m 2024-04-28 18:28:24.417090: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:28:56,546 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:28:58,022 | server.py:125 | fit progress: (1, 1.7158619165420532, {'accuracy': 0.7538, 'data_size': 10000}, 39.56263505498646)
INFO flwr 2024-04-28 18:28:58,022 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:28:58,022 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:29:21,778 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:29:23,277 | server.py:125 | fit progress: (2, 1.6406004428863525, {'accuracy': 0.8202, 'data_size': 10000}, 64.81793794300756)
INFO flwr 2024-04-28 18:29:23,277 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:29:23,278 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:29:45,180 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:29:46,611 | server.py:125 | fit progress: (3, 1.6256022453308105, {'accuracy': 0.8362, 'data_size': 10000}, 88.15188001000206)
INFO flwr 2024-04-28 18:29:46,611 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:29:46,611 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:30:08,305 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:30:09,824 | server.py:125 | fit progress: (4, 1.5635011196136475, {'accuracy': 0.8989, 'data_size': 10000}, 111.36501118398155)
INFO flwr 2024-04-28 18:30:09,824 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:30:09,824 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:30:29,089 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:30:30,552 | server.py:125 | fit progress: (5, 1.5629518032073975, {'accuracy': 0.8994, 'data_size': 10000}, 132.0925816030067)
INFO flwr 2024-04-28 18:30:30,552 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:30:30,552 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:30:51,037 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:30:52,484 | server.py:125 | fit progress: (6, 1.5550669431686401, {'accuracy': 0.9083, 'data_size': 10000}, 154.02478673198493)
INFO flwr 2024-04-28 18:30:52,484 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:30:52,484 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:31:15,127 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:31:16,613 | server.py:125 | fit progress: (7, 1.5576131343841553, {'accuracy': 0.9057, 'data_size': 10000}, 178.15350304698222)
INFO flwr 2024-04-28 18:31:16,613 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:31:16,613 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:31:39,570 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:31:41,023 | server.py:125 | fit progress: (8, 1.5523288249969482, {'accuracy': 0.9105, 'data_size': 10000}, 202.56407888399553)
INFO flwr 2024-04-28 18:31:41,023 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:31:41,024 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:32:05,388 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:32:06,829 | server.py:125 | fit progress: (9, 1.5488773584365845, {'accuracy': 0.9142, 'data_size': 10000}, 228.36976909599616)
INFO flwr 2024-04-28 18:32:06,829 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:32:06,829 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:32:27,739 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:32:29,212 | server.py:125 | fit progress: (10, 1.5487663745880127, {'accuracy': 0.9146, 'data_size': 10000}, 250.7531795919931)
INFO flwr 2024-04-28 18:32:29,212 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:32:29,213 | server.py:153 | FL finished in 250.75363592698704
INFO flwr 2024-04-28 18:32:29,213 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:32:29,218 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00013674,  0.00832547, -0.01479015, -0.00692573,  0.01096477,
        0.00060752, -0.00094652, -0.00012268,  0.01141623, -0.00839216],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00030477, -0.00088036, -0.000154  ,  0.00085499,  0.00150838,
        0.00089419, -0.00061449, -0.00186385, -0.00016088,  0.00011135],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00082577,  0.0006323 ,  0.00018877, -0.00556445,  0.00124307,
        0.00366115,  0.00242517,  0.00024044, -0.00067889, -0.0013217 ],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00095027,  0.00031471,  0.00032086,  0.00441995,  0.00135755,
       -0.00096636, -0.00075769, -0.00339133, -0.00406424,  0.0037169 ],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.49691831e-04, -1.18265816e-04, -1.21076540e-04, -4.28036379e-04,
        5.36661944e-04,  1.54898560e-04, -4.23686142e-05,  2.45391799e-04,
        9.08749789e-05, -6.82722530e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1702756e-05, -1.0063645e-04, -6.1796796e-05,  5.0702970e-04,
       -1.2353357e-03,  1.4189678e-03, -2.7128050e-04,  7.0704642e-04,
       -2.4896665e-03,  1.5374230e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.9240702e-04,  2.2413069e-04,  5.6688987e-06,  4.9437615e-03,
        4.2255977e-03,  6.6775600e-03,  4.2755739e-05, -4.6273190e-04,
       -8.6155720e-03, -7.2334902e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.4950625e-06,  3.3259144e-04, -6.3385472e-05,  3.6328298e-04,
        8.9135850e-03,  1.8218940e-03, -1.6437984e-03,  1.2726832e-02,
       -1.3854755e-03, -2.1073986e-02], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.0431742e-05, -3.5938766e-04,  1.7455548e-04, -2.1518748e-04,
       -2.0057959e-02,  4.7968891e-03, -5.8985490e-04,  2.0516531e-05,
        1.7049825e-02, -7.2894961e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00212618, -0.00022289,  0.00037653,  0.00072689, -0.00043504,
       -0.00015062,  0.00016606,  0.00029007,  0.00165583, -0.00028059],
      dtype=float32)])]}
INFO flwr 2024-04-28 18:32:29,218 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:32:29,219 | app.py:229 | app_fit: losses_centralized [(0, 2.3022866249084473), (1, 1.7158619165420532), (2, 1.6406004428863525), (3, 1.6256022453308105), (4, 1.5635011196136475), (5, 1.5629518032073975), (6, 1.5550669431686401), (7, 1.5576131343841553), (8, 1.5523288249969482), (9, 1.5488773584365845), (10, 1.5487663745880127)]
INFO flwr 2024-04-28 18:32:29,219 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1039), (1, 0.7538), (2, 0.8202), (3, 0.8362), (4, 0.8989), (5, 0.8994), (6, 0.9083), (7, 0.9057), (8, 0.9105), (9, 0.9142), (10, 0.9146)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9146
wandb:     loss 1.54877
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_182759-7rtmnj3g
wandb: Find logs at: ./wandb/offline-run-20240428_182759-7rtmnj3g/logs
INFO flwr 2024-04-28 18:32:32,839 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:32:33,501 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1320809)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1320809)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:32:39,044	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:32:39,404	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:32:39,751	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:32:39,752	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:32:50,687 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 174986623181.0, 'CPU': 64.0, 'object_store_memory': 79279981363.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 18:32:50,688 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:32:50,688 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:32:50,703 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:32:50,704 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:32:50,704 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:32:50,704 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:32:53,437 | server.py:94 | initial parameters (loss, other metrics): 2.302816867828369, {'accuracy': 0.0734, 'data_size': 10000}
INFO flwr 2024-04-28 18:32:53,438 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:32:53,438 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1324557)[0m 2024-04-28 18:32:56.818952: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1324557)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1324560)[0m 2024-04-28 18:32:59.142346: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1324560)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1324560)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1324562)[0m 2024-04-28 18:32:57.038646: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1324562)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1324565)[0m 2024-04-28 18:32:59.229274: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:33:32,089 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:33:33,590 | server.py:125 | fit progress: (1, 1.794127345085144, {'accuracy': 0.6645, 'data_size': 10000}, 40.152379811013816)
INFO flwr 2024-04-28 18:33:33,590 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:33:33,591 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:33:56,959 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:33:58,477 | server.py:125 | fit progress: (2, 1.6255764961242676, {'accuracy': 0.8338, 'data_size': 10000}, 65.03879223502008)
INFO flwr 2024-04-28 18:33:58,477 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:33:58,477 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:34:17,906 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:34:19,375 | server.py:125 | fit progress: (3, 1.5691269636154175, {'accuracy': 0.8924, 'data_size': 10000}, 85.93705185400904)
INFO flwr 2024-04-28 18:34:19,375 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:34:19,375 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:34:41,262 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:34:42,763 | server.py:125 | fit progress: (4, 1.566884160041809, {'accuracy': 0.8945, 'data_size': 10000}, 109.32486186001915)
INFO flwr 2024-04-28 18:34:42,763 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:34:42,763 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:35:03,160 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:35:04,628 | server.py:125 | fit progress: (5, 1.5703027248382568, {'accuracy': 0.8896, 'data_size': 10000}, 131.19042016001185)
INFO flwr 2024-04-28 18:35:04,628 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:35:04,629 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:35:26,442 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:35:27,704 | server.py:125 | fit progress: (6, 1.5618913173675537, {'accuracy': 0.8987, 'data_size': 10000}, 154.26649921599892)
INFO flwr 2024-04-28 18:35:27,704 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:35:27,705 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:35:51,817 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:35:53,053 | server.py:125 | fit progress: (7, 1.5737448930740356, {'accuracy': 0.8877, 'data_size': 10000}, 179.61551744199824)
INFO flwr 2024-04-28 18:35:53,053 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:35:53,054 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:36:16,919 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:36:18,365 | server.py:125 | fit progress: (8, 1.5612190961837769, {'accuracy': 0.8999, 'data_size': 10000}, 204.9271427950007)
INFO flwr 2024-04-28 18:36:18,365 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:36:18,365 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:36:40,711 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:36:42,213 | server.py:125 | fit progress: (9, 1.5686912536621094, {'accuracy': 0.8931, 'data_size': 10000}, 228.7753138480184)
INFO flwr 2024-04-28 18:36:42,213 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:36:42,214 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:37:06,158 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:37:07,625 | server.py:125 | fit progress: (10, 1.5669529438018799, {'accuracy': 0.8937, 'data_size': 10000}, 254.187016440992)
INFO flwr 2024-04-28 18:37:07,625 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:37:07,625 | server.py:153 | FL finished in 254.1874440399988
INFO flwr 2024-04-28 18:37:07,625 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:37:07,631 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00263132,  0.00126487, -0.00181641,  0.00203472, -0.00127369,
       -0.00158542,  0.00409994, -0.00036298, -0.00663158,  0.00163927],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00413326,  0.00387258, -0.00204934,  0.00017883, -0.0206581 ,
        0.02445231,  0.00271257, -0.0031801 , -0.01356454,  0.00410254],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1891361e-02,  2.3092777e-02,  1.4205199e-02,  1.9915209e-03,
        7.6673037e-05, -5.9971227e-03,  7.1612308e-03,  1.5965509e-03,
       -2.8679391e-02, -1.5560543e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0652969e-04,  2.5625520e-03, -2.1595451e-05,  7.1696849e-03,
       -1.2930500e-03, -2.8156114e-03,  1.2143128e-04, -2.0375191e-03,
       -3.1897745e-03, -1.8955480e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.6197878e-03, -3.6707632e-05,  5.7501132e-03, -7.3818088e-04,
        1.7295846e-03,  2.3726940e-03, -3.3831975e-04, -1.9981935e-05,
        1.4358974e-04, -7.2430023e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00265227, -0.00055337, -0.01355832, -0.00411632,  0.03007897,
        0.00441579, -0.00124269, -0.00021151, -0.00089725, -0.01656752],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00196157,  0.00071455,  0.01406436, -0.0032281 ,  0.01014279,
        0.00375137, -0.0021955 , -0.0030007 ,  0.00928079, -0.02756799],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.7924054e-04,  7.5274971e-03,  2.6896011e-04, -2.3272948e-02,
        1.6294550e-02,  3.2241652e-03, -4.2094123e-03,  5.9355563e-05,
        2.1863144e-04, -2.9002942e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00057525, -0.00014874,  0.00087496, -0.00383829, -0.00042655,
       -0.00166678, -0.00080223,  0.00314972,  0.00098061,  0.00130207],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00055733,  0.01220241,  0.00052662, -0.00312366,  0.01393428,
       -0.00421308,  0.00120597, -0.00820748,  0.01445404, -0.02622174],
      dtype=float32)])]}
INFO flwr 2024-04-28 18:37:07,631 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:37:07,631 | app.py:229 | app_fit: losses_centralized [(0, 2.302816867828369), (1, 1.794127345085144), (2, 1.6255764961242676), (3, 1.5691269636154175), (4, 1.566884160041809), (5, 1.5703027248382568), (6, 1.5618913173675537), (7, 1.5737448930740356), (8, 1.5612190961837769), (9, 1.5686912536621094), (10, 1.5669529438018799)]
INFO flwr 2024-04-28 18:37:07,631 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0734), (1, 0.6645), (2, 0.8338), (3, 0.8924), (4, 0.8945), (5, 0.8896), (6, 0.8987), (7, 0.8877), (8, 0.8999), (9, 0.8931), (10, 0.8937)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8937
wandb:     loss 1.56695
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_183233-6xfbn4zx
wandb: Find logs at: ./wandb/offline-run-20240428_183233-6xfbn4zx/logs
INFO flwr 2024-04-28 18:37:11,243 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:37:17,621 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1324557)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1324557)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:37:25,624	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:37:27,384	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:37:27,718	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:37:27,720	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:37:38,527 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 79489118208.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 175474609152.0}
INFO flwr 2024-04-28 18:37:38,527 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:37:38,527 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:37:38,545 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:37:38,546 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:37:38,546 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:37:38,546 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:37:41,422 | server.py:94 | initial parameters (loss, other metrics): 2.304152250289917, {'accuracy': 0.0948, 'data_size': 10000}
INFO flwr 2024-04-28 18:37:41,422 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:37:41,423 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1328535)[0m 2024-04-28 18:37:46.877185: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1328535)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1328534)[0m 2024-04-28 18:37:52.071747: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(pid=1328536)[0m 2024-04-28 18:37:46.943650: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1328536)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1328534)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1328534)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1328533)[0m 2024-04-28 18:37:52.071748: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:38:46,363 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:38:47,590 | server.py:125 | fit progress: (1, 1.8485238552093506, {'accuracy': 0.6026, 'data_size': 10000}, 66.16750581900124)
INFO flwr 2024-04-28 18:38:47,590 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:38:47,590 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:39:13,270 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:39:14,528 | server.py:125 | fit progress: (2, 1.6049426794052124, {'accuracy': 0.8563, 'data_size': 10000}, 93.10568939999212)
INFO flwr 2024-04-28 18:39:14,529 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:39:14,529 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:39:38,296 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:39:39,779 | server.py:125 | fit progress: (3, 1.5852605104446411, {'accuracy': 0.8769, 'data_size': 10000}, 118.3563248559949)
INFO flwr 2024-04-28 18:39:39,779 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:39:39,779 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:40:02,203 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:40:03,683 | server.py:125 | fit progress: (4, 1.5690653324127197, {'accuracy': 0.8944, 'data_size': 10000}, 142.26105240298784)
INFO flwr 2024-04-28 18:40:03,684 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:40:03,684 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:40:26,780 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:40:28,256 | server.py:125 | fit progress: (5, 1.5793437957763672, {'accuracy': 0.881, 'data_size': 10000}, 166.83387273398694)
INFO flwr 2024-04-28 18:40:28,257 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:40:28,257 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:40:51,588 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:40:53,099 | server.py:125 | fit progress: (6, 1.5560534000396729, {'accuracy': 0.9057, 'data_size': 10000}, 191.67668646099628)
INFO flwr 2024-04-28 18:40:53,099 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:40:53,100 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:41:14,200 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:41:15,659 | server.py:125 | fit progress: (7, 1.5578508377075195, {'accuracy': 0.9033, 'data_size': 10000}, 214.23706757699256)
INFO flwr 2024-04-28 18:41:15,660 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:41:15,660 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:41:38,638 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:41:40,123 | server.py:125 | fit progress: (8, 1.5520238876342773, {'accuracy': 0.9096, 'data_size': 10000}, 238.7003203270142)
INFO flwr 2024-04-28 18:41:40,123 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:41:40,123 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:42:04,002 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:42:05,453 | server.py:125 | fit progress: (9, 1.5640170574188232, {'accuracy': 0.8979, 'data_size': 10000}, 264.03081167000346)
INFO flwr 2024-04-28 18:42:05,454 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:42:05,454 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:42:27,983 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:42:29,468 | server.py:125 | fit progress: (10, 1.548182487487793, {'accuracy': 0.9132, 'data_size': 10000}, 288.04556903999764)
INFO flwr 2024-04-28 18:42:29,468 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:42:29,468 | server.py:153 | FL finished in 288.04601311899023
INFO flwr 2024-04-28 18:42:29,469 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:42:29,474 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.8453062e-05,  3.7651267e-04, -9.2492998e-04,  1.8291912e-03,
       -1.3445610e-03,  2.3276005e-03, -2.5063416e-03, -1.3453383e-03,
       -9.5729448e-04,  2.5267527e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7500143e-05,  2.6078206e-02, -4.1344776e-04, -3.0306607e-04,
        9.0947351e-04,  1.6035957e-02,  6.8561954e-04, -4.8968098e-03,
       -3.9268766e-02,  1.1053969e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.6705326e-06,  3.4648122e-04, -1.6090066e-06, -3.1646324e-04,
        9.3048770e-04,  1.2382331e-03,  3.1287069e-05, -1.3250669e-03,
       -1.8036722e-04, -7.3260331e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.4315772e-06, -4.6482641e-04, -6.6375681e-03,  6.6183521e-03,
        5.5532814e-03,  3.1522333e-04, -2.4601910e-04, -1.5398588e-04,
        3.9450740e-04, -5.3755189e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0291611e-05, -9.0146204e-05,  2.8492168e-05,  1.3284037e-04,
       -2.0472145e-04, -5.7846410e-05, -1.2405579e-04,  1.2523833e-03,
        6.2946499e-05, -9.7957044e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.4813929e-05, -8.1046543e-04, -5.8271755e-03,  3.9980118e-03,
        1.6589582e-03, -5.9843995e-04,  7.8972441e-04, -4.3167159e-04,
        2.5165027e-03, -1.2506099e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5945634e-03,  4.3578946e-04,  7.1738592e-05, -2.6196265e-05,
        1.2062479e-04,  2.1388067e-02, -2.6628217e-03, -1.8459749e-04,
       -2.1941673e-02,  2.0453244e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0019876e-04,  9.3913823e-04,  4.6041326e-04,  1.5287590e-04,
       -1.0638125e-03, -4.5465984e-04,  8.5465494e-05,  2.0109082e-05,
        7.1943103e-04, -5.5875385e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.0757524e-05,  5.4915919e-05, -1.3485715e-04,  5.2293726e-06,
       -2.2055257e-04,  4.1770752e-04, -8.3181338e-05,  1.2025254e-04,
        1.9883318e-04, -4.2908904e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.8931128e-03,  5.7743514e-06, -1.9999587e-05,  2.2217019e-02,
        6.5365253e-04, -2.7042679e-02, -1.2265527e-04,  5.5876002e-04,
        1.5215320e-04,  7.0486841e-04], dtype=float32)])]}
INFO flwr 2024-04-28 18:42:29,474 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:42:29,474 | app.py:229 | app_fit: losses_centralized [(0, 2.304152250289917), (1, 1.8485238552093506), (2, 1.6049426794052124), (3, 1.5852605104446411), (4, 1.5690653324127197), (5, 1.5793437957763672), (6, 1.5560534000396729), (7, 1.5578508377075195), (8, 1.5520238876342773), (9, 1.5640170574188232), (10, 1.548182487487793)]
INFO flwr 2024-04-28 18:42:29,475 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0948), (1, 0.6026), (2, 0.8563), (3, 0.8769), (4, 0.8944), (5, 0.881), (6, 0.9057), (7, 0.9033), (8, 0.9096), (9, 0.8979), (10, 0.9132)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9132
wandb:     loss 1.54818
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_183713-x43uuc3l
wandb: Find logs at: ./wandb/offline-run-20240428_183713-x43uuc3l/logs
INFO flwr 2024-04-28 18:42:33,099 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:42:34,019 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1328533)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1328533)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:42:39,652	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:42:40,518	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:42:40,928	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:42:40,930	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:42:51,745 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 79460444160.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 175407703040.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 18:42:51,745 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:42:51,745 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:42:51,763 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:42:51,765 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:42:51,765 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:42:51,765 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:42:54,533 | server.py:94 | initial parameters (loss, other metrics): 2.3035645484924316, {'accuracy': 0.0768, 'data_size': 10000}
INFO flwr 2024-04-28 18:42:54,533 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:42:54,534 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1332913)[0m 2024-04-28 18:42:57.985413: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1332913)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1332913)[0m 2024-04-28 18:43:00.524047: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1332913)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1332913)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1332919)[0m 2024-04-28 18:42:58.084324: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1332919)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1332919)[0m 2024-04-28 18:43:00.524047: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:43:33,727 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:43:35,022 | server.py:125 | fit progress: (1, 1.6685154438018799, {'accuracy': 0.8037, 'data_size': 10000}, 40.48896926699672)
INFO flwr 2024-04-28 18:43:35,023 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:43:35,023 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:43:57,345 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:43:58,798 | server.py:125 | fit progress: (2, 1.6185311079025269, {'accuracy': 0.8418, 'data_size': 10000}, 64.26498655299656)
INFO flwr 2024-04-28 18:43:58,799 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:43:58,799 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:44:19,810 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:44:21,272 | server.py:125 | fit progress: (3, 1.574885368347168, {'accuracy': 0.8866, 'data_size': 10000}, 86.73883912997553)
INFO flwr 2024-04-28 18:44:21,273 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:44:21,273 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:44:44,036 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:44:45,500 | server.py:125 | fit progress: (4, 1.5874501466751099, {'accuracy': 0.8739, 'data_size': 10000}, 110.96686108698486)
INFO flwr 2024-04-28 18:44:45,501 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:44:45,501 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:45:06,011 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:45:07,485 | server.py:125 | fit progress: (5, 1.578892707824707, {'accuracy': 0.8821, 'data_size': 10000}, 132.95177064900054)
INFO flwr 2024-04-28 18:45:07,486 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:45:07,486 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:45:29,242 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:45:30,724 | server.py:125 | fit progress: (6, 1.5635960102081299, {'accuracy': 0.8965, 'data_size': 10000}, 156.1905549619987)
INFO flwr 2024-04-28 18:45:30,724 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:45:30,725 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:45:50,212 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:45:51,695 | server.py:125 | fit progress: (7, 1.5583049058914185, {'accuracy': 0.9031, 'data_size': 10000}, 177.1613801609783)
INFO flwr 2024-04-28 18:45:51,695 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:45:51,695 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:46:16,378 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:46:17,846 | server.py:125 | fit progress: (8, 1.5877883434295654, {'accuracy': 0.8735, 'data_size': 10000}, 203.31251296799746)
INFO flwr 2024-04-28 18:46:17,846 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:46:17,846 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:46:40,174 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:46:41,591 | server.py:125 | fit progress: (9, 1.554363489151001, {'accuracy': 0.9073, 'data_size': 10000}, 227.05710169297527)
INFO flwr 2024-04-28 18:46:41,591 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:46:41,591 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:47:05,067 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:47:06,570 | server.py:125 | fit progress: (10, 1.559617280960083, {'accuracy': 0.9015, 'data_size': 10000}, 252.0365978779737)
INFO flwr 2024-04-28 18:47:06,570 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:47:06,571 | server.py:153 | FL finished in 252.03704759498942
INFO flwr 2024-04-28 18:47:06,571 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:47:06,576 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00102889, -0.00659212, -0.00535782,  0.00034005,  0.00055223,
        0.00142213,  0.0051942 ,  0.00439163, -0.00563298,  0.00671162],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.69409136e-03,  6.06153673e-03, -7.30401225e-05, -7.22981151e-03,
        2.25555655e-02,  4.09862027e-03,  3.76653770e-05,  2.02579377e-03,
        1.19671095e-04, -2.59018578e-02], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00180263,  0.0147772 ,  0.00066714, -0.00238467,  0.00346573,
        0.00129747, -0.00885525,  0.00166104, -0.0131755 ,  0.00074424],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.9484073e-06, -2.4882467e-05,  3.1569711e-04, -7.4870455e-05,
       -1.1539944e-03,  8.0529172e-03, -1.6602795e-05, -1.2306924e-06,
       -6.8678232e-03, -2.2323326e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0823661e-06, -4.8219728e-05,  7.7023115e-03,  8.9993803e-03,
       -1.7714208e-02, -1.1195814e-03,  1.0888148e-06, -3.3216056e-05,
        4.1227867e-03, -1.9123969e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9558100e-03, -9.1270318e-05,  1.1942637e-07,  4.4689612e-03,
       -2.0981937e-04, -2.9876931e-03,  3.2749219e-04,  6.8165694e-04,
        5.3388759e-04, -7.6749380e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1541670e-04, -3.2930766e-05,  4.2555846e-05, -6.3420663e-04,
       -8.3922851e-04,  8.3719501e-03, -1.8915655e-04,  3.7026188e-05,
       -7.5845150e-03,  1.0439395e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2570286e-04,  1.4386840e-04,  9.2868265e-03, -9.2078056e-03,
        6.6470020e-06,  6.5137260e-03, -6.1214287e-03, -1.8007026e-04,
       -1.3573492e-04, -1.8029989e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.3380322e-05,  1.0795416e-05,  2.4959330e-05,  1.4105600e-03,
       -7.3158764e-04, -1.5753467e-02,  2.1156423e-04, -4.3612517e-06,
        1.4695442e-02,  1.6947977e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2807854e-04,  1.2394597e-04,  1.8325656e-04,  5.4346182e-04,
        1.7725128e-03, -5.2126456e-04, -1.2905715e-06,  8.7619293e-04,
       -1.1747479e-03, -1.5739831e-03], dtype=float32)])]}
INFO flwr 2024-04-28 18:47:06,576 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:47:06,576 | app.py:229 | app_fit: losses_centralized [(0, 2.3035645484924316), (1, 1.6685154438018799), (2, 1.6185311079025269), (3, 1.574885368347168), (4, 1.5874501466751099), (5, 1.578892707824707), (6, 1.5635960102081299), (7, 1.5583049058914185), (8, 1.5877883434295654), (9, 1.554363489151001), (10, 1.559617280960083)]
INFO flwr 2024-04-28 18:47:06,577 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0768), (1, 0.8037), (2, 0.8418), (3, 0.8866), (4, 0.8739), (5, 0.8821), (6, 0.8965), (7, 0.9031), (8, 0.8735), (9, 0.9073), (10, 0.9015)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9015
wandb:     loss 1.55962
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_184233-5ixztapa
wandb: Find logs at: ./wandb/offline-run-20240428_184233-5ixztapa/logs
INFO flwr 2024-04-28 18:47:10,233 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:47:14,709 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1332919)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1332919)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:47:21,639	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:47:22,556	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:47:22,901	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:47:22,902	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:47:33,719 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'object_store_memory': 79458863923.0, 'node:10.20.240.13': 1.0, 'memory': 175404015821.0}
INFO flwr 2024-04-28 18:47:33,719 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:47:33,719 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:47:33,735 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:47:33,735 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:47:33,736 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:47:33,736 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:47:37,236 | server.py:94 | initial parameters (loss, other metrics): 2.304069757461548, {'accuracy': 0.0882, 'data_size': 10000}
INFO flwr 2024-04-28 18:47:37,236 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:47:37,236 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1337114)[0m 2024-04-28 18:47:40.435317: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1337114)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1337114)[0m 2024-04-28 18:47:44.984244: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1337114)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1337114)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1337111)[0m 2024-04-28 18:47:40.557586: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1337111)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1337113)[0m 2024-04-28 18:47:44.984244: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:48:25,310 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:48:26,780 | server.py:125 | fit progress: (1, 1.88541579246521, {'accuracy': 0.5883, 'data_size': 10000}, 49.54346973999054)
INFO flwr 2024-04-28 18:48:26,780 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:48:26,780 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:48:49,721 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:48:51,216 | server.py:125 | fit progress: (2, 1.7357314825057983, {'accuracy': 0.7235, 'data_size': 10000}, 73.9800938309927)
INFO flwr 2024-04-28 18:48:51,217 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:48:51,217 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:49:15,596 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:49:17,071 | server.py:125 | fit progress: (3, 1.6087323427200317, {'accuracy': 0.8509, 'data_size': 10000}, 99.83467240599566)
INFO flwr 2024-04-28 18:49:17,071 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:49:17,072 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:49:41,553 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:49:42,977 | server.py:125 | fit progress: (4, 1.5991008281707764, {'accuracy': 0.8614, 'data_size': 10000}, 125.74055725100334)
INFO flwr 2024-04-28 18:49:42,977 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:49:42,977 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:50:06,103 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:50:07,551 | server.py:125 | fit progress: (5, 1.6050536632537842, {'accuracy': 0.8554, 'data_size': 10000}, 150.3145968960016)
INFO flwr 2024-04-28 18:50:07,551 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:50:07,551 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:50:31,978 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:50:33,227 | server.py:125 | fit progress: (6, 1.5684871673583984, {'accuracy': 0.8917, 'data_size': 10000}, 175.9909784019983)
INFO flwr 2024-04-28 18:50:33,228 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:50:33,228 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:50:54,184 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:50:55,439 | server.py:125 | fit progress: (7, 1.5614643096923828, {'accuracy': 0.8997, 'data_size': 10000}, 198.20264847399085)
INFO flwr 2024-04-28 18:50:55,439 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:50:55,439 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:51:16,226 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:51:17,692 | server.py:125 | fit progress: (8, 1.5632377862930298, {'accuracy': 0.8977, 'data_size': 10000}, 220.4556642390089)
INFO flwr 2024-04-28 18:51:17,692 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:51:17,693 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:51:40,345 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:51:41,789 | server.py:125 | fit progress: (9, 1.55961275100708, {'accuracy': 0.9008, 'data_size': 10000}, 244.55320215399843)
INFO flwr 2024-04-28 18:51:41,790 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:51:41,790 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:52:04,155 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:52:05,604 | server.py:125 | fit progress: (10, 1.5841039419174194, {'accuracy': 0.8759, 'data_size': 10000}, 268.3681215149991)
INFO flwr 2024-04-28 18:52:05,605 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:52:05,605 | server.py:153 | FL finished in 268.36866337800166
INFO flwr 2024-04-28 18:52:05,605 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:52:05,611 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1928088e-06,  2.5873276e-05,  4.0269289e-03,  4.1044498e-04,
       -9.0775738e-04, -5.1021772e-03,  1.2766464e-04,  7.0208526e-04,
        4.4554818e-04,  2.7257513e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00092594,  0.00345675, -0.00229711, -0.02984808,  0.00019838,
        0.02765469,  0.00028094, -0.00086824,  0.00196432,  0.0003843 ],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00856302,  0.03758961,  0.01040391, -0.00695186, -0.00747031,
        0.01237667, -0.00302333, -0.00224556, -0.04164798,  0.00953187],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.7979628e-03, -1.8192792e-03, -5.4301424e-03, -3.5791984e-04,
        9.5296251e-03,  3.2146054e-05,  3.6872716e-03,  1.7581310e-02,
        9.1167039e-04, -2.7932631e-02], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00204721,  0.00677244, -0.01157097,  0.0060928 ,  0.00031191,
        0.00769373, -0.00255181,  0.00105042, -0.01857126,  0.01281995],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0064488 ,  0.01893903, -0.00713226, -0.0031936 ,  0.00096378,
        0.00988758,  0.00069517,  0.00024785, -0.01591675, -0.01093959],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.2457158e-05,  5.1951855e-03,  8.2689757e-03, -2.3067060e-03,
       -8.8183425e-04,  4.3213856e-04, -1.1333995e-02,  5.8827450e-04,
       -4.9324990e-03,  5.0429143e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.39897262e-04, -1.17792488e-05,  1.47282025e-02,  6.45016786e-03,
        1.34973205e-03, -1.78489871e-02, -2.96280748e-04, -3.58927320e-03,
        2.28179153e-02, -2.26597805e-02], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00407333, -0.00270623,  0.00246299, -0.00203826, -0.00020339,
        0.00022478, -0.0007485 , -0.002463  ,  0.00552889, -0.0041306 ],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.01778427,  0.02168979, -0.01964119, -0.00158146, -0.00032601,
        0.02550346, -0.01411838,  0.01367858, -0.03756014, -0.00542893],
      dtype=float32)])]}
INFO flwr 2024-04-28 18:52:05,611 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:52:05,611 | app.py:229 | app_fit: losses_centralized [(0, 2.304069757461548), (1, 1.88541579246521), (2, 1.7357314825057983), (3, 1.6087323427200317), (4, 1.5991008281707764), (5, 1.6050536632537842), (6, 1.5684871673583984), (7, 1.5614643096923828), (8, 1.5632377862930298), (9, 1.55961275100708), (10, 1.5841039419174194)]
INFO flwr 2024-04-28 18:52:05,611 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0882), (1, 0.5883), (2, 0.7235), (3, 0.8509), (4, 0.8614), (5, 0.8554), (6, 0.8917), (7, 0.8997), (8, 0.8977), (9, 0.9008), (10, 0.8759)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8759
wandb:     loss 1.5841
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_184713-tnivnmi7
wandb: Find logs at: ./wandb/offline-run-20240428_184713-tnivnmi7/logs
INFO flwr 2024-04-28 18:52:09,223 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:52:10,109 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1337113)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1337113)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:52:16,632	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:52:17,560	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:52:17,895	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:52:17,896	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:52:29,431 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'memory': 175431130932.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 79470484684.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 18:52:29,431 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:52:29,431 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:52:29,447 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:52:29,448 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:52:29,449 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:52:29,449 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:52:31,860 | server.py:94 | initial parameters (loss, other metrics): 2.299149513244629, {'accuracy': 0.1618, 'data_size': 10000}
INFO flwr 2024-04-28 18:52:31,860 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:52:31,860 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1341093)[0m 2024-04-28 18:52:36.208185: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1341093)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1341093)[0m 2024-04-28 18:52:38.987348: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1341093)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1341093)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1341098)[0m 2024-04-28 18:52:36.190400: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1341098)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1341098)[0m 2024-04-28 18:52:38.991232: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:53:17,483 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:53:18,737 | server.py:125 | fit progress: (1, 1.8475831747055054, {'accuracy': 0.6068, 'data_size': 10000}, 46.87663111000438)
INFO flwr 2024-04-28 18:53:18,737 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:53:18,738 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:53:47,181 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:53:48,424 | server.py:125 | fit progress: (2, 1.741410493850708, {'accuracy': 0.7181, 'data_size': 10000}, 76.56392000001506)
INFO flwr 2024-04-28 18:53:48,425 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:53:48,425 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:54:10,029 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:54:11,495 | server.py:125 | fit progress: (3, 1.6856476068496704, {'accuracy': 0.7736, 'data_size': 10000}, 99.6347716129967)
INFO flwr 2024-04-28 18:54:11,495 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:54:11,496 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:54:33,625 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:54:35,060 | server.py:125 | fit progress: (4, 1.6778873205184937, {'accuracy': 0.7822, 'data_size': 10000}, 123.19973652399494)
INFO flwr 2024-04-28 18:54:35,060 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:54:35,061 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:55:00,683 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:55:02,159 | server.py:125 | fit progress: (5, 1.6613068580627441, {'accuracy': 0.7986, 'data_size': 10000}, 150.29893522101338)
INFO flwr 2024-04-28 18:55:02,160 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:55:02,160 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:55:22,763 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 18:55:24,207 | server.py:125 | fit progress: (6, 1.6543492078781128, {'accuracy': 0.8062, 'data_size': 10000}, 172.3467828819994)
INFO flwr 2024-04-28 18:55:24,207 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 18:55:24,208 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:55:46,415 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 18:55:47,872 | server.py:125 | fit progress: (7, 1.6464149951934814, {'accuracy': 0.8145, 'data_size': 10000}, 196.01194548798958)
INFO flwr 2024-04-28 18:55:47,873 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 18:55:47,873 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:56:08,351 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 18:56:09,833 | server.py:125 | fit progress: (8, 1.6422535181045532, {'accuracy': 0.818, 'data_size': 10000}, 217.97299970898894)
INFO flwr 2024-04-28 18:56:09,834 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 18:56:09,834 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:56:34,516 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 18:56:35,994 | server.py:125 | fit progress: (9, 1.638144850730896, {'accuracy': 0.8227, 'data_size': 10000}, 244.13322168501327)
INFO flwr 2024-04-28 18:56:35,994 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 18:56:35,994 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:56:59,679 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 18:57:01,147 | server.py:125 | fit progress: (10, 1.6420769691467285, {'accuracy': 0.8176, 'data_size': 10000}, 269.28690049101715)
INFO flwr 2024-04-28 18:57:01,147 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 18:57:01,148 | server.py:153 | FL finished in 269.2873191430117
INFO flwr 2024-04-28 18:57:01,148 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 18:57:01,153 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.0230900e-03, -4.3949387e-03,  2.3602494e-03, -5.9633458e-05,
        1.3577465e-04,  4.9718427e-03, -4.9732858e-05, -1.0729747e-04,
        5.8180123e-04,  5.8504340e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4966843e-03, -8.9056818e-03,  8.3697783e-03, -4.6547912e-03,
       -1.3881024e-03,  2.0719492e-03, -2.7224780e-07,  1.5020423e-03,
        4.9116346e-03, -4.0986590e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5850910e-04,  5.6879764e-04, -1.7481475e-03,  7.2036432e-03,
        2.0343025e-04, -5.5050654e-03, -2.0076589e-09, -1.2973108e-03,
        3.1073621e-04,  5.4242328e-06], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2527309e-04,  9.9188241e-04,  9.2076814e-05, -7.5417670e-04,
       -9.5516839e-04,  1.9134596e-04, -2.8500082e-08,  1.4606257e-03,
        1.3220217e-04, -9.3347946e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1109727e-04, -6.4536993e-04, -1.0025931e-03, -7.2889980e-03,
        9.6830272e-04,  7.6143560e-03, -7.9688471e-11,  9.5789752e-04,
       -2.2361263e-04, -4.9106363e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.5417039e-04, -9.0620742e-06,  1.2827071e-03,  3.9441915e-05,
       -9.9265249e-04, -3.8720533e-04, -1.4362879e-12,  6.3832209e-05,
        5.2746822e-04, -2.7035156e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.3252582e-04,  5.7521315e-06, -9.2161982e-04, -3.8737009e-04,
       -5.3273718e-04,  1.2989971e-03, -1.1665997e-11, -2.3478989e-03,
        2.1013159e-04,  2.9072785e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2594636e-04, -3.2899240e-03, -8.6335227e-04,  7.6097362e-03,
       -1.4894983e-03,  3.8220717e-03, -1.2766688e-13,  3.9358740e-04,
       -6.1321850e-03, -1.7637535e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.9621619e-05, -8.8399351e-03,  1.1131440e-03,  2.2270467e-02,
       -2.2467255e-04, -3.0330545e-03, -9.2682209e-11,  2.0486836e-05,
       -1.0759693e-02, -5.7634880e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.0144023e-05, -1.0508312e-05, -6.0248858e-04,  1.5810308e-04,
        6.4693764e-04,  3.4100496e-05,  6.7407072e-13, -2.9103534e-04,
        1.0163515e-02, -1.0148744e-02], dtype=float32)])]}
INFO flwr 2024-04-28 18:57:01,153 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 18:57:01,154 | app.py:229 | app_fit: losses_centralized [(0, 2.299149513244629), (1, 1.8475831747055054), (2, 1.741410493850708), (3, 1.6856476068496704), (4, 1.6778873205184937), (5, 1.6613068580627441), (6, 1.6543492078781128), (7, 1.6464149951934814), (8, 1.6422535181045532), (9, 1.638144850730896), (10, 1.6420769691467285)]
INFO flwr 2024-04-28 18:57:01,154 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1618), (1, 0.6068), (2, 0.7181), (3, 0.7736), (4, 0.7822), (5, 0.7986), (6, 0.8062), (7, 0.8145), (8, 0.818), (9, 0.8227), (10, 0.8176)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8176
wandb:     loss 1.64208
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_185209-0oirlxud
wandb: Find logs at: ./wandb/offline-run-20240428_185209-0oirlxud/logs
INFO flwr 2024-04-28 18:57:04,767 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 18:57:05,736 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1341098)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1341098)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 18:57:11,605	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 18:57:12,162	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 18:57:12,524	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 18:57:12,526	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 18:57:23,438 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 79398629376.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 175263468544.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-28 18:57:23,438 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 18:57:23,439 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 18:57:23,458 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 18:57:23,459 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 18:57:23,460 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 18:57:23,460 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 18:57:26,172 | server.py:94 | initial parameters (loss, other metrics): 2.3048603534698486, {'accuracy': 0.098, 'data_size': 10000}
INFO flwr 2024-04-28 18:57:26,173 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 18:57:26,173 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1344831)[0m 2024-04-28 18:57:29.644128: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1344831)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1344834)[0m 2024-04-28 18:57:31.964632: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1344834)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1344834)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1344832)[0m 2024-04-28 18:57:29.744100: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1344832)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1344839)[0m 2024-04-28 18:57:32.067222: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 18:58:04,908 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 18:58:06,126 | server.py:125 | fit progress: (1, 2.0115668773651123, {'accuracy': 0.435, 'data_size': 10000}, 39.952792650001356)
INFO flwr 2024-04-28 18:58:06,126 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 18:58:06,126 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:58:27,076 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 18:58:28,553 | server.py:125 | fit progress: (2, 1.8517576456069946, {'accuracy': 0.607, 'data_size': 10000}, 62.3798960300046)
INFO flwr 2024-04-28 18:58:28,553 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 18:58:28,553 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:58:48,649 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 18:58:50,104 | server.py:125 | fit progress: (3, 1.7535910606384277, {'accuracy': 0.7058, 'data_size': 10000}, 83.93139950401383)
INFO flwr 2024-04-28 18:58:50,105 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 18:58:50,105 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:59:12,656 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 18:59:14,135 | server.py:125 | fit progress: (4, 1.7815488576889038, {'accuracy': 0.6781, 'data_size': 10000}, 107.96250798599795)
INFO flwr 2024-04-28 18:59:14,136 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 18:59:14,136 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 18:59:36,495 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 18:59:37,968 | server.py:125 | fit progress: (5, 1.7077348232269287, {'accuracy': 0.7517, 'data_size': 10000}, 131.79555923800217)
INFO flwr 2024-04-28 18:59:37,969 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 18:59:37,969 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:00:00,172 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:00:01,614 | server.py:125 | fit progress: (6, 1.6589558124542236, {'accuracy': 0.8003, 'data_size': 10000}, 155.44141389100696)
INFO flwr 2024-04-28 19:00:01,615 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:00:01,615 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:00:24,688 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:00:26,121 | server.py:125 | fit progress: (7, 1.653443694114685, {'accuracy': 0.8069, 'data_size': 10000}, 179.948348342994)
INFO flwr 2024-04-28 19:00:26,121 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:00:26,122 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:00:48,709 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:00:50,187 | server.py:125 | fit progress: (8, 1.646714210510254, {'accuracy': 0.8137, 'data_size': 10000}, 204.01374065200798)
INFO flwr 2024-04-28 19:00:50,187 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:00:50,187 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:01:14,350 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:01:15,807 | server.py:125 | fit progress: (9, 1.6419885158538818, {'accuracy': 0.8182, 'data_size': 10000}, 229.6337759809976)
INFO flwr 2024-04-28 19:01:15,807 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:01:15,807 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:01:39,011 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:01:40,523 | server.py:125 | fit progress: (10, 1.6415213346481323, {'accuracy': 0.8195, 'data_size': 10000}, 254.34983781600022)
INFO flwr 2024-04-28 19:01:40,523 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:01:40,523 | server.py:153 | FL finished in 254.3503034299938
INFO flwr 2024-04-28 19:01:40,523 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:01:40,529 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.0811960e-03, -9.1737020e-06,  9.5452083e-04, -8.3180566e-06,
       -1.2382878e-03, -8.9613451e-03, -9.5844659e-04,  1.4388061e-03,
       -2.9012712e-04, -8.8163897e-06], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.7757922e-05, -2.4070645e-04,  3.0335580e-04, -2.3338667e-05,
       -1.3362422e-03,  1.6867478e-03, -5.1270998e-08, -1.8252637e-03,
        9.9527068e-04,  3.5248586e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.0367359e-03,  5.9801085e-05, -3.2186336e-04, -4.5941711e-08,
       -3.3970871e-03, -2.4851456e-02, -2.9368047e-10,  1.2256250e-04,
        2.0812312e-02,  2.5390505e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0714561e-04,  4.4794981e-03,  1.7497950e-04, -9.5083233e-05,
       -2.9198849e-04, -3.0747242e-04, -4.9104849e-09, -4.7709007e-04,
       -3.6366922e-03,  4.6728361e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4402359e-04, -5.3830714e-05,  3.1058019e-04,  1.1291567e-03,
        2.7931586e-03, -1.0132697e-02, -3.1898204e-10,  8.8007633e-05,
        8.5103540e-03, -2.7887465e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1390903e-02,  1.9949495e-03,  5.7687448e-05,  2.9411868e-03,
        2.0227885e-02,  1.2398989e-02, -9.8407541e-12, -1.3136981e-03,
       -1.3648811e-03, -2.3551207e-02], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0854590e-03, -1.5937346e-03,  6.7467918e-03,  1.8339799e-03,
        2.6771039e-04, -3.8937878e-04, -8.4583480e-13, -4.9167969e-03,
       -9.6073456e-04,  1.0976258e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.8960569e-06, -1.0317175e-04, -4.1795825e-05,  1.1603418e-03,
        6.7294564e-04,  1.5922957e-03, -3.2605366e-12,  3.1912667e-03,
       -8.5233111e-04, -5.6284470e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6096052e-04, -2.5366626e-03,  3.7243550e-03,  2.4483739e-03,
       -4.3844848e-04,  9.4736746e-04, -3.2753416e-14, -6.2065721e-03,
        1.2881345e-03,  1.2344186e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4282423e-05, -5.1177124e-04, -1.4465096e-03,  2.1229398e-04,
        3.5353444e-04, -2.6271418e-05,  3.6427036e-17,  1.1646106e-05,
        1.1631713e-03,  2.5817606e-04], dtype=float32)])]}
INFO flwr 2024-04-28 19:01:40,529 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:01:40,529 | app.py:229 | app_fit: losses_centralized [(0, 2.3048603534698486), (1, 2.0115668773651123), (2, 1.8517576456069946), (3, 1.7535910606384277), (4, 1.7815488576889038), (5, 1.7077348232269287), (6, 1.6589558124542236), (7, 1.653443694114685), (8, 1.646714210510254), (9, 1.6419885158538818), (10, 1.6415213346481323)]
INFO flwr 2024-04-28 19:01:40,529 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.098), (1, 0.435), (2, 0.607), (3, 0.7058), (4, 0.6781), (5, 0.7517), (6, 0.8003), (7, 0.8069), (8, 0.8137), (9, 0.8182), (10, 0.8195)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8195
wandb:     loss 1.64152
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_185705-wbdzhzi6
wandb: Find logs at: ./wandb/offline-run-20240428_185705-wbdzhzi6/logs
INFO flwr 2024-04-28 19:01:44,127 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:01:44,788 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1344831)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1344831)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:01:49,541	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:01:49,989	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:01:50,367	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:01:50,369	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 19:02:01,282 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79357325721.0, 'node:10.20.240.13': 1.0, 'memory': 175167093351.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:__internal_head__': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-28 19:02:01,282 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:02:01,282 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:02:01,298 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:02:01,299 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:02:01,299 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:02:01,300 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:02:04,147 | server.py:94 | initial parameters (loss, other metrics): 2.3016185760498047, {'accuracy': 0.1246, 'data_size': 10000}
INFO flwr 2024-04-28 19:02:04,148 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:02:04,148 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1348609)[0m 2024-04-28 19:02:07.420219: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1348609)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1348609)[0m 2024-04-28 19:02:09.677925: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1348614)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1348614)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1348604)[0m 2024-04-28 19:02:07.576791: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1348604)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1348604)[0m 2024-04-28 19:02:09.915000: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:02:42,496 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:02:43,982 | server.py:125 | fit progress: (1, 2.1727943420410156, {'accuracy': 0.2826, 'data_size': 10000}, 39.834249460021965)
INFO flwr 2024-04-28 19:02:43,983 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:02:43,983 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:03:07,924 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:03:09,423 | server.py:125 | fit progress: (2, 2.163970708847046, {'accuracy': 0.2945, 'data_size': 10000}, 65.2747729110124)
INFO flwr 2024-04-28 19:03:09,423 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:03:09,423 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:03:32,779 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:03:34,237 | server.py:125 | fit progress: (3, 2.004091501235962, {'accuracy': 0.4556, 'data_size': 10000}, 90.08912733901525)
INFO flwr 2024-04-28 19:03:34,237 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:03:34,238 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:03:59,158 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:04:00,625 | server.py:125 | fit progress: (4, 2.0043742656707764, {'accuracy': 0.4556, 'data_size': 10000}, 116.47706057500909)
INFO flwr 2024-04-28 19:04:00,625 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:04:00,626 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:04:23,554 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:04:25,006 | server.py:125 | fit progress: (5, 1.995763897895813, {'accuracy': 0.4643, 'data_size': 10000}, 140.85789295600262)
INFO flwr 2024-04-28 19:04:25,006 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:04:25,006 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:04:47,597 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:04:48,857 | server.py:125 | fit progress: (6, 1.99061918258667, {'accuracy': 0.4697, 'data_size': 10000}, 164.70890222702292)
INFO flwr 2024-04-28 19:04:48,857 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:04:48,857 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:05:09,377 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:05:10,616 | server.py:125 | fit progress: (7, 1.9971483945846558, {'accuracy': 0.4626, 'data_size': 10000}, 186.46840704602073)
INFO flwr 2024-04-28 19:05:10,617 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:05:10,617 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:05:33,732 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:05:35,200 | server.py:125 | fit progress: (8, 1.9920880794525146, {'accuracy': 0.4679, 'data_size': 10000}, 211.05242390101193)
INFO flwr 2024-04-28 19:05:35,201 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:05:35,201 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:05:56,146 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:05:57,603 | server.py:125 | fit progress: (9, 1.9920203685760498, {'accuracy': 0.4682, 'data_size': 10000}, 233.45496208101395)
INFO flwr 2024-04-28 19:05:57,603 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:05:57,603 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:06:20,004 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:06:21,478 | server.py:125 | fit progress: (10, 1.988876223564148, {'accuracy': 0.4716, 'data_size': 10000}, 257.33002985300845)
INFO flwr 2024-04-28 19:06:21,478 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:06:21,479 | server.py:153 | FL finished in 257.3304723530018
INFO flwr 2024-04-28 19:06:21,479 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:06:21,487 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.18480231e-04, -1.03806784e-07, -2.50197818e-08,  1.68467250e-05,
       -2.30464003e-08, -2.24426646e-08, -3.02367902e-04,  4.77375666e-04,
       -7.31808977e-05, -1.96427870e-08], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.3208415e-04, -1.2804014e-08,  3.4931486e-03, -2.8571684e-08,
       -3.9051615e-09, -1.9624352e-11, -1.1184142e-03, -3.8083091e-03,
        8.0158707e-04, -4.9088932e-08], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.1840412e-04, -5.4005217e-10, -7.7654229e-04, -1.6680657e-09,
       -5.6881144e-10, -8.9025544e-11, -2.6606183e-04,  4.4556381e-03,
       -2.8946223e-03, -3.8061077e-10], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3228188e-03, -8.4873140e-09,  3.0488649e-03, -2.7788170e-08,
       -1.6306028e-09, -5.4972388e-10,  8.9525786e-04,  3.9978593e-04,
       -3.0210458e-03, -4.9366422e-09], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.0385832e-05, -7.7479551e-11, -1.7628450e-03, -6.8433637e-10,
       -1.7133328e-10, -6.6785695e-11,  8.4044384e-03,  2.2669585e-05,
       -6.6038659e-03, -1.1989529e-10], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5480228e-03, -8.5189156e-10,  2.8195251e-03, -3.4445574e-10,
       -9.8094512e-11, -4.2413750e-12,  7.2759122e-04,  1.6170772e-03,
       -3.6161609e-03, -9.1536535e-11], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1877734e-02, -2.8630207e-09,  8.6662639e-03, -9.1940605e-10,
       -1.5947066e-08, -8.4468934e-12, -4.3566417e-02,  6.5454324e-03,
       -3.5230038e-03, -5.2675864e-10], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5834457e-04, -9.3387442e-10,  6.8977824e-05, -1.0627632e-10,
       -2.9269902e-11, -9.5438349e-13, -3.2371315e-04,  2.9996538e-03,
       -3.0032571e-03, -3.6042565e-11], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.2093919e-04, -1.7992479e-11, -4.6080747e-03, -4.4001439e-12,
       -9.2564313e-13, -5.4416209e-14,  6.3664531e-03, -2.9180374e-04,
       -8.4564084e-04, -1.2568194e-12], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2919497e-04, -4.9224996e-13, -3.2993706e-03, -2.3713524e-13,
       -2.7489697e-12, -3.1556718e-16,  2.4388854e-03, -7.3203410e-04,
        1.4633276e-03, -1.1849715e-12], dtype=float32)])]}
INFO flwr 2024-04-28 19:06:21,487 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:06:21,487 | app.py:229 | app_fit: losses_centralized [(0, 2.3016185760498047), (1, 2.1727943420410156), (2, 2.163970708847046), (3, 2.004091501235962), (4, 2.0043742656707764), (5, 1.995763897895813), (6, 1.99061918258667), (7, 1.9971483945846558), (8, 1.9920880794525146), (9, 1.9920203685760498), (10, 1.988876223564148)]
INFO flwr 2024-04-28 19:06:21,487 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1246), (1, 0.2826), (2, 0.2945), (3, 0.4556), (4, 0.4556), (5, 0.4643), (6, 0.4697), (7, 0.4626), (8, 0.4679), (9, 0.4682), (10, 0.4716)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.4716
wandb:     loss 1.98888
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_190144-jz15spwo
wandb: Find logs at: ./wandb/offline-run-20240428_190144-jz15spwo/logs
INFO flwr 2024-04-28 19:06:25,087 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:06:25,764 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1348598)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1348598)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:06:30,504	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:06:30,866	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:06:31,208	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:06:31,210	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 19:06:42,220 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79355376844.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'memory': 175162545972.0, 'node:10.20.240.13': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 19:06:42,221 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:06:42,221 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:06:42,236 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:06:42,237 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:06:42,238 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:06:42,238 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:06:45,466 | server.py:94 | initial parameters (loss, other metrics): 2.3034725189208984, {'accuracy': 0.077, 'data_size': 10000}
INFO flwr 2024-04-28 19:06:45,467 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:06:45,467 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1352364)[0m 2024-04-28 19:06:48.297915: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1352364)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1352364)[0m 2024-04-28 19:06:50.582779: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1352364)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1352364)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1352362)[0m 2024-04-28 19:06:48.520369: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1352362)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1352363)[0m 2024-04-28 19:06:50.745797: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:07:39,771 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:07:41,023 | server.py:125 | fit progress: (1, 1.7356265783309937, {'accuracy': 0.7421, 'data_size': 10000}, 55.55631998498575)
INFO flwr 2024-04-28 19:07:41,023 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:07:41,024 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:08:29,624 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:08:30,886 | server.py:125 | fit progress: (2, 1.6189273595809937, {'accuracy': 0.851, 'data_size': 10000}, 105.41905754499021)
INFO flwr 2024-04-28 19:08:30,886 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:08:30,886 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:09:10,910 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:09:12,387 | server.py:125 | fit progress: (3, 1.5671896934509277, {'accuracy': 0.9026, 'data_size': 10000}, 146.91998625700944)
INFO flwr 2024-04-28 19:09:12,387 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:09:12,387 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:09:56,670 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:09:58,126 | server.py:125 | fit progress: (4, 1.5713951587677002, {'accuracy': 0.8957, 'data_size': 10000}, 192.6592077559908)
INFO flwr 2024-04-28 19:09:58,126 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:09:58,127 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:10:41,420 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:10:42,866 | server.py:125 | fit progress: (5, 1.5609766244888306, {'accuracy': 0.9054, 'data_size': 10000}, 237.39934797899332)
INFO flwr 2024-04-28 19:10:42,866 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:10:42,867 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:11:24,938 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:11:26,424 | server.py:125 | fit progress: (6, 1.5579650402069092, {'accuracy': 0.907, 'data_size': 10000}, 280.95718036498874)
INFO flwr 2024-04-28 19:11:26,424 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:11:26,424 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:12:08,832 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:12:10,307 | server.py:125 | fit progress: (7, 1.5702499151229858, {'accuracy': 0.8933, 'data_size': 10000}, 324.84030643000733)
INFO flwr 2024-04-28 19:12:10,307 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:12:10,308 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:12:51,326 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:12:52,784 | server.py:125 | fit progress: (8, 1.55787193775177, {'accuracy': 0.9065, 'data_size': 10000}, 367.31701417200384)
INFO flwr 2024-04-28 19:12:52,784 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:12:52,784 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:13:39,022 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:13:40,501 | server.py:125 | fit progress: (9, 1.553322434425354, {'accuracy': 0.9111, 'data_size': 10000}, 415.03465172299184)
INFO flwr 2024-04-28 19:13:40,502 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:13:40,502 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:14:20,645 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:14:22,130 | server.py:125 | fit progress: (10, 1.554456353187561, {'accuracy': 0.9105, 'data_size': 10000}, 456.6632271859853)
INFO flwr 2024-04-28 19:14:22,130 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:14:22,130 | server.py:153 | FL finished in 456.6636393920053
INFO flwr 2024-04-28 19:14:22,131 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:14:22,136 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.9812445e-05,  1.0255883e-03,  2.4487457e-04,  6.8656699e-04,
        2.9659495e-04, -8.4477826e-04,  1.9520482e-04, -1.0301851e-05,
       -8.8950206e-04, -7.2402001e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00016292,  0.0007562 ,  0.00045709, -0.00181229,  0.00312513,
        0.00264376, -0.0010946 ,  0.00075685, -0.00299997, -0.00166923],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.2225259e-04,  2.8656535e-03,  2.1409718e-03, -2.5656924e-05,
        2.4234212e-03,  2.9517170e-03,  2.4801868e-04, -3.7768116e-04,
       -9.4158053e-03, -1.6328207e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00040721, -0.00017928, -0.00022128,  0.00036867,  0.00145305,
        0.00246578, -0.00113135, -0.00013666, -0.0014376 , -0.00158847],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.6281595e-04, -2.8002163e-04,  5.6462846e-05,  2.1152869e-04,
        6.3140440e-04,  6.0375861e-04, -1.6065360e-04,  4.5073830e-06,
       -2.6551611e-04, -4.3859638e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6597148e-05, -5.6035235e-05,  6.7416549e-04,  6.9275679e-04,
        1.2183494e-03, -4.2682598e-04, -3.1480330e-04,  2.1901849e-05,
       -7.5603824e-04, -1.0800210e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.9388204e-05, -1.5711645e-04,  1.2600966e-04,  9.8244112e-04,
        1.1754780e-03,  7.5761258e-04,  1.2476856e-04, -4.0899726e-05,
       -1.5970789e-03, -1.3417546e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.86385805e-05,  5.71092474e-04,  2.08491998e-04, -1.19400145e-04,
        9.18150938e-04,  3.19093291e-04,  2.73563965e-05,  5.13000123e-04,
       -9.27223766e-04, -1.49190670e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.5690183e-05,  1.0258608e-03,  2.3556338e-04,  1.8406162e-04,
        1.3368684e-03, -1.4087961e-04, -4.9011252e-04, -1.2287308e-05,
       -1.2048844e-03, -8.7846292e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.0080717e-05,  3.6087826e-05,  2.2680026e-04, -1.1153742e-04,
        1.4475671e-03, -1.5151847e-04, -5.1452022e-04,  6.9077994e-04,
        1.5997089e-04, -1.7035385e-03], dtype=float32)])]}
INFO flwr 2024-04-28 19:14:22,136 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:14:22,136 | app.py:229 | app_fit: losses_centralized [(0, 2.3034725189208984), (1, 1.7356265783309937), (2, 1.6189273595809937), (3, 1.5671896934509277), (4, 1.5713951587677002), (5, 1.5609766244888306), (6, 1.5579650402069092), (7, 1.5702499151229858), (8, 1.55787193775177), (9, 1.553322434425354), (10, 1.554456353187561)]
INFO flwr 2024-04-28 19:14:22,136 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.077), (1, 0.7421), (2, 0.851), (3, 0.9026), (4, 0.8957), (5, 0.9054), (6, 0.907), (7, 0.8933), (8, 0.9065), (9, 0.9111), (10, 0.9105)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9105
wandb:     loss 1.55446
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_190625-mgptz7vn
wandb: Find logs at: ./wandb/offline-run-20240428_190625-mgptz7vn/logs
INFO flwr 2024-04-28 19:14:25,751 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:14:28,395 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1352353)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1352353)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:14:34,737	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:14:35,607	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:14:35,953	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:14:35,954	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 19:14:46,864 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'object_store_memory': 79051062067.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174452478157.0}
INFO flwr 2024-04-28 19:14:46,865 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:14:46,865 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:14:46,881 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:14:46,883 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:14:46,883 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:14:46,883 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:14:49,574 | server.py:94 | initial parameters (loss, other metrics): 2.30568265914917, {'accuracy': 0.0528, 'data_size': 10000}
INFO flwr 2024-04-28 19:14:49,574 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:14:49,575 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1357782)[0m 2024-04-28 19:14:53.766898: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1357782)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1357782)[0m 2024-04-28 19:14:56.994338: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1357782)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1357782)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1357771)[0m 2024-04-28 19:14:53.978559: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1357771)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1357769)[0m 2024-04-28 19:14:56.994333: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:15:44,962 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:15:46,224 | server.py:125 | fit progress: (1, 1.719315767288208, {'accuracy': 0.7389, 'data_size': 10000}, 56.64885112698539)
INFO flwr 2024-04-28 19:15:46,224 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:15:46,224 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:16:27,700 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:16:29,201 | server.py:125 | fit progress: (2, 1.585750937461853, {'accuracy': 0.879, 'data_size': 10000}, 99.62666234897915)
INFO flwr 2024-04-28 19:16:29,202 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:16:29,202 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:17:11,337 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:17:12,793 | server.py:125 | fit progress: (3, 1.5718042850494385, {'accuracy': 0.891, 'data_size': 10000}, 143.2182019869797)
INFO flwr 2024-04-28 19:17:12,793 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:17:12,793 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:17:54,987 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:17:56,508 | server.py:125 | fit progress: (4, 1.5910742282867432, {'accuracy': 0.8724, 'data_size': 10000}, 186.93331452799612)
INFO flwr 2024-04-28 19:17:56,508 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:17:56,508 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:18:35,701 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:18:37,191 | server.py:125 | fit progress: (5, 1.5596808195114136, {'accuracy': 0.9036, 'data_size': 10000}, 227.61652716898243)
INFO flwr 2024-04-28 19:18:37,192 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:18:37,192 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:19:16,029 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:19:17,476 | server.py:125 | fit progress: (6, 1.565468430519104, {'accuracy': 0.8963, 'data_size': 10000}, 267.9013994119887)
INFO flwr 2024-04-28 19:19:17,476 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:19:17,477 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:20:00,362 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:20:01,863 | server.py:125 | fit progress: (7, 1.5567890405654907, {'accuracy': 0.9054, 'data_size': 10000}, 312.2881937669881)
INFO flwr 2024-04-28 19:20:01,863 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:20:01,863 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:20:40,618 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:20:42,080 | server.py:125 | fit progress: (8, 1.552398681640625, {'accuracy': 0.9107, 'data_size': 10000}, 352.50558800800354)
INFO flwr 2024-04-28 19:20:42,081 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:20:42,081 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:21:23,262 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:21:24,761 | server.py:125 | fit progress: (9, 1.5502736568450928, {'accuracy': 0.9117, 'data_size': 10000}, 395.1861282280006)
INFO flwr 2024-04-28 19:21:24,761 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:21:24,761 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:22:06,044 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:22:07,497 | server.py:125 | fit progress: (10, 1.5505589246749878, {'accuracy': 0.9112, 'data_size': 10000}, 437.92212318998645)
INFO flwr 2024-04-28 19:22:07,497 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:22:07,497 | server.py:153 | FL finished in 437.9225629940047
INFO flwr 2024-04-28 19:22:07,497 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:22:07,503 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00081073,  0.00196309,  0.00191189,  0.00200057,  0.00086678,
        0.00020203,  0.00195778,  0.00145306, -0.00844945, -0.00109494],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5488389e-05, -2.0720210e-05,  3.9103080e-04,  9.6599822e-04,
        2.1223866e-04, -7.2294852e-04,  3.3570759e-04, -1.6667631e-04,
       -1.0405609e-03,  3.0467441e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.2070234e-05, -3.5989605e-04, -4.3129514e-04,  3.2320834e-04,
        1.4703729e-03,  3.2457616e-04,  2.7153457e-05, -6.5500429e-04,
       -1.3061322e-03,  6.6916086e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.1877100e-06,  1.8197074e-04, -1.9492880e-05, -3.8708924e-04,
        4.3448951e-04,  1.3591099e-04, -4.1668605e-05,  4.0767418e-04,
       -2.5457126e-04, -4.6636231e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.56293734e-05,  1.56339611e-05,  1.10071276e-04, -1.99571135e-04,
        9.00187995e-04,  2.96447484e-04, -2.83147274e-05, -9.08903312e-05,
       -2.14354455e-04, -8.84760695e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.46584216e-05, -6.21318119e-04,  1.20084791e-04,  3.67667730e-04,
        3.49255279e-05,  5.68583891e-06,  4.42639066e-05,  1.18278935e-04,
        6.61313999e-04, -7.16133276e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4399355e-05, -6.0507766e-04,  2.4095587e-05,  4.5939902e-04,
        2.7830288e-04,  1.8885183e-04, -9.8081364e-05,  4.1308745e-06,
       -7.7036922e-05, -1.6009809e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2019062e-04,  2.5820191e-04,  5.8613034e-05, -6.0150394e-04,
        4.9540703e-04, -1.6714884e-04, -1.3228667e-04,  5.5312394e-04,
        3.3722504e-04, -6.8139861e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.9273771e-05, -2.3908382e-04, -9.4304109e-05,  1.9307734e-06,
        6.1733922e-04,  1.6625431e-04, -1.4472373e-04, -1.5605555e-04,
       -2.3254863e-05, -1.6732923e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4135741e-05, -6.1734376e-05,  4.3859462e-05,  2.1265836e-04,
        1.7618699e-04,  6.5477063e-05, -3.4361106e-05,  1.0401797e-04,
       -2.3797747e-04, -2.9222210e-04], dtype=float32)])]}
INFO flwr 2024-04-28 19:22:07,503 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:22:07,503 | app.py:229 | app_fit: losses_centralized [(0, 2.30568265914917), (1, 1.719315767288208), (2, 1.585750937461853), (3, 1.5718042850494385), (4, 1.5910742282867432), (5, 1.5596808195114136), (6, 1.565468430519104), (7, 1.5567890405654907), (8, 1.552398681640625), (9, 1.5502736568450928), (10, 1.5505589246749878)]
INFO flwr 2024-04-28 19:22:07,503 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0528), (1, 0.7389), (2, 0.879), (3, 0.891), (4, 0.8724), (5, 0.9036), (6, 0.8963), (7, 0.9054), (8, 0.9107), (9, 0.9117), (10, 0.9112)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9112
wandb:     loss 1.55056
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_191427-vloq4rvj
wandb: Find logs at: ./wandb/offline-run-20240428_191427-vloq4rvj/logs
INFO flwr 2024-04-28 19:22:11,231 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:22:11,867 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1357769)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1357769)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:22:16,868	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:22:17,223	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:22:17,565	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:22:17,567	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_b225069d7a1ab25c.zip'.
INFO flwr 2024-04-28 19:22:28,537 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174121617613.0, 'object_store_memory': 78909264691.0}
INFO flwr 2024-04-28 19:22:28,537 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:22:28,538 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:22:28,558 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:22:28,560 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:22:28,560 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:22:28,561 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:22:31,256 | server.py:94 | initial parameters (loss, other metrics): 2.3044581413269043, {'accuracy': 0.0625, 'data_size': 10000}
INFO flwr 2024-04-28 19:22:31,257 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:22:31,258 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1369070)[0m 2024-04-28 19:22:34.723588: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1369070)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1369070)[0m 2024-04-28 19:22:37.027852: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1369077)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1369077)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1369073)[0m 2024-04-28 19:22:34.993553: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1369073)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1369073)[0m 2024-04-28 19:22:37.440682: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:23:31,442 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:23:32,970 | server.py:125 | fit progress: (1, 1.7112609148025513, {'accuracy': 0.7563, 'data_size': 10000}, 61.712851341988426)
INFO flwr 2024-04-28 19:23:32,970 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:23:32,971 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:24:16,526 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:24:18,030 | server.py:125 | fit progress: (2, 1.6566449403762817, {'accuracy': 0.8053, 'data_size': 10000}, 106.77246071101399)
INFO flwr 2024-04-28 19:24:18,030 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:24:18,030 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:25:02,123 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:25:03,577 | server.py:125 | fit progress: (3, 1.6212033033370972, {'accuracy': 0.8378, 'data_size': 10000}, 152.31932725801016)
INFO flwr 2024-04-28 19:25:03,577 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:25:03,577 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:25:45,117 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:25:46,612 | server.py:125 | fit progress: (4, 1.5679807662963867, {'accuracy': 0.8937, 'data_size': 10000}, 195.35464256399428)
INFO flwr 2024-04-28 19:25:46,612 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:25:46,613 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:26:28,505 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:26:29,983 | server.py:125 | fit progress: (5, 1.558627963066101, {'accuracy': 0.9021, 'data_size': 10000}, 238.72543651799788)
INFO flwr 2024-04-28 19:26:29,983 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:26:29,983 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:27:08,854 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:27:10,110 | server.py:125 | fit progress: (6, 1.5510101318359375, {'accuracy': 0.9104, 'data_size': 10000}, 278.85237250401406)
INFO flwr 2024-04-28 19:27:10,110 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:27:10,110 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:27:54,761 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:27:56,009 | server.py:125 | fit progress: (7, 1.5497812032699585, {'accuracy': 0.9108, 'data_size': 10000}, 324.7512246230035)
INFO flwr 2024-04-28 19:27:56,009 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:27:56,009 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:28:40,148 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:28:41,623 | server.py:125 | fit progress: (8, 1.5556708574295044, {'accuracy': 0.9053, 'data_size': 10000}, 370.3653082239907)
INFO flwr 2024-04-28 19:28:41,623 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:28:41,623 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:29:25,705 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:29:27,178 | server.py:125 | fit progress: (9, 1.5479540824890137, {'accuracy': 0.9128, 'data_size': 10000}, 415.92026430601254)
INFO flwr 2024-04-28 19:29:27,178 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:29:27,178 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:30:09,755 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:30:11,242 | server.py:125 | fit progress: (10, 1.5583012104034424, {'accuracy': 0.9013, 'data_size': 10000}, 459.9845163380087)
INFO flwr 2024-04-28 19:30:11,242 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:30:11,242 | server.py:153 | FL finished in 459.9849274450098
INFO flwr 2024-04-28 19:30:11,242 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:30:11,248 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6309085e-03,  5.8751163e-04,  1.8263224e-03, -2.4983992e-03,
       -1.9588117e-03,  4.6092391e-05, -2.3245694e-04,  2.6678750e-02,
       -2.4685604e-04, -2.6833026e-02], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00032738,  0.00098438,  0.00056856, -0.00034658,  0.00675725,
       -0.00115088, -0.00116343,  0.00046088, -0.00667005,  0.00023256],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7678518e-05, -2.9556168e-04,  1.5712678e-03,  3.0009763e-04,
       -2.0451620e-03, -1.7781871e-04,  1.5068417e-04,  3.2651601e-03,
        5.1136414e-04, -3.2623289e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.7216912e-05, -5.9815170e-04,  2.6925825e-04,  2.5905998e-05,
        2.2119874e-04,  6.1648502e-04,  1.2123839e-04,  1.2060151e-05,
       -2.4336927e-04, -4.8181246e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0267366e-02, -3.0397274e-05,  9.7625300e-05,  8.9863985e-05,
       -6.1633188e-04, -2.0632099e-02,  2.2719210e-05,  3.3592733e-04,
       -1.8497696e-05,  4.8386981e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3577619e-05, -5.1484744e-07, -5.1334214e-06,  3.1623087e-04,
        3.6924000e-06,  1.0280968e-03, -4.1989950e-04,  3.5060171e-04,
       -1.2881509e-03,  2.8694625e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1210612e-05, -1.2244087e-03, -3.3646164e-05,  4.6778852e-04,
        9.6316950e-04, -6.7617184e-06, -1.0278272e-03, -1.8204233e-04,
        2.3478044e-05,  1.0314938e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4139152e-04,  1.1161340e-03, -1.0208610e-04,  1.7136012e-04,
        1.8329931e-06,  9.5286742e-03,  2.9800527e-05, -1.3605644e-03,
       -9.5632263e-03, -6.3308587e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.6429976e-06, -1.8007609e-05, -2.4298184e-05,  7.0402216e-06,
        9.0236623e-05, -1.6269625e-05, -2.5922785e-07,  2.6352363e-06,
       -1.8116614e-06, -2.9608558e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9449234e-04,  7.7494648e-03,  1.9267552e-04, -5.1957933e-05,
        3.7095149e-04,  2.3989662e-04, -3.1353300e-04, -7.0444858e-03,
       -7.9176668e-03,  6.9691683e-03], dtype=float32)])]}
INFO flwr 2024-04-28 19:30:11,248 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:30:11,248 | app.py:229 | app_fit: losses_centralized [(0, 2.3044581413269043), (1, 1.7112609148025513), (2, 1.6566449403762817), (3, 1.6212033033370972), (4, 1.5679807662963867), (5, 1.558627963066101), (6, 1.5510101318359375), (7, 1.5497812032699585), (8, 1.5556708574295044), (9, 1.5479540824890137), (10, 1.5583012104034424)]
INFO flwr 2024-04-28 19:30:11,248 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0625), (1, 0.7563), (2, 0.8053), (3, 0.8378), (4, 0.8937), (5, 0.9021), (6, 0.9104), (7, 0.9108), (8, 0.9053), (9, 0.9128), (10, 0.9013)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9013
wandb:     loss 1.5583
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_192211-voq711el
wandb: Find logs at: ./wandb/offline-run-20240428_192211-voq711el/logs
INFO flwr 2024-04-28 19:30:14,923 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:30:15,743 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1369068)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1369068)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:30:21,062	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:30:21,956	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:30:22,348	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:30:22,349	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 19:30:33,576 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77595141734.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'memory': 171055330714.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-28 19:30:33,576 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:30:33,577 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:30:33,592 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:30:33,594 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:30:33,594 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:30:33,594 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:30:37,154 | server.py:94 | initial parameters (loss, other metrics): 2.3048858642578125, {'accuracy': 0.0696, 'data_size': 10000}
INFO flwr 2024-04-28 19:30:37,155 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:30:37,155 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1379924)[0m 2024-04-28 19:30:39.640270: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1379924)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1379934)[0m 2024-04-28 19:30:41.976980: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1379934)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1379934)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1379927)[0m 2024-04-28 19:30:39.823909: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1379927)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1379927)[0m 2024-04-28 19:30:42.102743: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:31:33,144 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:31:34,398 | server.py:125 | fit progress: (1, 1.693004846572876, {'accuracy': 0.771, 'data_size': 10000}, 57.24275421097991)
INFO flwr 2024-04-28 19:31:34,398 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:31:34,398 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:32:14,751 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:32:16,013 | server.py:125 | fit progress: (2, 1.5756492614746094, {'accuracy': 0.8859, 'data_size': 10000}, 98.85761738798465)
INFO flwr 2024-04-28 19:32:16,013 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:32:16,013 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:33:00,171 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:33:01,680 | server.py:125 | fit progress: (3, 1.598720669746399, {'accuracy': 0.864, 'data_size': 10000}, 144.52453417598736)
INFO flwr 2024-04-28 19:33:01,680 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:33:01,680 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:33:39,942 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:33:41,439 | server.py:125 | fit progress: (4, 1.5801129341125488, {'accuracy': 0.8823, 'data_size': 10000}, 184.28423428797396)
INFO flwr 2024-04-28 19:33:41,440 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:33:41,440 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:34:19,908 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:34:21,363 | server.py:125 | fit progress: (5, 1.557675838470459, {'accuracy': 0.9048, 'data_size': 10000}, 224.2080644129892)
INFO flwr 2024-04-28 19:34:21,363 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:34:21,364 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:35:01,154 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:35:02,610 | server.py:125 | fit progress: (6, 1.5542395114898682, {'accuracy': 0.9067, 'data_size': 10000}, 265.4548161709972)
INFO flwr 2024-04-28 19:35:02,610 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:35:02,610 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:35:39,178 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:35:40,647 | server.py:125 | fit progress: (7, 1.5504781007766724, {'accuracy': 0.9099, 'data_size': 10000}, 303.4918687659956)
INFO flwr 2024-04-28 19:35:40,647 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:35:40,647 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:36:23,578 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:36:25,058 | server.py:125 | fit progress: (8, 1.5483825206756592, {'accuracy': 0.9127, 'data_size': 10000}, 347.9032410319778)
INFO flwr 2024-04-28 19:36:25,059 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:36:25,059 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:37:05,115 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:37:06,544 | server.py:125 | fit progress: (9, 1.5487589836120605, {'accuracy': 0.9121, 'data_size': 10000}, 389.38914684098563)
INFO flwr 2024-04-28 19:37:06,544 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:37:06,545 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:37:46,947 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:37:48,406 | server.py:125 | fit progress: (10, 1.5533785820007324, {'accuracy': 0.9088, 'data_size': 10000}, 431.25069363598595)
INFO flwr 2024-04-28 19:37:48,406 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:37:48,425 | server.py:153 | FL finished in 431.27042437999626
INFO flwr 2024-04-28 19:37:48,426 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:37:48,431 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.8814963e-04,  2.0735415e-04, -1.3801713e-03,  6.9524843e-04,
       -2.5834425e-04, -8.4229257e-05,  6.2181981e-04, -4.1482635e-04,
        1.5848881e-03, -6.8360422e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.9926014e-07,  2.0520336e-03, -1.3244135e-05,  2.0456913e-05,
       -2.7132212e-04,  1.4849664e-05,  2.5183189e-04,  2.2103412e-03,
       -5.4990752e-03,  1.2338312e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1409005e-05,  4.0527091e-05,  9.0417641e-05,  1.7053768e-05,
        2.5090826e-04, -5.7917065e-04,  9.7233351e-05, -5.8798450e-05,
        3.4598302e-04, -1.9274555e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.37556090e-05, -5.84926631e-04,  3.76493190e-05,  3.53440933e-04,
        2.92667537e-04,  1.87478575e-03, -6.00308813e-05, -1.13692025e-04,
       -1.69881457e-03, -8.73009994e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.8282901e-04,  1.0938828e-04,  6.8247539e-04,  2.4041445e-04,
       -1.8846014e-05,  9.2869550e-06, -4.5807621e-05, -7.2745506e-06,
       -2.0596228e-04, -8.0822931e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.06216736e-04, -9.33947467e-06,  2.04286262e-05,  2.32939656e-05,
       -5.07641467e-04,  4.38377913e-03,  4.33011970e-04,  9.07028516e-05,
       -4.54034517e-03, -4.67824037e-08], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.7349655e-05,  9.4394335e-07, -5.2064082e-05,  9.1458627e-05,
        2.3972761e-05, -3.0671958e-06, -2.0761485e-05,  1.2939603e-05,
       -3.0569376e-05,  1.4534109e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.6693261e-05, -1.1664311e-05,  2.3300803e-05,  3.9199334e-05,
        7.7990655e-05,  4.5845023e-04,  4.5717505e-05, -8.9281712e-05,
       -3.7716329e-04, -9.9812059e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.7592329e-06,  1.7939838e-04, -3.2191060e-06,  8.7255769e-04,
       -7.2746078e-04, -1.1529338e-04,  7.3436482e-08, -1.5774931e-04,
       -5.4036540e-05,  9.5143096e-06], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5441565e-05,  2.2793266e-04, -5.9821600e-06,  2.3108989e-02,
       -4.5436964e-04,  4.5972629e-05,  3.2442838e-06, -6.7555550e-07,
       -2.2780921e-02, -1.2872712e-04], dtype=float32)])]}
INFO flwr 2024-04-28 19:37:48,431 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:37:48,431 | app.py:229 | app_fit: losses_centralized [(0, 2.3048858642578125), (1, 1.693004846572876), (2, 1.5756492614746094), (3, 1.598720669746399), (4, 1.5801129341125488), (5, 1.557675838470459), (6, 1.5542395114898682), (7, 1.5504781007766724), (8, 1.5483825206756592), (9, 1.5487589836120605), (10, 1.5533785820007324)]
INFO flwr 2024-04-28 19:37:48,432 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0696), (1, 0.771), (2, 0.8859), (3, 0.864), (4, 0.8823), (5, 0.9048), (6, 0.9067), (7, 0.9099), (8, 0.9127), (9, 0.9121), (10, 0.9088)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9088
wandb:     loss 1.55338
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_193015-iagnxh40
wandb: Find logs at: ./wandb/offline-run-20240428_193015-iagnxh40/logs
INFO flwr 2024-04-28 19:37:52,063 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:37:52,841 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1379924)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1379924)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:37:57,641	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:37:58,005	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:37:58,351	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:37:58,352	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 19:38:09,386 | app.py:213 | Flower VCE: Ray initialized with resources: {'memory': 170866588672.0, 'node:10.20.240.13': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0, 'object_store_memory': 77514252288.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 19:38:09,387 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:38:09,387 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:38:09,403 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:38:09,405 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:38:09,405 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:38:09,405 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:38:11,987 | server.py:94 | initial parameters (loss, other metrics): 2.3002538681030273, {'accuracy': 0.1356, 'data_size': 10000}
INFO flwr 2024-04-28 19:38:11,989 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:38:11,996 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1390577)[0m 2024-04-28 19:38:15.660955: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1390577)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1390577)[0m 2024-04-28 19:38:17.999454: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1390577)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1390577)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1390573)[0m 2024-04-28 19:38:15.794374: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1390573)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1390573)[0m 2024-04-28 19:38:18.072885: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:39:08,194 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:39:09,463 | server.py:125 | fit progress: (1, 1.857129454612732, {'accuracy': 0.5978, 'data_size': 10000}, 57.46755598700838)
INFO flwr 2024-04-28 19:39:09,463 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:39:09,464 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:39:48,506 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:39:50,015 | server.py:125 | fit progress: (2, 1.6480872631072998, {'accuracy': 0.8121, 'data_size': 10000}, 98.01925585299614)
INFO flwr 2024-04-28 19:39:50,015 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:39:50,015 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:40:33,256 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:40:34,716 | server.py:125 | fit progress: (3, 1.6366634368896484, {'accuracy': 0.8225, 'data_size': 10000}, 142.7202342330129)
INFO flwr 2024-04-28 19:40:34,716 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:40:34,716 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:41:14,682 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:41:16,179 | server.py:125 | fit progress: (4, 1.570375919342041, {'accuracy': 0.8907, 'data_size': 10000}, 184.18370596598834)
INFO flwr 2024-04-28 19:41:16,180 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:41:16,180 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:41:56,843 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:41:58,338 | server.py:125 | fit progress: (5, 1.576369047164917, {'accuracy': 0.8847, 'data_size': 10000}, 226.3424925809959)
INFO flwr 2024-04-28 19:41:58,338 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:41:58,338 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:42:40,063 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:42:41,542 | server.py:125 | fit progress: (6, 1.5593448877334595, {'accuracy': 0.9025, 'data_size': 10000}, 269.5469400960137)
INFO flwr 2024-04-28 19:42:41,543 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:42:41,543 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:43:20,868 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:43:22,391 | server.py:125 | fit progress: (7, 1.5532909631729126, {'accuracy': 0.9082, 'data_size': 10000}, 310.39592341601383)
INFO flwr 2024-04-28 19:43:22,392 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:43:22,392 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:44:04,152 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:44:05,633 | server.py:125 | fit progress: (8, 1.5547921657562256, {'accuracy': 0.9064, 'data_size': 10000}, 353.63776712000254)
INFO flwr 2024-04-28 19:44:05,634 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:44:05,634 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:44:48,870 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:44:50,308 | server.py:125 | fit progress: (9, 1.5499391555786133, {'accuracy': 0.9107, 'data_size': 10000}, 398.31260169800953)
INFO flwr 2024-04-28 19:44:50,308 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:44:50,309 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:45:34,806 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:45:36,278 | server.py:125 | fit progress: (10, 1.5573244094848633, {'accuracy': 0.9044, 'data_size': 10000}, 444.28253079298884)
INFO flwr 2024-04-28 19:45:36,278 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:45:36,278 | server.py:153 | FL finished in 444.2829567900044
INFO flwr 2024-04-28 19:45:36,279 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:45:36,284 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7366379e-03, -9.8671706e-04,  9.3167112e-04,  3.3232564e-04,
       -1.1558986e-03,  3.3099342e-03,  3.6422201e-04, -1.6408355e-06,
       -8.2278514e-04, -2.3445413e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4981809e-04, -5.0445738e-06, -2.4123662e-04, -2.7037318e-05,
        5.4863188e-04,  2.8738752e-04,  5.2005042e-05, -1.8264097e-04,
       -6.2181178e-04,  3.9928058e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.3555738e-05, -1.4829047e-03,  1.0820711e-02, -1.3937686e-02,
        1.1799472e-03,  6.2646419e-03, -6.2987703e-05, -1.8490304e-03,
       -1.6550309e-03,  7.6590246e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.69768181e-08,  2.91732326e-03, -1.66286427e-05,  1.01484315e-04,
       -1.34331267e-03, -9.65917832e-04,  2.70010405e-05,  1.46951864e-03,
       -2.09071930e-03, -9.87743915e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.56081717e-06,  1.37387515e-05, -2.08909938e-07, -1.63560198e-05,
       -2.48189608e-04,  4.18146337e-05, -8.85642716e-04, -1.11181824e-03,
        8.54042359e-04,  1.35006709e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.8836308e-06,  1.3021613e-06,  1.2683106e-05,  1.1354318e-05,
       -7.3459921e-07,  1.8408029e-04,  3.5638503e-05, -8.0057689e-05,
       -5.9816784e-06, -1.6413942e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.9821247e-05, -1.6493164e-05,  1.5157001e-04, -4.4403860e-05,
        3.5031002e-03, -5.7905596e-05,  4.4996582e-04, -3.3169411e-04,
       -2.2234910e-05, -3.6020854e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.0838599e-06,  7.1291292e-06, -8.1307735e-05,  8.0734280e-05,
       -9.5836076e-06, -7.1683142e-05,  8.7245353e-06,  6.2378977e-06,
        2.3407637e-04, -1.7840235e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.7627518e-04,  4.3827254e-06, -5.0777587e-04,  2.8019972e-04,
        6.3903797e-03, -2.2431926e-04, -3.2343076e-05,  5.7258453e-06,
        4.1983728e-04, -6.6123460e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1022578e-06,  1.2600895e-02,  3.8251917e-05,  1.7873509e-03,
        3.0285259e-05,  1.2458015e-05, -7.4237755e-07,  3.2460739e-06,
       -1.4443762e-02, -2.4857478e-05], dtype=float32)])]}
INFO flwr 2024-04-28 19:45:36,284 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:45:36,284 | app.py:229 | app_fit: losses_centralized [(0, 2.3002538681030273), (1, 1.857129454612732), (2, 1.6480872631072998), (3, 1.6366634368896484), (4, 1.570375919342041), (5, 1.576369047164917), (6, 1.5593448877334595), (7, 1.5532909631729126), (8, 1.5547921657562256), (9, 1.5499391555786133), (10, 1.5573244094848633)]
INFO flwr 2024-04-28 19:45:36,284 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1356), (1, 0.5978), (2, 0.8121), (3, 0.8225), (4, 0.8907), (5, 0.8847), (6, 0.9025), (7, 0.9082), (8, 0.9064), (9, 0.9107), (10, 0.9044)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9044
wandb:     loss 1.55732
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_193752-i26kunx9
wandb: Find logs at: ./wandb/offline-run-20240428_193752-i26kunx9/logs
INFO flwr 2024-04-28 19:45:39,963 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:45:40,615 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1390564)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1390564)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:45:45,538	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:45:45,942	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:45:46,377	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:45:46,378	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 19:45:57,523 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77491150848.0, 'CPU': 64.0, 'memory': 170812685312.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 19:45:57,524 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:45:57,524 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:45:57,631 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:45:57,633 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:45:57,634 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:45:57,634 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:46:01,652 | server.py:94 | initial parameters (loss, other metrics): 2.3023762702941895, {'accuracy': 0.0925, 'data_size': 10000}
INFO flwr 2024-04-28 19:46:01,653 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:46:01,653 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1401788)[0m 2024-04-28 19:46:04.087560: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1401788)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1401788)[0m 2024-04-28 19:46:06.683515: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1401788)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1401788)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1401793)[0m 2024-04-28 19:46:04.286755: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1401793)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1401793)[0m 2024-04-28 19:46:06.683515: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:47:04,682 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:47:06,192 | server.py:125 | fit progress: (1, 1.8216646909713745, {'accuracy': 0.6351, 'data_size': 10000}, 64.53922474000137)
INFO flwr 2024-04-28 19:47:06,192 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:47:06,193 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:47:46,821 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:47:48,323 | server.py:125 | fit progress: (2, 1.6434160470962524, {'accuracy': 0.8168, 'data_size': 10000}, 106.67049089400098)
INFO flwr 2024-04-28 19:47:48,324 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:47:48,324 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:48:28,157 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:48:29,664 | server.py:125 | fit progress: (3, 1.617600440979004, {'accuracy': 0.843, 'data_size': 10000}, 148.01091685600113)
INFO flwr 2024-04-28 19:48:29,664 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:48:29,664 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:49:13,264 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:49:14,788 | server.py:125 | fit progress: (4, 1.5745439529418945, {'accuracy': 0.8871, 'data_size': 10000}, 193.1353749030095)
INFO flwr 2024-04-28 19:49:14,789 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:49:14,789 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:49:59,050 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:50:00,518 | server.py:125 | fit progress: (5, 1.559463620185852, {'accuracy': 0.9016, 'data_size': 10000}, 238.86493097199127)
INFO flwr 2024-04-28 19:50:00,518 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:50:00,518 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:50:38,377 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:50:39,619 | server.py:125 | fit progress: (6, 1.5640435218811035, {'accuracy': 0.8967, 'data_size': 10000}, 277.96657210899866)
INFO flwr 2024-04-28 19:50:39,620 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:50:39,620 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:51:24,247 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:51:25,508 | server.py:125 | fit progress: (7, 1.556862711906433, {'accuracy': 0.9045, 'data_size': 10000}, 323.8552795610158)
INFO flwr 2024-04-28 19:51:25,508 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:51:25,509 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:52:06,046 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 19:52:07,540 | server.py:125 | fit progress: (8, 1.5573487281799316, {'accuracy': 0.9036, 'data_size': 10000}, 365.8873163709941)
INFO flwr 2024-04-28 19:52:07,540 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 19:52:07,541 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:52:49,982 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 19:52:51,454 | server.py:125 | fit progress: (9, 1.553666114807129, {'accuracy': 0.9067, 'data_size': 10000}, 409.800707974995)
INFO flwr 2024-04-28 19:52:51,454 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 19:52:51,454 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:53:33,274 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 19:53:34,753 | server.py:125 | fit progress: (10, 1.5527503490447998, {'accuracy': 0.9079, 'data_size': 10000}, 453.0997738580045)
INFO flwr 2024-04-28 19:53:34,753 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 19:53:34,753 | server.py:153 | FL finished in 453.1002780380077
INFO flwr 2024-04-28 19:53:34,753 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 19:53:34,762 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00144948, -0.00066643, -0.00489476,  0.00097362,  0.00576166,
       -0.00091759,  0.00067888, -0.00034675,  0.00238091, -0.00152004],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.8437618e-04, -4.7619327e-05, -2.3448283e-03,  8.1531396e-03,
        2.3593814e-03, -3.7684909e-03, -1.9573810e-04,  1.2502411e-03,
       -5.3019351e-03, -1.0885352e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00381571,  0.00403137,  0.00260682, -0.00054128,  0.00385433,
       -0.00151387,  0.00349675, -0.01007509,  0.00245788, -0.00050119],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00141051, -0.00192573,  0.00093154,  0.00041899,  0.00143339,
        0.0028724 , -0.00662397,  0.00281394,  0.0013272 ,  0.00016274],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.7637687e-06,  3.9737005e-04, -3.5431425e-05,  5.5478318e-03,
       -1.8543459e-02, -5.3317151e-03,  8.3434810e-05,  9.9640954e-03,
       -1.6727776e-04,  8.0929073e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.8596715e-03, -4.2813932e-04, -1.7508406e-02, -2.7507576e-03,
        2.4291475e-03,  2.1338642e-02,  9.8984469e-07, -1.4564276e-03,
        4.5200316e-03, -1.2853849e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.9524301e-04,  3.7592271e-04, -1.7698890e-02, -4.4679819e-06,
        5.5043111e-03, -4.1850118e-04, -3.4273718e-05,  9.4945403e-04,
       -3.9717896e-04,  1.1128383e-02], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.1115109e-04, -1.6835293e-05, -1.0343341e-03, -1.1091288e-03,
        3.3800639e-04,  2.6940149e-03,  1.9714734e-04,  8.2486506e-05,
       -2.9361903e-04, -1.2688799e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.8036730e-05,  9.4196323e-05, -7.9082642e-03, -5.2958657e-04,
       -4.9724919e-03, -1.4240505e-02,  6.6095493e-03,  3.5302386e-05,
        1.6359914e-02,  4.6199150e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.64475883e-05,  2.61130708e-06,  2.82245014e-06,  4.27829718e-06,
       -1.09538276e-04,  5.33282036e-05, -2.36144915e-04,  2.85799819e-04,
       -1.18458389e-04,  1.81766329e-04], dtype=float32)])]}
INFO flwr 2024-04-28 19:53:34,762 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 19:53:34,762 | app.py:229 | app_fit: losses_centralized [(0, 2.3023762702941895), (1, 1.8216646909713745), (2, 1.6434160470962524), (3, 1.617600440979004), (4, 1.5745439529418945), (5, 1.559463620185852), (6, 1.5640435218811035), (7, 1.556862711906433), (8, 1.5573487281799316), (9, 1.553666114807129), (10, 1.5527503490447998)]
INFO flwr 2024-04-28 19:53:34,762 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0925), (1, 0.6351), (2, 0.8168), (3, 0.843), (4, 0.8871), (5, 0.9016), (6, 0.8967), (7, 0.9045), (8, 0.9036), (9, 0.9067), (10, 0.9079)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9079
wandb:     loss 1.55275
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_194540-afctx4fu
wandb: Find logs at: ./wandb/offline-run-20240428_194540-afctx4fu/logs
INFO flwr 2024-04-28 19:53:38,387 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 19:53:39,232 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1401793)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1401793)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 19:53:44,328	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 19:53:45,098	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 19:53:45,455	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 19:53:45,457	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 19:53:56,341 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 171775456666.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 77903767142.0, 'CPU': 64.0}
INFO flwr 2024-04-28 19:53:56,341 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 19:53:56,341 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 19:53:56,358 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 19:53:56,359 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 19:53:56,359 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 19:53:56,360 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 19:53:59,314 | server.py:94 | initial parameters (loss, other metrics): 2.3067264556884766, {'accuracy': 0.0637, 'data_size': 10000}
INFO flwr 2024-04-28 19:53:59,315 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 19:53:59,316 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1406340)[0m 2024-04-28 19:54:02.517273: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1406340)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1406340)[0m 2024-04-28 19:54:04.839803: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1406340)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1406340)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1406332)[0m 2024-04-28 19:54:02.711314: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1406332)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1406332)[0m 2024-04-28 19:54:04.988369: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 19:54:56,727 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 19:54:58,010 | server.py:125 | fit progress: (1, 1.6839721202850342, {'accuracy': 0.7765, 'data_size': 10000}, 58.694402886001626)
INFO flwr 2024-04-28 19:54:58,010 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 19:54:58,010 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:55:42,062 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 19:55:43,300 | server.py:125 | fit progress: (2, 1.5914390087127686, {'accuracy': 0.869, 'data_size': 10000}, 103.98460151301697)
INFO flwr 2024-04-28 19:55:43,301 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 19:55:43,301 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:56:26,213 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 19:56:27,705 | server.py:125 | fit progress: (3, 1.5762165784835815, {'accuracy': 0.8852, 'data_size': 10000}, 148.38970646000234)
INFO flwr 2024-04-28 19:56:27,705 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 19:56:27,706 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:57:04,669 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 19:57:06,112 | server.py:125 | fit progress: (4, 1.5703871250152588, {'accuracy': 0.8904, 'data_size': 10000}, 186.79688354799873)
INFO flwr 2024-04-28 19:57:06,113 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 19:57:06,113 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:57:50,780 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 19:57:52,301 | server.py:125 | fit progress: (5, 1.555500864982605, {'accuracy': 0.9056, 'data_size': 10000}, 232.98581026800093)
INFO flwr 2024-04-28 19:57:52,302 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 19:57:52,302 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:58:38,057 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 19:58:39,553 | server.py:125 | fit progress: (6, 1.5552151203155518, {'accuracy': 0.9052, 'data_size': 10000}, 280.23782558902167)
INFO flwr 2024-04-28 19:58:39,553 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 19:58:39,554 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 19:59:22,162 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 19:59:23,628 | server.py:125 | fit progress: (7, 1.5579938888549805, {'accuracy': 0.9027, 'data_size': 10000}, 324.3128903650213)
INFO flwr 2024-04-28 19:59:23,629 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 19:59:23,629 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:00:05,085 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 20:00:06,602 | server.py:125 | fit progress: (8, 1.552072286605835, {'accuracy': 0.9082, 'data_size': 10000}, 367.28680566101684)
INFO flwr 2024-04-28 20:00:06,603 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 20:00:06,603 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:00:41,042 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 20:00:42,518 | server.py:125 | fit progress: (9, 1.5644328594207764, {'accuracy': 0.8961, 'data_size': 10000}, 403.2026839960017)
INFO flwr 2024-04-28 20:00:42,518 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 20:00:42,519 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:01:21,402 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 20:01:22,850 | server.py:125 | fit progress: (10, 1.5498168468475342, {'accuracy': 0.9109, 'data_size': 10000}, 443.5344407770026)
INFO flwr 2024-04-28 20:01:22,850 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 20:01:22,850 | server.py:153 | FL finished in 443.5348647200153
INFO flwr 2024-04-28 20:01:22,850 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 20:01:22,859 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.3615948e-03,  1.0318814e-04, -2.9107919e-03, -8.8518020e-05,
        8.2607142e-04,  2.0831427e-05,  2.7492936e-04, -2.0743266e-03,
       -2.8785576e-05, -4.4841967e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.7032331e-07,  5.9382222e-04, -5.4830970e-04, -1.7475709e-03,
       -5.2358740e-04, -3.2678820e-04,  4.2591203e-04,  5.3433061e-04,
        1.5938347e-03, -2.4074495e-06], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.2454835e-06,  5.9634051e-05, -4.7742211e-05,  2.4786298e-03,
        8.6843298e-05,  8.2203762e-05,  1.5531419e-05,  9.5309821e-05,
       -2.4988770e-03, -2.6326568e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.2014367e-08,  1.2543889e-03,  2.4462645e-07, -3.0992538e-05,
        2.8424626e-04, -1.2140698e-03, -2.7838408e-04, -1.6198064e-06,
       -8.3192223e-05,  6.9461050e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.6982361e-07, -1.0842454e-04,  3.3150543e-04,  5.1327271e-04,
        2.1410952e-04,  2.7681307e-07,  2.5625226e-05, -2.7275226e-05,
       -7.2022498e-04, -2.2829280e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2853120e-06, -7.4129952e-05, -7.6308090e-04,  1.4345255e-04,
       -1.5672266e-03, -6.5328067e-07,  1.5584016e-03,  5.8490309e-07,
       -1.3847493e-04,  8.3983399e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.8641892e-06,  1.2869517e-05, -3.4814002e-07, -1.2438346e-06,
        5.7684356e-05,  1.2844338e-05, -1.2854765e-05,  1.1064153e-04,
       -2.3980374e-06, -1.8105208e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.7122667e-05, -1.8884682e-06,  8.6574317e-07,  1.8516346e-06,
        9.1199780e-08,  3.6016485e-07,  1.6911804e-07,  2.7152130e-04,
       -7.2666768e-07, -2.3511164e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7535773e-08, -1.8153005e-04,  1.3126199e-04,  4.9080703e-05,
        4.1499607e-05, -4.8786128e-06, -2.5213194e-06,  8.7332201e-06,
       -6.1051691e-07, -4.1095565e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.18938415e-05,  1.00064796e-07, -2.31443453e-04,  2.18244895e-04,
       -1.29545697e-05,  1.25858651e-06, -1.09092180e-05,  1.67147755e-05,
        7.28424902e-06, -1.84947623e-07], dtype=float32)])]}
INFO flwr 2024-04-28 20:01:22,859 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 20:01:22,859 | app.py:229 | app_fit: losses_centralized [(0, 2.3067264556884766), (1, 1.6839721202850342), (2, 1.5914390087127686), (3, 1.5762165784835815), (4, 1.5703871250152588), (5, 1.555500864982605), (6, 1.5552151203155518), (7, 1.5579938888549805), (8, 1.552072286605835), (9, 1.5644328594207764), (10, 1.5498168468475342)]
INFO flwr 2024-04-28 20:01:22,859 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0637), (1, 0.7765), (2, 0.869), (3, 0.8852), (4, 0.8904), (5, 0.9056), (6, 0.9052), (7, 0.9027), (8, 0.9082), (9, 0.8961), (10, 0.9109)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9109
wandb:     loss 1.54982
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_195338-fkwsx1i6
wandb: Find logs at: ./wandb/offline-run-20240428_195338-fkwsx1i6/logs
INFO flwr 2024-04-28 20:01:26,487 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 20:01:27,162 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1406329)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1406329)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 20:01:32,031	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 20:01:32,470	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 20:01:32,814	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 20:01:32,816	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 20:01:43,800 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 77825286144.0, 'node:__internal_head__': 1.0, 'memory': 171592334336.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-28 20:01:43,801 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 20:01:43,801 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 20:01:43,821 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 20:01:43,822 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 20:01:43,822 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 20:01:43,823 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 20:01:46,679 | server.py:94 | initial parameters (loss, other metrics): 2.3047380447387695, {'accuracy': 0.0849, 'data_size': 10000}
INFO flwr 2024-04-28 20:01:46,680 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 20:01:46,680 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1410750)[0m 2024-04-28 20:01:49.993052: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1410750)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1410750)[0m 2024-04-28 20:01:52.303980: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1410761)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1410761)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1410754)[0m 2024-04-28 20:01:50.223466: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1410754)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1410762)[0m 2024-04-28 20:01:52.371224: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 20:02:42,209 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 20:02:43,434 | server.py:125 | fit progress: (1, 1.7952758073806763, {'accuracy': 0.668, 'data_size': 10000}, 56.75363720499445)
INFO flwr 2024-04-28 20:02:43,434 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 20:02:43,434 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:03:30,325 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 20:03:31,809 | server.py:125 | fit progress: (2, 1.7427066564559937, {'accuracy': 0.7169, 'data_size': 10000}, 105.12886150999111)
INFO flwr 2024-04-28 20:03:31,809 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 20:03:31,809 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:04:13,802 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 20:04:15,261 | server.py:125 | fit progress: (3, 1.6020079851150513, {'accuracy': 0.8579, 'data_size': 10000}, 148.58120914699975)
INFO flwr 2024-04-28 20:04:15,261 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 20:04:15,262 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:04:54,573 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 20:04:56,094 | server.py:125 | fit progress: (4, 1.5805857181549072, {'accuracy': 0.8798, 'data_size': 10000}, 189.41411521099508)
INFO flwr 2024-04-28 20:04:56,094 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 20:04:56,095 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:05:37,769 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 20:05:39,236 | server.py:125 | fit progress: (5, 1.5801204442977905, {'accuracy': 0.8805, 'data_size': 10000}, 232.55560418899404)
INFO flwr 2024-04-28 20:05:39,236 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 20:05:39,236 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:06:14,472 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 20:06:15,946 | server.py:125 | fit progress: (6, 1.5576939582824707, {'accuracy': 0.9029, 'data_size': 10000}, 269.26589880199754)
INFO flwr 2024-04-28 20:06:15,946 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 20:06:15,946 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:06:53,351 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 20:06:54,811 | server.py:125 | fit progress: (7, 1.5641433000564575, {'accuracy': 0.8967, 'data_size': 10000}, 308.1311803399876)
INFO flwr 2024-04-28 20:06:54,811 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 20:06:54,812 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:07:30,931 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 20:07:32,408 | server.py:125 | fit progress: (8, 1.557615876197815, {'accuracy': 0.9034, 'data_size': 10000}, 345.72782416798873)
INFO flwr 2024-04-28 20:07:32,408 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 20:07:32,408 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:08:22,104 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 20:08:23,564 | server.py:125 | fit progress: (9, 1.5537378787994385, {'accuracy': 0.9074, 'data_size': 10000}, 396.8837976459763)
INFO flwr 2024-04-28 20:08:23,564 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 20:08:23,564 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:09:07,368 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 20:09:08,843 | server.py:125 | fit progress: (10, 1.5526446104049683, {'accuracy': 0.9077, 'data_size': 10000}, 442.1627105480002)
INFO flwr 2024-04-28 20:09:08,843 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 20:09:08,843 | server.py:153 | FL finished in 442.1631329289812
INFO flwr 2024-04-28 20:09:08,843 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 20:09:08,849 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.5261571e-05, -3.5271747e-04,  1.7174387e-03, -1.4102599e-04,
        3.9005061e-04, -1.2710171e-03, -6.7486166e-05, -1.0554441e-05,
       -3.5330190e-04,  2.3361630e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.5155218e-05, -3.3335053e-04,  5.2715169e-04, -2.0917611e-04,
        1.7416410e-03,  2.5277964e-03, -2.0624546e-03, -1.6594790e-03,
       -5.9685454e-04, -2.0427249e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.6103272e-06,  4.9297454e-05, -5.4181134e-04, -1.2478166e-03,
       -9.9543817e-05,  1.6461172e-03, -4.5314249e-05,  1.8925887e-02,
       -1.7689478e-02, -1.0029443e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2092350e-05, -1.4413508e-04,  2.0924022e-03, -1.8826145e-03,
       -3.4268270e-03,  4.2978968e-03,  6.1109066e-03,  2.5165395e-05,
       -6.0760821e-03, -1.0288020e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5221166e-03,  2.1831474e-04, -3.3001343e-04, -3.0959758e-04,
        6.5976143e-04, -3.9756033e-03, -3.3052432e-04, -1.8827628e-05,
        2.4323172e-03,  1.3207218e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.22824367e-02,  2.01911127e-04, -5.70272931e-08,  9.97425336e-03,
       -3.53422337e-07, -2.31646653e-03, -1.22729875e-02, -1.71494205e-03,
       -8.16630665e-03,  2.01250403e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1281013e-06, -1.2269439e-05, -1.9744613e-04, -1.7710483e-04,
       -2.4229872e-04,  1.6342588e-05,  1.0849917e-05,  9.7934055e-05,
        2.6751886e-06,  5.0444953e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.73711555e-05,  1.31958677e-05, -4.82333271e-05,  1.15439725e-05,
        4.96707717e-03,  3.60753293e-05, -7.10947963e-04,  3.48378555e-04,
        7.62366573e-04, -5.34208352e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.66945540e-06, -8.82298025e-07,  2.00062105e-03, -1.68447208e-03,
        1.66648591e-04, -4.57694614e-06, -4.36484470e-07,  2.22616828e-10,
       -5.88849944e-04,  1.10281304e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3781522e-05,  3.7051364e-06,  1.7997518e-05, -4.1202948e-06,
       -1.3773619e-06, -8.7606968e-05,  1.3393311e-06, -6.6899310e-04,
        1.1479360e-05,  7.4136222e-04], dtype=float32)])]}
INFO flwr 2024-04-28 20:09:08,849 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 20:09:08,849 | app.py:229 | app_fit: losses_centralized [(0, 2.3047380447387695), (1, 1.7952758073806763), (2, 1.7427066564559937), (3, 1.6020079851150513), (4, 1.5805857181549072), (5, 1.5801204442977905), (6, 1.5576939582824707), (7, 1.5641433000564575), (8, 1.557615876197815), (9, 1.5537378787994385), (10, 1.5526446104049683)]
INFO flwr 2024-04-28 20:09:08,849 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0849), (1, 0.668), (2, 0.7169), (3, 0.8579), (4, 0.8798), (5, 0.8805), (6, 0.9029), (7, 0.8967), (8, 0.9034), (9, 0.9074), (10, 0.9077)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9077
wandb:     loss 1.55264
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_200126-uym9kz1a
wandb: Find logs at: ./wandb/offline-run-20240428_200126-uym9kz1a/logs
INFO flwr 2024-04-28 20:09:12,471 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 20:09:13,169 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1410750)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1410750)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 20:09:18,022	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 20:09:18,365	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 20:09:18,734	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 20:09:18,736	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 20:09:29,778 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77756260761.0, 'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:__internal_head__': 1.0, 'memory': 171431275111.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-28 20:09:29,778 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 20:09:29,778 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 20:09:29,796 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 20:09:29,798 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 20:09:29,798 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 20:09:29,799 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 20:09:32,564 | server.py:94 | initial parameters (loss, other metrics): 2.3052616119384766, {'accuracy': 0.0876, 'data_size': 10000}
INFO flwr 2024-04-28 20:09:32,564 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 20:09:32,565 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1414546)[0m 2024-04-28 20:09:35.940764: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1414546)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1414546)[0m 2024-04-28 20:09:38.216263: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1414546)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1414546)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1414547)[0m 2024-04-28 20:09:36.162751: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1414547)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1414547)[0m 2024-04-28 20:09:38.426767: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 20:10:32,009 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 20:10:33,495 | server.py:125 | fit progress: (1, 1.9866257905960083, {'accuracy': 0.47, 'data_size': 10000}, 60.93065417400794)
INFO flwr 2024-04-28 20:10:33,496 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 20:10:33,496 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:11:17,326 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 20:11:18,862 | server.py:125 | fit progress: (2, 1.7695107460021973, {'accuracy': 0.6911, 'data_size': 10000}, 106.29776324299746)
INFO flwr 2024-04-28 20:11:18,863 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 20:11:18,863 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:12:04,644 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 20:12:06,099 | server.py:125 | fit progress: (3, 1.7281228303909302, {'accuracy': 0.7323, 'data_size': 10000}, 153.53410610501305)
INFO flwr 2024-04-28 20:12:06,099 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 20:12:06,099 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:12:49,964 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 20:12:51,481 | server.py:125 | fit progress: (4, 1.7105942964553833, {'accuracy': 0.7498, 'data_size': 10000}, 198.91647820800426)
INFO flwr 2024-04-28 20:12:51,481 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 20:12:51,482 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:13:32,573 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 20:13:34,070 | server.py:125 | fit progress: (5, 1.6518146991729736, {'accuracy': 0.8089, 'data_size': 10000}, 241.50574734300608)
INFO flwr 2024-04-28 20:13:34,071 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 20:13:34,071 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:14:19,667 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 20:14:20,925 | server.py:125 | fit progress: (6, 1.6499464511871338, {'accuracy': 0.8105, 'data_size': 10000}, 288.36017497899593)
INFO flwr 2024-04-28 20:14:20,925 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 20:14:20,925 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:15:06,535 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 20:15:07,806 | server.py:125 | fit progress: (7, 1.6445441246032715, {'accuracy': 0.8157, 'data_size': 10000}, 335.2417732439935)
INFO flwr 2024-04-28 20:15:07,807 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 20:15:07,807 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:15:42,763 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 20:15:44,219 | server.py:125 | fit progress: (8, 1.651001214981079, {'accuracy': 0.8098, 'data_size': 10000}, 371.654391138989)
INFO flwr 2024-04-28 20:15:44,219 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 20:15:44,220 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:16:25,441 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 20:16:26,926 | server.py:125 | fit progress: (9, 1.6405999660491943, {'accuracy': 0.8202, 'data_size': 10000}, 414.361194305995)
INFO flwr 2024-04-28 20:16:26,926 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 20:16:26,926 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:17:12,128 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 20:17:13,596 | server.py:125 | fit progress: (10, 1.6446478366851807, {'accuracy': 0.8158, 'data_size': 10000}, 461.031207780994)
INFO flwr 2024-04-28 20:17:13,596 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 20:17:13,596 | server.py:153 | FL finished in 461.03165360100684
INFO flwr 2024-04-28 20:17:13,597 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 20:17:13,602 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7741784e-03,  2.9086845e-05,  3.2047692e-04, -8.2013059e-08,
       -7.7311258e-04,  4.0396910e-05,  1.5219304e-03,  7.0578052e-04,
        3.6212828e-04, -4.3242585e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.3714374e-04, -9.8347453e-05, -2.4566436e-03, -1.3946763e-11,
       -5.0104936e-03,  1.1215322e-03, -8.5966318e-04,  6.7079738e-03,
        1.9446268e-03, -5.1183742e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1939196e-03, -6.2241372e-05,  2.2829952e-02, -1.6247943e-17,
        6.3452730e-03, -2.5253757e-04,  2.2237783e-03, -5.6835165e-04,
       -2.9401725e-02,  7.9780897e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.7823376e-04, -6.5506421e-05,  2.0225627e-04, -5.5926025e-21,
        4.4948948e-04,  6.0252100e-04,  2.5500610e-04, -1.8721729e-04,
       -1.5730505e-04, -7.2099717e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.1718430e-05,  3.8465660e-04,  1.1974559e-05,  1.8146258e-15,
        4.7443197e-03,  5.0995022e-05, -5.2547010e-05,  9.3623501e-05,
       -8.3817646e-04, -4.3031275e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.2453762e-06, -6.7253569e-03, -1.2295435e-02,  1.6898203e-24,
       -4.0723523e-03, -6.0811429e-03,  2.7461422e-03,  5.5863503e-03,
        1.0718365e-02,  1.0119198e-02], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3859078e-04,  2.2731155e-04,  1.2675812e-04, -2.6060738e-23,
        1.7713655e-03, -8.7869843e-04,  3.9439424e-06,  4.3425342e-04,
        2.1212790e-04, -2.0356518e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5165023e-05, -4.1509409e-07, -1.4248160e-07,  4.3764200e-21,
        1.6656563e-04, -1.4859712e-04,  1.7544251e-05,  7.7396379e-07,
       -2.1114340e-06, -1.8443885e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6425566e-06,  3.2417866e-04, -2.6830164e-04,  6.8962958e-19,
       -1.8203236e-05,  3.2491167e-04,  7.6090572e-07,  1.0028733e-03,
       -1.2714324e-03, -9.7419834e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0331101e-04,  6.8074106e-03,  5.4845650e-06, -7.7934792e-22,
       -7.9646567e-03, -4.7538918e-04,  2.7672836e-04,  4.4405623e-04,
        9.8381180e-04,  1.2586164e-04], dtype=float32)])]}
INFO flwr 2024-04-28 20:17:13,602 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 20:17:13,602 | app.py:229 | app_fit: losses_centralized [(0, 2.3052616119384766), (1, 1.9866257905960083), (2, 1.7695107460021973), (3, 1.7281228303909302), (4, 1.7105942964553833), (5, 1.6518146991729736), (6, 1.6499464511871338), (7, 1.6445441246032715), (8, 1.651001214981079), (9, 1.6405999660491943), (10, 1.6446478366851807)]
INFO flwr 2024-04-28 20:17:13,602 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0876), (1, 0.47), (2, 0.6911), (3, 0.7323), (4, 0.7498), (5, 0.8089), (6, 0.8105), (7, 0.8157), (8, 0.8098), (9, 0.8202), (10, 0.8158)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8158
wandb:     loss 1.64465
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_200912-a46fahqm
wandb: Find logs at: ./wandb/offline-run-20240428_200912-a46fahqm/logs
INFO flwr 2024-04-28 20:17:17,231 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 20:17:17,918 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1414543)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1414543)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 20:17:22,945	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 20:17:23,362	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 20:17:23,728	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 20:17:23,729	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 20:17:34,712 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77748510720.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 171413191680.0}
INFO flwr 2024-04-28 20:17:34,712 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 20:17:34,712 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 20:17:34,733 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 20:17:34,734 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 20:17:34,735 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 20:17:34,735 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 20:17:37,923 | server.py:94 | initial parameters (loss, other metrics): 2.3024184703826904, {'accuracy': 0.0784, 'data_size': 10000}
INFO flwr 2024-04-28 20:17:37,924 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 20:17:37,924 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1419323)[0m 2024-04-28 20:17:40.829152: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1419323)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1419318)[0m 2024-04-28 20:17:43.149155: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1419322)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1419322)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1419328)[0m 2024-04-28 20:17:41.038122: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1419328)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1419322)[0m 2024-04-28 20:17:43.360119: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 20:19:33,290 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 20:19:34,519 | server.py:125 | fit progress: (1, 1.6697142124176025, {'accuracy': 0.807, 'data_size': 10000}, 116.59435442398535)
INFO flwr 2024-04-28 20:19:34,519 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 20:19:34,519 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:21:07,488 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 20:21:08,788 | server.py:125 | fit progress: (2, 1.5728384256362915, {'accuracy': 0.8953, 'data_size': 10000}, 210.86393220099853)
INFO flwr 2024-04-28 20:21:08,789 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 20:21:08,789 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:22:52,849 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 20:22:54,342 | server.py:125 | fit progress: (3, 1.5613341331481934, {'accuracy': 0.9044, 'data_size': 10000}, 316.4176434999972)
INFO flwr 2024-04-28 20:22:54,342 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 20:22:54,342 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:24:22,977 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 20:24:24,432 | server.py:125 | fit progress: (4, 1.5641123056411743, {'accuracy': 0.9013, 'data_size': 10000}, 406.5075942739786)
INFO flwr 2024-04-28 20:24:24,432 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 20:24:24,432 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:26:00,393 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 20:26:01,846 | server.py:125 | fit progress: (5, 1.5552219152450562, {'accuracy': 0.9095, 'data_size': 10000}, 503.9214167809987)
INFO flwr 2024-04-28 20:26:01,846 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 20:26:01,846 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:27:36,232 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 20:27:37,518 | server.py:125 | fit progress: (6, 1.5627977848052979, {'accuracy': 0.9007, 'data_size': 10000}, 599.5936315639992)
INFO flwr 2024-04-28 20:27:37,518 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 20:27:37,518 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:29:09,760 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 20:29:11,225 | server.py:125 | fit progress: (7, 1.562014102935791, {'accuracy': 0.9016, 'data_size': 10000}, 693.3003678089881)
INFO flwr 2024-04-28 20:29:11,225 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 20:29:11,225 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:30:40,218 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 20:30:41,703 | server.py:125 | fit progress: (8, 1.5516581535339355, {'accuracy': 0.9129, 'data_size': 10000}, 783.7786608659953)
INFO flwr 2024-04-28 20:30:41,703 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 20:30:41,703 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:32:24,445 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 20:32:25,921 | server.py:125 | fit progress: (9, 1.549927830696106, {'accuracy': 0.913, 'data_size': 10000}, 887.9965687479998)
INFO flwr 2024-04-28 20:32:25,921 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 20:32:25,921 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:33:57,436 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 20:33:58,979 | server.py:125 | fit progress: (10, 1.552748441696167, {'accuracy': 0.9103, 'data_size': 10000}, 981.0551804499992)
INFO flwr 2024-04-28 20:33:58,980 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 20:33:58,980 | server.py:153 | FL finished in 981.0556116929802
INFO flwr 2024-04-28 20:33:58,980 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 20:33:58,985 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.0298694e-05, -1.0882025e-03, -4.4569213e-05, -8.7757182e-04,
       -3.8613245e-04,  4.4605706e-04, -3.0709471e-05,  3.0860092e-04,
        9.0543483e-04,  6.7682128e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.7595650e-05,  7.3007897e-05,  1.0007570e-04,  1.7704713e-04,
        5.4097205e-04,  2.0012312e-04,  1.0813167e-04, -3.0823282e-04,
       -8.2090980e-04,  2.7454129e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.3338731e-05,  1.8368650e-04, -2.2461489e-04, -6.0040384e-05,
        1.5062123e-03,  6.0620595e-04,  1.8753897e-05, -6.4551416e-05,
       -1.6989217e-04, -1.7124400e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.0824594e-05, -2.8989107e-06,  1.8788653e-04, -5.2678130e-05,
        1.7195244e-04,  4.0277306e-04, -6.2763305e-05,  2.4076339e-04,
       -4.9729733e-04, -3.4690797e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.0037771e-05,  1.8340063e-04,  6.1515944e-05,  9.9698445e-05,
        3.9609722e-04, -2.8985066e-04,  7.5654026e-07, -3.6095083e-05,
       -2.4063796e-04, -2.6485050e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.50665537e-05,  1.16717507e-04,  1.98837588e-04, -8.98453345e-06,
        3.58624646e-04, -2.36237406e-06, -5.93971054e-05, -1.07978514e-04,
       -3.29639297e-04, -1.80858638e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.3017571e-04,  1.8790111e-04,  5.1562187e-05, -1.6971870e-04,
        4.6563213e-04,  5.1549944e-04,  7.8387109e-07,  3.1811485e-04,
       -4.4121890e-04, -5.9832964e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1263211e-05,  2.8708461e-04,  2.2083575e-05,  3.5622837e-05,
        6.7379914e-04,  2.6692753e-04, -3.8273414e-05,  7.1163877e-06,
       -4.1806878e-04, -8.0497802e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.9698871e-05,  5.5142125e-04, -1.9544490e-05,  1.0658672e-05,
        1.7992407e-04, -5.3542113e-05,  3.7327249e-05,  1.6497944e-04,
       -5.6382711e-04, -3.9707756e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.9961810e-05,  1.2327466e-05, -1.7069935e-04,  8.9371926e-05,
        6.3374260e-04,  1.7054846e-04, -5.1670931e-06,  2.2479623e-04,
       -2.5818552e-04, -7.8664883e-04], dtype=float32)])]}
INFO flwr 2024-04-28 20:33:58,986 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 20:33:58,986 | app.py:229 | app_fit: losses_centralized [(0, 2.3024184703826904), (1, 1.6697142124176025), (2, 1.5728384256362915), (3, 1.5613341331481934), (4, 1.5641123056411743), (5, 1.5552219152450562), (6, 1.5627977848052979), (7, 1.562014102935791), (8, 1.5516581535339355), (9, 1.549927830696106), (10, 1.552748441696167)]
INFO flwr 2024-04-28 20:33:58,986 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0784), (1, 0.807), (2, 0.8953), (3, 0.9044), (4, 0.9013), (5, 0.9095), (6, 0.9007), (7, 0.9016), (8, 0.9129), (9, 0.913), (10, 0.9103)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9103
wandb:     loss 1.55275
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_201717-eor5jaa0
wandb: Find logs at: ./wandb/offline-run-20240428_201717-eor5jaa0/logs
INFO flwr 2024-04-28 20:34:02,631 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 20:34:03,706 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1419318)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1419318)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 20:34:09,161	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 20:34:10,041	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 20:34:10,401	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 20:34:10,411	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 20:34:21,268 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77856815923.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 171665903821.0, 'CPU': 64.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 20:34:21,269 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 20:34:21,269 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 20:34:21,288 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 20:34:21,291 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 20:34:21,291 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 20:34:21,291 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 20:34:24,311 | server.py:94 | initial parameters (loss, other metrics): 2.3030407428741455, {'accuracy': 0.1123, 'data_size': 10000}
INFO flwr 2024-04-28 20:34:24,311 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 20:34:24,311 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1424931)[0m 2024-04-28 20:34:27.978186: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1424931)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1424931)[0m 2024-04-28 20:34:31.381975: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1424931)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1424931)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1424928)[0m 2024-04-28 20:34:28.164763: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1424928)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1424939)[0m 2024-04-28 20:34:31.381977: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 20:36:27,709 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 20:36:29,264 | server.py:125 | fit progress: (1, 1.7295053005218506, {'accuracy': 0.7349, 'data_size': 10000}, 124.95232927499455)
INFO flwr 2024-04-28 20:36:29,264 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 20:36:29,264 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:38:04,515 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 20:38:06,031 | server.py:125 | fit progress: (2, 1.579912543296814, {'accuracy': 0.8849, 'data_size': 10000}, 221.71952139699715)
INFO flwr 2024-04-28 20:38:06,031 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 20:38:06,031 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:39:38,758 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 20:39:40,290 | server.py:125 | fit progress: (3, 1.5760235786437988, {'accuracy': 0.8878, 'data_size': 10000}, 315.9788991829846)
INFO flwr 2024-04-28 20:39:40,290 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 20:39:40,291 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:41:16,622 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 20:41:17,915 | server.py:125 | fit progress: (4, 1.5764081478118896, {'accuracy': 0.8866, 'data_size': 10000}, 413.60375146300066)
INFO flwr 2024-04-28 20:41:17,915 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 20:41:17,916 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:42:39,539 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 20:42:40,799 | server.py:125 | fit progress: (5, 1.5547306537628174, {'accuracy': 0.9082, 'data_size': 10000}, 496.48792652398697)
INFO flwr 2024-04-28 20:42:40,799 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 20:42:40,800 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:44:29,908 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 20:44:31,173 | server.py:125 | fit progress: (6, 1.555180549621582, {'accuracy': 0.9083, 'data_size': 10000}, 606.8621181309863)
INFO flwr 2024-04-28 20:44:31,174 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 20:44:31,174 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:46:32,040 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 20:46:33,527 | server.py:125 | fit progress: (7, 1.5508878231048584, {'accuracy': 0.9112, 'data_size': 10000}, 729.2155771589896)
INFO flwr 2024-04-28 20:46:33,527 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 20:46:33,527 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:48:09,274 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 20:48:10,797 | server.py:125 | fit progress: (8, 1.5506027936935425, {'accuracy': 0.9127, 'data_size': 10000}, 826.4860443649814)
INFO flwr 2024-04-28 20:48:10,798 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 20:48:10,798 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:49:34,721 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 20:49:36,194 | server.py:125 | fit progress: (9, 1.548048496246338, {'accuracy': 0.9135, 'data_size': 10000}, 911.8826698159974)
INFO flwr 2024-04-28 20:49:36,194 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 20:49:36,194 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:51:10,274 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 20:51:11,776 | server.py:125 | fit progress: (10, 1.5514546632766724, {'accuracy': 0.9112, 'data_size': 10000}, 1007.4643106519943)
INFO flwr 2024-04-28 20:51:11,776 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 20:51:11,776 | server.py:153 | FL finished in 1007.4647894369846
INFO flwr 2024-04-28 20:51:11,776 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 20:51:11,782 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00555341,  0.00039441, -0.00015384, -0.0003397 ,  0.00113262,
       -0.01315493, -0.00050971,  0.00039741,  0.00628458,  0.00039581],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.3364121e-06,  2.2900898e-04,  2.5222831e-05, -1.3979754e-05,
        3.0636034e-05,  4.9881368e-05,  4.8995476e-05,  1.0237825e-04,
       -4.8531507e-04,  1.7593122e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.13342280e-05,  7.32904009e-05,  3.24420580e-05,  4.09219319e-05,
        3.72007344e-04,  1.15789435e-05, -8.15403037e-05, -2.56730913e-04,
       -5.77985047e-05, -1.65464051e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1757707e-05,  1.3118678e-04, -1.0500196e-05,  1.6686388e-05,
        5.8063562e-04,  1.7475306e-04, -5.7178427e-06, -5.3203930e-05,
       -2.5974665e-04, -5.5224338e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0911282e-05, -3.4773065e-04,  2.3839739e-05,  2.6421649e-03,
        6.8549119e-04,  1.2196029e-05, -8.1344464e-05, -1.5397562e-04,
       -3.0415964e-03,  2.8189478e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.4753774e-06,  3.6128473e-05, -2.4307639e-05,  1.2162519e-04,
        2.2207398e-04, -2.7751310e-05, -9.0786343e-06,  4.8820137e-05,
       -1.3530225e-04, -2.2765125e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.15400464e-05, -1.34012458e-04,  4.69232291e-05,  2.04719145e-05,
        2.80485139e-04, -6.88497603e-05, -1.82199492e-05,  5.48738717e-06,
       -1.07159816e-04,  1.64550693e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.3514977e-05,  2.7211988e-06,  4.3175223e-05,  2.2644525e-04,
        1.0076177e-04, -9.4358576e-05, -1.5988047e-05, -1.8474041e-04,
       -3.1865085e-05, -1.0962662e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2101690e-05, -1.4986834e-04, -3.0473489e-04, -7.9740901e-05,
        1.5612641e-04,  5.1328254e-05,  1.9036495e-05,  2.0228635e-04,
        2.7623036e-04, -1.5849619e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.6428284e-06, -3.3815424e-05, -8.0031750e-05,  9.9341478e-06,
        4.9083981e-05,  6.0064547e-05,  1.4145210e-06,  3.4329478e-05,
       -2.5817289e-05, -2.4768060e-05], dtype=float32)])]}
INFO flwr 2024-04-28 20:51:11,782 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 20:51:11,782 | app.py:229 | app_fit: losses_centralized [(0, 2.3030407428741455), (1, 1.7295053005218506), (2, 1.579912543296814), (3, 1.5760235786437988), (4, 1.5764081478118896), (5, 1.5547306537628174), (6, 1.555180549621582), (7, 1.5508878231048584), (8, 1.5506027936935425), (9, 1.548048496246338), (10, 1.5514546632766724)]
INFO flwr 2024-04-28 20:51:11,783 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1123), (1, 0.7349), (2, 0.8849), (3, 0.8878), (4, 0.8866), (5, 0.9082), (6, 0.9083), (7, 0.9112), (8, 0.9127), (9, 0.9135), (10, 0.9112)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9112
wandb:     loss 1.55145
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_203403-a6ge3rad
wandb: Find logs at: ./wandb/offline-run-20240428_203403-a6ge3rad/logs
INFO flwr 2024-04-28 20:51:15,427 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 20:51:16,483 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1424939)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1424939)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 20:51:22,150	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 20:51:23,099	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 20:51:23,455	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 20:51:23,457	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 20:51:34,391 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 171849077760.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 77935319040.0}
INFO flwr 2024-04-28 20:51:34,391 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 20:51:34,391 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 20:51:34,411 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 20:51:34,414 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 20:51:34,415 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 20:51:34,415 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 20:51:37,073 | server.py:94 | initial parameters (loss, other metrics): 2.305694818496704, {'accuracy': 0.1165, 'data_size': 10000}
INFO flwr 2024-04-28 20:51:37,074 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 20:51:37,074 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1431132)[0m 2024-04-28 20:51:40.738615: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1431132)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1431132)[0m 2024-04-28 20:51:43.315490: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1431132)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1431132)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1431138)[0m 2024-04-28 20:51:41.001034: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1431138)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1431133)[0m 2024-04-28 20:51:43.315482: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 20:53:39,765 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 20:53:41,266 | server.py:125 | fit progress: (1, 1.8220833539962769, {'accuracy': 0.6375, 'data_size': 10000}, 124.19180732397945)
INFO flwr 2024-04-28 20:53:41,266 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 20:53:41,266 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:55:17,212 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 20:55:18,679 | server.py:125 | fit progress: (2, 1.6329656839370728, {'accuracy': 0.8286, 'data_size': 10000}, 221.604548022995)
INFO flwr 2024-04-28 20:55:18,679 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 20:55:18,679 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:56:53,973 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 20:56:55,417 | server.py:125 | fit progress: (3, 1.5739980936050415, {'accuracy': 0.8866, 'data_size': 10000}, 318.3433900389937)
INFO flwr 2024-04-28 20:56:55,418 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 20:56:55,418 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 20:58:41,889 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 20:58:43,166 | server.py:125 | fit progress: (4, 1.5612235069274902, {'accuracy': 0.9005, 'data_size': 10000}, 426.0919044559996)
INFO flwr 2024-04-28 20:58:43,166 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 20:58:43,166 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:00:20,459 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 21:00:21,693 | server.py:125 | fit progress: (5, 1.5684394836425781, {'accuracy': 0.8934, 'data_size': 10000}, 524.6192661109963)
INFO flwr 2024-04-28 21:00:21,694 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 21:00:21,694 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:01:58,784 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 21:02:00,058 | server.py:125 | fit progress: (6, 1.5535048246383667, {'accuracy': 0.9078, 'data_size': 10000}, 622.9841247040022)
INFO flwr 2024-04-28 21:02:00,059 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 21:02:00,059 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:03:41,989 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 21:03:43,438 | server.py:125 | fit progress: (7, 1.5515750646591187, {'accuracy': 0.9091, 'data_size': 10000}, 726.3634585129912)
INFO flwr 2024-04-28 21:03:43,438 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 21:03:43,438 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:05:24,447 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 21:05:25,917 | server.py:125 | fit progress: (8, 1.5638096332550049, {'accuracy': 0.8969, 'data_size': 10000}, 828.8432369599759)
INFO flwr 2024-04-28 21:05:25,918 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 21:05:25,918 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:07:05,814 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 21:07:07,262 | server.py:125 | fit progress: (9, 1.5488359928131104, {'accuracy': 0.9114, 'data_size': 10000}, 930.1875221049995)
INFO flwr 2024-04-28 21:07:07,262 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 21:07:07,262 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:08:44,863 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 21:08:46,356 | server.py:125 | fit progress: (10, 1.5684643983840942, {'accuracy': 0.8923, 'data_size': 10000}, 1029.2821148039948)
INFO flwr 2024-04-28 21:08:46,356 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 21:08:46,357 | server.py:153 | FL finished in 1029.2825373729866
INFO flwr 2024-04-28 21:08:46,357 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 21:08:46,362 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1663521e-04,  4.1468881e-04, -2.0119760e-03,  7.2480459e-04,
       -1.7412362e-05,  1.2000528e-03, -1.5005590e-03,  1.7968022e-03,
       -2.8241248e-04, -7.3420752e-06], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0399824e-05, -2.3226085e-04, -1.2959180e-04, -1.5975276e-04,
       -6.3278235e-04,  5.5492466e-04, -8.5209809e-05,  6.3279708e-04,
        2.5241912e-04, -1.8011460e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.20412146e-05, -1.40899047e-05,  1.83847893e-04, -7.89875958e-06,
       -1.81389507e-03,  1.18305084e-04,  9.72707814e-04,  7.09165761e-04,
       -2.06882803e-04,  2.67135729e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.29123122e-07, -5.96704303e-05,  3.14385135e-04, -1.14051494e-04,
       -2.75491971e-06,  3.01703752e-04, -5.16690343e-05, -3.36139725e-04,
        7.93295403e-05, -1.30446104e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.9246991e-05,  5.9109980e-06, -1.6446185e-05,  3.1021966e-05,
       -3.3879845e-05,  3.9025341e-04, -3.3295692e-05, -1.0438793e-03,
       -1.0914552e-05,  7.8052160e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.3586798e-06,  7.9681129e-05,  3.1033502e-05,  2.8690822e-05,
       -2.2343150e-07, -7.7066552e-06,  2.5345185e-05, -1.0603421e-04,
       -9.6620075e-05,  3.8522139e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.1205523e-05, -4.7025713e-04, -3.3148965e-05,  3.3782289e-04,
        2.7286651e-05,  1.5711157e-04,  6.2715080e-05, -1.4842680e-03,
        3.8668554e-04,  9.5488271e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.8211474e-05, -3.9750281e-05, -2.5827056e-04,  4.3564512e-05,
        3.8282052e-04, -1.2464942e-05,  8.0458514e-05, -9.5940713e-06,
        6.7481528e-06, -1.3527046e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.5708501e-05, -2.7797319e-05,  2.8856419e-04,  4.0272123e-05,
       -2.1496917e-04, -2.9013272e-05, -1.6742008e-05,  2.3698978e-05,
       -9.3539835e-05, -1.6155276e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.8704626e-05,  4.8205202e-05, -1.9553539e-04, -1.5884933e-06,
        6.9995265e-05, -1.5317804e-04,  1.3509617e-04,  1.5402923e-04,
       -4.4026173e-04,  3.6454626e-04], dtype=float32)])]}
INFO flwr 2024-04-28 21:08:46,363 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 21:08:46,363 | app.py:229 | app_fit: losses_centralized [(0, 2.305694818496704), (1, 1.8220833539962769), (2, 1.6329656839370728), (3, 1.5739980936050415), (4, 1.5612235069274902), (5, 1.5684394836425781), (6, 1.5535048246383667), (7, 1.5515750646591187), (8, 1.5638096332550049), (9, 1.5488359928131104), (10, 1.5684643983840942)]
INFO flwr 2024-04-28 21:08:46,363 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1165), (1, 0.6375), (2, 0.8286), (3, 0.8866), (4, 0.9005), (5, 0.8934), (6, 0.9078), (7, 0.9091), (8, 0.8969), (9, 0.9114), (10, 0.8923)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8923
wandb:     loss 1.56846
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_205115-tfyu5jdf
wandb: Find logs at: ./wandb/offline-run-20240428_205115-tfyu5jdf/logs
INFO flwr 2024-04-28 21:08:50,011 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 21:08:50,901 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1431133)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1431133)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 21:08:55,829	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 21:08:56,275	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 21:08:56,642	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 21:08:56,643	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 21:09:07,626 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'memory': 171575369114.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 77818015334.0}
INFO flwr 2024-04-28 21:09:07,627 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 21:09:07,627 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 21:09:07,642 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 21:09:07,643 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 21:09:07,644 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 21:09:07,644 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 21:09:10,436 | server.py:94 | initial parameters (loss, other metrics): 2.2981507778167725, {'accuracy': 0.1221, 'data_size': 10000}
INFO flwr 2024-04-28 21:09:10,436 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 21:09:10,436 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1436283)[0m 2024-04-28 21:09:13.815317: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1436283)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1436283)[0m 2024-04-28 21:09:16.058130: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1436294)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1436294)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1436290)[0m 2024-04-28 21:09:13.963428: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1436290)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1436290)[0m 2024-04-28 21:09:16.209494: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 21:10:59,389 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 21:11:00,895 | server.py:125 | fit progress: (1, 1.6536376476287842, {'accuracy': 0.8169, 'data_size': 10000}, 110.4585235370032)
INFO flwr 2024-04-28 21:11:00,895 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 21:11:00,895 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:12:40,348 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 21:12:41,808 | server.py:125 | fit progress: (2, 1.5999122858047485, {'accuracy': 0.8594, 'data_size': 10000}, 211.37137386901304)
INFO flwr 2024-04-28 21:12:41,808 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 21:12:41,808 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:14:22,732 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 21:14:24,236 | server.py:125 | fit progress: (3, 1.562018632888794, {'accuracy': 0.899, 'data_size': 10000}, 313.799466972996)
INFO flwr 2024-04-28 21:14:24,236 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 21:14:24,236 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:16:02,041 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 21:16:03,300 | server.py:125 | fit progress: (4, 1.563347339630127, {'accuracy': 0.8987, 'data_size': 10000}, 412.86366892201477)
INFO flwr 2024-04-28 21:16:03,300 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 21:16:03,300 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:17:39,583 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 21:17:40,907 | server.py:125 | fit progress: (5, 1.5547380447387695, {'accuracy': 0.9072, 'data_size': 10000}, 510.4701826859964)
INFO flwr 2024-04-28 21:17:40,907 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 21:17:40,907 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:19:27,793 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 21:19:29,060 | server.py:125 | fit progress: (6, 1.553144931793213, {'accuracy': 0.9082, 'data_size': 10000}, 618.623378054006)
INFO flwr 2024-04-28 21:19:29,060 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 21:19:29,060 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:21:04,953 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 21:21:06,454 | server.py:125 | fit progress: (7, 1.5575523376464844, {'accuracy': 0.903, 'data_size': 10000}, 716.0177980290027)
INFO flwr 2024-04-28 21:21:06,454 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 21:21:06,455 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:22:44,973 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 21:22:46,441 | server.py:125 | fit progress: (8, 1.5478270053863525, {'accuracy': 0.9131, 'data_size': 10000}, 816.0047819610045)
INFO flwr 2024-04-28 21:22:46,441 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 21:22:46,442 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:24:20,165 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 21:24:21,676 | server.py:125 | fit progress: (9, 1.5579102039337158, {'accuracy': 0.9029, 'data_size': 10000}, 911.2392464750155)
INFO flwr 2024-04-28 21:24:21,676 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 21:24:21,676 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:26:04,723 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 21:26:06,219 | server.py:125 | fit progress: (10, 1.5487658977508545, {'accuracy': 0.9124, 'data_size': 10000}, 1015.7822943619976)
INFO flwr 2024-04-28 21:26:06,219 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 21:26:06,219 | server.py:153 | FL finished in 1015.7827054329973
INFO flwr 2024-04-28 21:26:06,219 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 21:26:06,225 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.6654042e-06,  1.2678117e-03,  7.6088952e-05, -5.4962339e-04,
        5.1624527e-05, -8.3052245e-04,  1.1134791e-04, -4.0371819e-05,
       -1.6139525e-04,  8.2726569e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9599276e-05,  1.4100973e-05,  2.7586899e-05,  8.1358870e-05,
        6.6103652e-04,  1.1102702e-05, -1.5729507e-05, -6.5511517e-04,
       -7.1462411e-05, -3.3241024e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.7654315e-06, -5.6607307e-05, -2.8824829e-04,  5.3835369e-04,
        1.3371969e-04, -5.2797630e-05, -1.8747134e-05, -4.7146856e-05,
        9.5516400e-05, -2.9823929e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.3592577e-07, -2.1576664e-06, -1.1263362e-05,  3.6698442e-05,
        4.8389804e-05,  8.8348468e-05,  2.3844649e-04,  4.6893651e-06,
       -7.4147538e-05, -3.2821452e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.4377205e-07,  4.7990867e-05,  6.1596443e-06,  4.8431298e-06,
        3.9817946e-04,  1.6217454e-06, -2.9036921e-04,  2.7178898e-05,
       -7.8586716e-05, -1.1644254e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1579982e-05,  4.3146531e-05, -4.0507512e-05,  1.9211222e-04,
        1.7315238e-04, -1.7163559e-04, -1.6169035e-04,  4.2135557e-06,
       -2.3806939e-05, -2.6550988e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.0671759e-05, -2.1807486e-05, -4.8867018e-06, -3.5610790e-06,
        1.2179276e-04,  4.8738009e-05, -1.1580943e-06,  2.9557401e-05,
        4.3437153e-06, -1.2232547e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1205249e-05,  9.8507542e-07, -2.6414245e-05, -3.8865023e-06,
        1.1156380e-04,  3.8987869e-06,  3.1839234e-05,  8.8988742e-08,
       -7.7735902e-05, -2.9127281e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3548536e-05,  6.0139964e-06,  2.9316241e-05, -3.5977875e-05,
        1.2235221e-04, -4.5985264e-05, -6.8566401e-06,  1.3949054e-05,
       -2.7191802e-05, -4.2063490e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1995432e-06,  1.1770409e-05,  3.6608024e-05,  3.4872261e-05,
        6.0833492e-05, -3.9559043e-05, -3.4989807e-06, -8.4860937e-07,
       -2.1872687e-05, -7.9505306e-05], dtype=float32)])]}
INFO flwr 2024-04-28 21:26:06,225 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 21:26:06,225 | app.py:229 | app_fit: losses_centralized [(0, 2.2981507778167725), (1, 1.6536376476287842), (2, 1.5999122858047485), (3, 1.562018632888794), (4, 1.563347339630127), (5, 1.5547380447387695), (6, 1.553144931793213), (7, 1.5575523376464844), (8, 1.5478270053863525), (9, 1.5579102039337158), (10, 1.5487658977508545)]
INFO flwr 2024-04-28 21:26:06,225 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1221), (1, 0.8169), (2, 0.8594), (3, 0.899), (4, 0.8987), (5, 0.9072), (6, 0.9082), (7, 0.903), (8, 0.9131), (9, 0.9029), (10, 0.9124)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9124
wandb:     loss 1.54877
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_210850-45x0jxvd
wandb: Find logs at: ./wandb/offline-run-20240428_210850-45x0jxvd/logs
INFO flwr 2024-04-28 21:26:09,895 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 21:26:10,786 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1436283)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1436283)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 21:26:15,766	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 21:26:16,115	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 21:26:16,508	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 21:26:16,510	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 21:26:27,517 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77804126208.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0, 'memory': 171542961152.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 21:26:27,517 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 21:26:27,518 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 21:26:27,537 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 21:26:27,540 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 21:26:27,540 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 21:26:27,541 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 21:26:30,475 | server.py:94 | initial parameters (loss, other metrics): 2.3058156967163086, {'accuracy': 0.102, 'data_size': 10000}
INFO flwr 2024-04-28 21:26:30,480 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 21:26:30,482 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1442427)[0m 2024-04-28 21:26:33.663427: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1442427)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1442422)[0m 2024-04-28 21:26:35.937891: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1442427)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1442427)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1442419)[0m 2024-04-28 21:26:33.884542: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1442419)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1442424)[0m 2024-04-28 21:26:36.198461: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 21:28:43,670 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 21:28:45,147 | server.py:125 | fit progress: (1, 1.758545160293579, {'accuracy': 0.6992, 'data_size': 10000}, 134.66512017301284)
INFO flwr 2024-04-28 21:28:45,148 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 21:28:45,148 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:30:24,801 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 21:30:26,275 | server.py:125 | fit progress: (2, 1.578515887260437, {'accuracy': 0.8812, 'data_size': 10000}, 235.79324464400997)
INFO flwr 2024-04-28 21:30:26,276 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 21:30:26,276 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:32:11,395 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 21:32:12,891 | server.py:125 | fit progress: (3, 1.5655462741851807, {'accuracy': 0.8961, 'data_size': 10000}, 342.4088724370231)
INFO flwr 2024-04-28 21:32:12,891 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 21:32:12,891 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:33:54,670 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 21:33:55,930 | server.py:125 | fit progress: (4, 1.5604753494262695, {'accuracy': 0.9011, 'data_size': 10000}, 445.447767509002)
INFO flwr 2024-04-28 21:33:55,930 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 21:33:55,930 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:35:42,446 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 21:35:43,715 | server.py:125 | fit progress: (5, 1.5776350498199463, {'accuracy': 0.8824, 'data_size': 10000}, 553.2334517020208)
INFO flwr 2024-04-28 21:35:43,716 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 21:35:43,716 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:37:24,387 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 21:37:25,879 | server.py:125 | fit progress: (6, 1.5567808151245117, {'accuracy': 0.9045, 'data_size': 10000}, 655.396822122013)
INFO flwr 2024-04-28 21:37:25,879 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 21:37:25,879 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:39:03,845 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 21:39:05,320 | server.py:125 | fit progress: (7, 1.55043363571167, {'accuracy': 0.9102, 'data_size': 10000}, 754.8382734040206)
INFO flwr 2024-04-28 21:39:05,321 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 21:39:05,321 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:40:47,739 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 21:40:49,246 | server.py:125 | fit progress: (8, 1.5586200952529907, {'accuracy': 0.9024, 'data_size': 10000}, 858.7638923170161)
INFO flwr 2024-04-28 21:40:49,246 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 21:40:49,246 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:42:27,921 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 21:42:29,412 | server.py:125 | fit progress: (9, 1.5496960878372192, {'accuracy': 0.9113, 'data_size': 10000}, 958.9298288830032)
INFO flwr 2024-04-28 21:42:29,412 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 21:42:29,412 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:44:09,400 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 21:44:10,648 | server.py:125 | fit progress: (10, 1.550160527229309, {'accuracy': 0.911, 'data_size': 10000}, 1060.1661824430048)
INFO flwr 2024-04-28 21:44:10,648 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 21:44:10,649 | server.py:153 | FL finished in 1060.1666021270212
INFO flwr 2024-04-28 21:44:10,649 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 21:44:10,654 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.30750137e-04,  1.43865577e-03,  7.29150997e-05, -6.51344308e-05,
       -1.36801589e-03, -1.00250894e-04, -6.18985854e-04,  8.11451828e-05,
       -3.84628162e-04,  1.07506430e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.46899290e-05, -7.87532554e-06, -9.67143933e-06,  2.15995465e-06,
        1.49224722e-03, -9.61235564e-05, -5.88877701e-05, -1.31146144e-03,
        3.23731001e-06,  1.10898745e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.57985443e-04,  6.68615612e-05,  1.01306316e-04, -1.16553689e-04,
        9.43836931e-05, -3.21110156e-06, -3.30740004e-05, -7.02977486e-05,
        1.01627677e-03, -1.21367059e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1209289e-02,  7.6789109e-07, -9.8992473e-07,  8.3510844e-05,
        3.2311459e-06, -2.7276797e-04,  1.1212614e-02,  1.6946175e-04,
        1.8849237e-04, -1.7502067e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4758268e-04,  2.7305688e-05, -2.6418379e-04,  2.1720201e-05,
        5.7929807e-05,  9.2511662e-05, -4.4965877e-06,  2.3899131e-05,
       -7.1600502e-05, -1.3064644e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5829984e-05,  7.9508685e-03, -8.2430299e-03,  2.2911101e-05,
        2.0774557e-04, -1.6387223e-04, -5.5819222e-05,  2.2596048e-04,
       -1.4377768e-05,  4.3803666e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7379835e-07, -3.6669483e-06, -7.2879216e-06,  1.6225304e-04,
       -6.3759435e-06, -2.4624952e-04, -4.4224370e-07, -7.5878546e-07,
        9.8943339e-05,  2.9129505e-06], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.6618958e-04,  1.8236115e-06,  6.6328030e-05, -3.5146982e-04,
       -3.2939275e-05, -5.8097357e-05, -1.1680217e-05,  8.4365784e-06,
        6.1481369e-05, -5.0060917e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6846351e-06,  6.8286899e-05, -4.0287654e-07, -1.4569989e-05,
        4.3221171e-06, -2.0470243e-05,  6.0202623e-08, -2.3197974e-05,
       -4.0343475e-05,  2.3650102e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.17879073e-06,  4.64518143e-06,  2.21543155e-06,  2.44193257e-06,
        3.84898041e-04, -9.17446232e-05, -3.71261587e-04, -2.60771176e-05,
        1.18577445e-04, -2.78633252e-05], dtype=float32)])]}
INFO flwr 2024-04-28 21:44:10,654 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 21:44:10,655 | app.py:229 | app_fit: losses_centralized [(0, 2.3058156967163086), (1, 1.758545160293579), (2, 1.578515887260437), (3, 1.5655462741851807), (4, 1.5604753494262695), (5, 1.5776350498199463), (6, 1.5567808151245117), (7, 1.55043363571167), (8, 1.5586200952529907), (9, 1.5496960878372192), (10, 1.550160527229309)]
INFO flwr 2024-04-28 21:44:10,655 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.102), (1, 0.6992), (2, 0.8812), (3, 0.8961), (4, 0.9011), (5, 0.8824), (6, 0.9045), (7, 0.9102), (8, 0.9024), (9, 0.9113), (10, 0.911)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.911
wandb:     loss 1.55016
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_212610-453no5xi
wandb: Find logs at: ./wandb/offline-run-20240428_212610-453no5xi/logs
INFO flwr 2024-04-28 21:44:14,263 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 21:44:14,934 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1442423)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1442423)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 21:44:19,739	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 21:44:20,100	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 21:44:20,543	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 21:44:20,544	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 21:44:31,494 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 77913289113.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 171797674599.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 21:44:31,494 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 21:44:31,494 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 21:44:31,510 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 21:44:31,512 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 21:44:31,512 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 21:44:31,512 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 21:44:34,938 | server.py:94 | initial parameters (loss, other metrics): 2.304542303085327, {'accuracy': 0.0715, 'data_size': 10000}
INFO flwr 2024-04-28 21:44:34,938 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 21:44:34,939 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1447941)[0m 2024-04-28 21:44:37.659327: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1447941)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1447942)[0m 2024-04-28 21:44:39.988940: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1447942)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1447942)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1447948)[0m 2024-04-28 21:44:37.854282: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1447948)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1447940)[0m 2024-04-28 21:44:40.097857: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 21:46:23,400 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 21:46:24,916 | server.py:125 | fit progress: (1, 1.9043755531311035, {'accuracy': 0.5549, 'data_size': 10000}, 109.97782355200616)
INFO flwr 2024-04-28 21:46:24,917 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 21:46:24,917 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:48:02,839 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 21:48:04,340 | server.py:125 | fit progress: (2, 1.7702189683914185, {'accuracy': 0.6886, 'data_size': 10000}, 209.4017161669908)
INFO flwr 2024-04-28 21:48:04,340 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 21:48:04,341 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:49:39,370 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 21:49:40,902 | server.py:125 | fit progress: (3, 1.6430435180664062, {'accuracy': 0.8168, 'data_size': 10000}, 305.96340366700315)
INFO flwr 2024-04-28 21:49:40,902 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 21:49:40,902 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:51:17,631 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 21:51:19,108 | server.py:125 | fit progress: (4, 1.633421540260315, {'accuracy': 0.8267, 'data_size': 10000}, 404.16942620501504)
INFO flwr 2024-04-28 21:51:19,108 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 21:51:19,108 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:52:54,308 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 21:52:55,790 | server.py:125 | fit progress: (5, 1.634636402130127, {'accuracy': 0.8261, 'data_size': 10000}, 500.8519299009931)
INFO flwr 2024-04-28 21:52:55,791 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 21:52:55,791 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:54:40,170 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 21:54:41,452 | server.py:125 | fit progress: (6, 1.6530311107635498, {'accuracy': 0.8072, 'data_size': 10000}, 606.5136793359998)
INFO flwr 2024-04-28 21:54:41,452 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 21:54:41,453 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:56:22,576 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 21:56:24,077 | server.py:125 | fit progress: (7, 1.6327805519104004, {'accuracy': 0.8277, 'data_size': 10000}, 709.1389218849945)
INFO flwr 2024-04-28 21:56:24,078 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 21:56:24,078 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:57:51,061 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 21:57:52,525 | server.py:125 | fit progress: (8, 1.6309887170791626, {'accuracy': 0.8294, 'data_size': 10000}, 797.5868483319937)
INFO flwr 2024-04-28 21:57:52,526 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 21:57:52,526 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 21:59:33,442 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 21:59:34,959 | server.py:125 | fit progress: (9, 1.6292999982833862, {'accuracy': 0.8314, 'data_size': 10000}, 900.0205915670085)
INFO flwr 2024-04-28 21:59:34,959 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 21:59:34,960 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:01:03,235 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 22:01:04,711 | server.py:125 | fit progress: (10, 1.6255409717559814, {'accuracy': 0.8349, 'data_size': 10000}, 989.772043828998)
INFO flwr 2024-04-28 22:01:04,711 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 22:01:04,711 | server.py:153 | FL finished in 989.7724539689953
INFO flwr 2024-04-28 22:01:04,711 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 22:01:04,716 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.0614141e-04,  6.9776940e-04,  1.4742257e-04, -1.1224579e-03,
        1.3458246e-03,  8.5186458e-04,  1.9704082e-04, -1.5255488e-03,
       -1.5310106e-07,  1.1438662e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0788621e-03, -3.6383744e-03,  4.0222285e-03,  1.4852139e-04,
       -5.3809024e-04, -1.8529734e-03,  1.8075012e-03,  3.1116017e-04,
       -9.2111360e-11,  8.1890059e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4484505e-04, -1.0117368e-03, -2.4737534e-04, -2.9602306e-04,
       -7.4543709e-06,  1.0061813e-05,  7.4728456e-04, -2.8800439e-05,
       -2.4781273e-13,  5.8919797e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.8933167e-04,  3.4481799e-04, -3.8135037e-04,  8.3530560e-04,
        1.4624152e-04, -2.0439769e-03, -5.5612844e-07, -5.3440141e-05,
       -2.1044791e-12,  9.6364983e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.0913125e-05, -6.0709830e-05,  6.7676505e-04, -1.8714548e-03,
        2.4343963e-04,  1.2773053e-03, -6.5861466e-05,  2.6677273e-05,
       -3.1199408e-11, -2.5705417e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.8059713e-07, -4.8492986e-04, -4.4838715e-04,  6.1936816e-04,
       -1.0882756e-03,  3.3796832e-04, -1.9229596e-04,  3.9140380e-04,
       -1.1108327e-10,  8.6438115e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3687374e-07, -2.5919250e-03,  2.8378540e-03, -1.3473096e-03,
        2.8819952e-05,  2.0570070e-03, -1.7397009e-03, -7.2905950e-06,
       -2.3856935e-15,  7.6269882e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.7445237e-06,  1.5870822e-03, -4.6250538e-05,  4.5311135e-05,
        1.7457625e-05, -1.5736844e-03, -6.5439046e-05, -2.1933601e-04,
        4.4530660e-18,  2.5962552e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2118521e-06, -3.3679440e-05,  6.5183427e-05, -5.5859415e-05,
        2.0464184e-04,  5.2509335e-05, -4.6009322e-06, -1.4876975e-06,
       -3.3767352e-17, -2.2350096e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.5408183e-04,  1.1951297e-03, -4.3279162e-04, -1.2238258e-03,
       -9.3263836e-05,  9.0342964e-04,  2.5471989e-05,  4.6728846e-07,
       -1.7384673e-12, -2.0551679e-05], dtype=float32)])]}
INFO flwr 2024-04-28 22:01:04,717 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 22:01:04,717 | app.py:229 | app_fit: losses_centralized [(0, 2.304542303085327), (1, 1.9043755531311035), (2, 1.7702189683914185), (3, 1.6430435180664062), (4, 1.633421540260315), (5, 1.634636402130127), (6, 1.6530311107635498), (7, 1.6327805519104004), (8, 1.6309887170791626), (9, 1.6292999982833862), (10, 1.6255409717559814)]
INFO flwr 2024-04-28 22:01:04,717 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0715), (1, 0.5549), (2, 0.6886), (3, 0.8168), (4, 0.8267), (5, 0.8261), (6, 0.8072), (7, 0.8277), (8, 0.8294), (9, 0.8314), (10, 0.8349)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8349
wandb:     loss 1.62554
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_214414-d3kuaaxi
wandb: Find logs at: ./wandb/offline-run-20240428_214414-d3kuaaxi/logs
INFO flwr 2024-04-28 22:01:08,367 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 22:01:12,120 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1447938)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1447938)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 22:01:29,657	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 22:01:31,146	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 22:01:31,505	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip' (0.20MiB) to Ray cluster...
2024-04-28 22:01:31,507	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_6c5ad006d6cbd383.zip'.
INFO flwr 2024-04-28 22:01:42,451 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 77940763852.0, 'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:10.20.240.13': 1.0, 'memory': 171861782324.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 22:01:42,452 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 22:01:42,452 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 22:01:42,470 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 22:01:42,473 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 22:01:42,474 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 22:01:42,474 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 22:01:45,104 | server.py:94 | initial parameters (loss, other metrics): 2.3042690753936768, {'accuracy': 0.0929, 'data_size': 10000}
INFO flwr 2024-04-28 22:01:45,104 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 22:01:45,105 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1454971)[0m 2024-04-28 22:01:53.513328: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1454971)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1454971)[0m 2024-04-28 22:02:07.669504: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(pid=1454962)[0m 2024-04-28 22:01:53.556383: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1454962)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1454971)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1454971)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1454968)[0m 2024-04-28 22:02:07.669505: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 22:04:24,860 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 22:04:26,370 | server.py:125 | fit progress: (1, 1.6932718753814697, {'accuracy': 0.7647, 'data_size': 10000}, 161.26554702798603)
INFO flwr 2024-04-28 22:04:26,371 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 22:04:26,371 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:06:02,043 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 22:06:03,527 | server.py:125 | fit progress: (2, 1.6210912466049194, {'accuracy': 0.8398, 'data_size': 10000}, 258.4221034629736)
INFO flwr 2024-04-28 22:06:03,527 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 22:06:03,527 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:07:36,031 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 22:07:37,530 | server.py:125 | fit progress: (3, 1.5709733963012695, {'accuracy': 0.8891, 'data_size': 10000}, 352.4257616569812)
INFO flwr 2024-04-28 22:07:37,531 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 22:07:37,531 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:09:10,786 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 22:09:12,058 | server.py:125 | fit progress: (4, 1.562353491783142, {'accuracy': 0.8984, 'data_size': 10000}, 446.95309777298826)
INFO flwr 2024-04-28 22:09:12,058 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 22:09:12,058 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:10:55,260 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 22:10:56,522 | server.py:125 | fit progress: (5, 1.556426763534546, {'accuracy': 0.9048, 'data_size': 10000}, 551.4169922899746)
INFO flwr 2024-04-28 22:10:56,522 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 22:10:56,522 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:12:35,900 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 22:12:37,419 | server.py:125 | fit progress: (6, 1.561124324798584, {'accuracy': 0.8999, 'data_size': 10000}, 652.3140992119734)
INFO flwr 2024-04-28 22:12:37,419 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 22:12:37,419 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:14:30,410 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 22:14:31,899 | server.py:125 | fit progress: (7, 1.5587894916534424, {'accuracy': 0.9013, 'data_size': 10000}, 766.7946022489923)
INFO flwr 2024-04-28 22:14:31,899 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 22:14:31,900 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:15:53,254 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 22:15:54,720 | server.py:125 | fit progress: (8, 1.5490403175354004, {'accuracy': 0.9115, 'data_size': 10000}, 849.6156917399785)
INFO flwr 2024-04-28 22:15:54,721 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 22:15:54,721 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:17:29,012 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 22:17:30,505 | server.py:125 | fit progress: (9, 1.560659646987915, {'accuracy': 0.9004, 'data_size': 10000}, 945.4000327419781)
INFO flwr 2024-04-28 22:17:30,505 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 22:17:30,505 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:19:02,878 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 22:19:04,170 | server.py:125 | fit progress: (10, 1.5672259330749512, {'accuracy': 0.8934, 'data_size': 10000}, 1039.0656882629846)
INFO flwr 2024-04-28 22:19:04,171 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 22:19:04,171 | server.py:153 | FL finished in 1039.0660923409741
INFO flwr 2024-04-28 22:19:04,171 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 22:19:04,176 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.79488543e-05, -1.06490246e-04, -5.27817938e-05,  6.19684215e-08,
        2.65119539e-04,  2.34807929e-04, -2.95296282e-04,  1.33534326e-04,
       -1.47944826e-04, -1.30545059e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.50697472e-08,  1.01011123e-04, -1.95791417e-05,  1.11947834e-07,
        1.20075431e-03, -1.06253254e-03, -3.13204083e-07, -1.18206907e-03,
       -1.37498375e-06,  9.63963103e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.9319790e-08,  2.5085592e-05,  1.3133704e-06, -3.9447596e-06,
       -1.6354950e-03, -4.6983288e-05,  2.6045612e-04, -3.0529634e-05,
        1.4005193e-03,  2.9630035e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.8557992e-06, -3.2836892e-06,  7.3678643e-07, -1.2745495e-05,
       -2.8471134e-04,  6.1002456e-06, -1.9073013e-07,  7.3356845e-04,
       -4.0882567e-04, -3.4498466e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6293072e-05,  1.7363547e-05, -6.0081260e-05,  4.6548430e-05,
        1.9180774e-05, -1.6273985e-05, -1.1581051e-07, -1.5303389e-06,
       -1.3960746e-05, -7.4323798e-06], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.2258001e-05,  2.7345426e-04, -2.6926532e-04,  8.7607732e-05,
        1.4835816e-05,  2.9096562e-05, -7.3713754e-06,  4.4310514e-06,
       -6.5546541e-05, -2.4968687e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6474814e-04, -2.2867644e-06, -1.6493654e-04,  1.1146495e-07,
        3.1436073e-05, -1.4832467e-05,  1.5192625e-06,  4.7967586e-07,
        3.9253874e-07, -1.6616961e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3821484e-05, -4.8576543e-04,  3.1684558e-05,  3.0975989e-06,
       -3.1891223e-06, -4.7522190e-06, -8.2600764e-06,  5.1132246e-04,
       -7.0368842e-05,  1.2414367e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.6844675e-08,  7.9356560e-06, -9.7753778e-05,  8.1684266e-06,
        3.8543923e-05, -3.7270760e-07, -1.3113365e-05, -3.0871722e-04,
       -2.3898543e-05,  3.8916746e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.3595634e-06, -3.1583972e-06,  1.0886412e-06, -2.0969012e-06,
        1.5890420e-05, -8.9726672e-07, -2.7376303e-05,  1.3511284e-05,
       -4.7734608e-07,  1.0872459e-05], dtype=float32)])]}
INFO flwr 2024-04-28 22:19:04,176 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 22:19:04,177 | app.py:229 | app_fit: losses_centralized [(0, 2.3042690753936768), (1, 1.6932718753814697), (2, 1.6210912466049194), (3, 1.5709733963012695), (4, 1.562353491783142), (5, 1.556426763534546), (6, 1.561124324798584), (7, 1.5587894916534424), (8, 1.5490403175354004), (9, 1.560659646987915), (10, 1.5672259330749512)]
INFO flwr 2024-04-28 22:19:04,177 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0929), (1, 0.7647), (2, 0.8398), (3, 0.8891), (4, 0.8984), (5, 0.9048), (6, 0.8999), (7, 0.9013), (8, 0.9115), (9, 0.9004), (10, 0.8934)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8934
wandb:     loss 1.56723
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_220109-jm3d0sl5
wandb: Find logs at: ./wandb/offline-run-20240428_220109-jm3d0sl5/logs
INFO flwr 2024-04-28 22:19:07,775 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 22:19:13,408 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1454968)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1454968)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 22:19:20,533	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 22:19:21,627	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 22:19:22,284	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 22:19:22,285	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 22:19:36,566 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79371671961.0, 'node:10.20.240.13': 1.0, 'memory': 175200567911.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 22:19:36,567 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 22:19:36,567 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 22:19:36,582 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 22:19:36,585 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 22:19:36,585 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 22:19:36,586 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 22:19:39,803 | server.py:94 | initial parameters (loss, other metrics): 2.3048839569091797, {'accuracy': 0.0672, 'data_size': 10000}
INFO flwr 2024-04-28 22:19:39,803 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 22:19:39,803 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1460915)[0m 2024-04-28 22:19:45.008375: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1460915)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1460914)[0m 2024-04-28 22:19:52.939834: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(pid=1460917)[0m 2024-04-28 22:19:45.089102: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1460917)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1460914)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1460914)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1460916)[0m 2024-04-28 22:19:52.939834: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 22:22:16,874 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 22:22:18,390 | server.py:125 | fit progress: (1, 1.8881043195724487, {'accuracy': 0.5669, 'data_size': 10000}, 158.586516284995)
INFO flwr 2024-04-28 22:22:18,390 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 22:22:18,390 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:24:11,269 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 22:24:12,737 | server.py:125 | fit progress: (2, 1.6473519802093506, {'accuracy': 0.8135, 'data_size': 10000}, 272.9339447079983)
INFO flwr 2024-04-28 22:24:12,737 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 22:24:12,738 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:25:51,217 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 22:25:52,716 | server.py:125 | fit progress: (3, 1.5747897624969482, {'accuracy': 0.8855, 'data_size': 10000}, 372.9127048260125)
INFO flwr 2024-04-28 22:25:52,716 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 22:25:52,716 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:27:32,002 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 22:27:33,474 | server.py:125 | fit progress: (4, 1.5730215311050415, {'accuracy': 0.8874, 'data_size': 10000}, 473.67081681799027)
INFO flwr 2024-04-28 22:27:33,474 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 22:27:33,475 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:29:07,813 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 22:29:09,071 | server.py:125 | fit progress: (5, 1.5610228776931763, {'accuracy': 0.8993, 'data_size': 10000}, 569.2677575679845)
INFO flwr 2024-04-28 22:29:09,071 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 22:29:09,072 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:30:57,135 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 22:30:58,649 | server.py:125 | fit progress: (6, 1.5550795793533325, {'accuracy': 0.9054, 'data_size': 10000}, 678.8453139349876)
INFO flwr 2024-04-28 22:30:58,677 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 22:30:58,678 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:32:35,988 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 22:32:37,589 | server.py:125 | fit progress: (7, 1.574502944946289, {'accuracy': 0.8861, 'data_size': 10000}, 777.7859496960009)
INFO flwr 2024-04-28 22:32:37,590 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 22:32:37,590 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:34:18,043 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 22:34:19,517 | server.py:125 | fit progress: (8, 1.5516488552093506, {'accuracy': 0.91, 'data_size': 10000}, 879.7138144659984)
INFO flwr 2024-04-28 22:34:19,517 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 22:34:19,518 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:36:07,697 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 22:36:09,204 | server.py:125 | fit progress: (9, 1.5597337484359741, {'accuracy': 0.9013, 'data_size': 10000}, 989.400698960002)
INFO flwr 2024-04-28 22:36:09,204 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 22:36:09,204 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:37:58,112 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 22:37:59,391 | server.py:125 | fit progress: (10, 1.5610278844833374, {'accuracy': 0.8991, 'data_size': 10000}, 1099.588147506991)
INFO flwr 2024-04-28 22:37:59,392 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 22:37:59,392 | server.py:153 | FL finished in 1099.5885629839904
INFO flwr 2024-04-28 22:37:59,392 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 22:37:59,397 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.8467821e-04, -1.7061194e-03,  7.7853672e-04, -9.4771420e-04,
        8.3350918e-05, -3.9612434e-05,  4.2134681e-04,  1.2869070e-03,
       -7.3749747e-05,  1.2375068e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5751468e-05, -8.8806883e-06, -8.8506101e-07, -6.0983730e-04,
        6.0755201e-07,  6.5643719e-04,  1.4735181e-06,  3.8077836e-03,
        1.3329646e-03, -5.2054143e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.8557482e-06,  1.4991337e-03, -1.0450417e-03, -9.0498406e-06,
        1.4362353e-04, -1.0314604e-05,  2.6078081e-07, -5.5957417e-04,
        3.3860181e-06, -2.4286484e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.3956843e-07, -1.0019467e-06, -1.4669572e-06,  1.1801496e-06,
       -1.5263690e-06, -2.7642204e-06,  2.5459238e-07,  1.7940757e-06,
        3.1543580e-06,  1.2165565e-06], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3289978e-08, -9.4233218e-07,  6.7487170e-05, -6.1476598e-08,
       -1.6687443e-06,  2.3988923e-06,  1.8423331e-06, -6.9715796e-05,
        1.5500939e-06, -8.6579485e-07], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2708608e-06,  5.5170367e-06, -3.2331725e-06, -5.0282580e-07,
        3.1386267e-07,  1.9572792e-05, -3.2244279e-05, -5.1563707e-06,
        7.5993366e-06,  4.8714414e-06], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0685200e-07, -1.6470282e-06, -1.9032414e-06,  4.2862057e-06,
        1.7238161e-06, -1.4144737e-06, -1.2967553e-06, -7.7805616e-06,
       -1.5709807e-07,  8.5087013e-06], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.8499053e-07, -1.4604090e-07,  1.0237177e-06, -1.7912100e-07,
       -1.2475214e-06,  1.1452655e-06, -1.2358007e-05,  1.1081966e-05,
       -3.4918719e-07,  1.4123732e-06], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.0486063e-10, -4.1479154e-07, -1.8274584e-06,  1.7868733e-05,
        5.1342759e-05, -7.1420500e-06,  9.4871254e-08, -3.3776271e-06,
        2.7467472e-06, -5.9290989e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1439928e-06, -1.8481514e-07,  3.2028023e-04, -3.5082737e-06,
        8.5379355e-07,  2.3981147e-07, -2.5407157e-08, -7.1538895e-09,
        6.8219668e-07, -3.1947275e-04], dtype=float32)])]}
INFO flwr 2024-04-28 22:37:59,398 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 22:37:59,398 | app.py:229 | app_fit: losses_centralized [(0, 2.3048839569091797), (1, 1.8881043195724487), (2, 1.6473519802093506), (3, 1.5747897624969482), (4, 1.5730215311050415), (5, 1.5610228776931763), (6, 1.5550795793533325), (7, 1.574502944946289), (8, 1.5516488552093506), (9, 1.5597337484359741), (10, 1.5610278844833374)]
INFO flwr 2024-04-28 22:37:59,398 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0672), (1, 0.5669), (2, 0.8135), (3, 0.8855), (4, 0.8874), (5, 0.8993), (6, 0.9054), (7, 0.8861), (8, 0.91), (9, 0.9013), (10, 0.8991)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8991
wandb:     loss 1.56103
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_221912-dtyu7jt1
wandb: Find logs at: ./wandb/offline-run-20240428_221912-dtyu7jt1/logs
INFO flwr 2024-04-28 22:38:03,091 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 1
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 22:38:06,179 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1460916)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1460916)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 22:38:13,193	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 22:38:14,533	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 22:38:14,871	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 22:38:14,873	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 22:38:25,710 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79004692070.0, 'node:__internal_head__': 1.0, 'memory': 174344281498.0, 'node:10.20.240.13': 1.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 22:38:25,710 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 22:38:25,710 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 22:38:25,726 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 22:38:25,728 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 22:38:25,729 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 22:38:25,729 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 22:38:29,759 | server.py:94 | initial parameters (loss, other metrics): 2.3012635707855225, {'accuracy': 0.1222, 'data_size': 10000}
INFO flwr 2024-04-28 22:38:29,759 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 22:38:29,760 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1477864)[0m 2024-04-28 22:38:32.144845: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1477864)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1477864)[0m 2024-04-28 22:38:34.647561: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1477864)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1477864)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1477865)[0m 2024-04-28 22:38:32.225032: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1477865)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1477862)[0m 2024-04-28 22:38:34.647562: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 22:40:16,497 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 22:40:17,946 | server.py:125 | fit progress: (1, 1.8668240308761597, {'accuracy': 0.5934, 'data_size': 10000}, 108.1863965470111)
INFO flwr 2024-04-28 22:40:17,946 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 22:40:17,946 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:42:00,451 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 22:42:01,932 | server.py:125 | fit progress: (2, 1.7027875185012817, {'accuracy': 0.7578, 'data_size': 10000}, 212.17244151598425)
INFO flwr 2024-04-28 22:42:01,932 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 22:42:01,933 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:43:37,814 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 22:43:39,322 | server.py:125 | fit progress: (3, 1.7130361795425415, {'accuracy': 0.7474, 'data_size': 10000}, 309.5624390599842)
INFO flwr 2024-04-28 22:43:39,322 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 22:43:39,323 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:45:30,616 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 22:45:32,134 | server.py:125 | fit progress: (4, 1.6556622982025146, {'accuracy': 0.8048, 'data_size': 10000}, 422.37450791100855)
INFO flwr 2024-04-28 22:45:32,134 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 22:45:32,135 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:47:05,585 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 22:47:07,030 | server.py:125 | fit progress: (5, 1.652925968170166, {'accuracy': 0.8077, 'data_size': 10000}, 517.270376733999)
INFO flwr 2024-04-28 22:47:07,030 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 22:47:07,030 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:48:51,300 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 22:48:52,598 | server.py:125 | fit progress: (6, 1.6509937047958374, {'accuracy': 0.8102, 'data_size': 10000}, 622.8385228189873)
INFO flwr 2024-04-28 22:48:52,599 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 22:48:52,599 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:50:29,945 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 22:50:31,446 | server.py:125 | fit progress: (7, 1.6476308107376099, {'accuracy': 0.8134, 'data_size': 10000}, 721.68590609901)
INFO flwr 2024-04-28 22:50:31,446 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 22:50:31,446 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:52:13,146 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 22:52:14,651 | server.py:125 | fit progress: (8, 1.6460009813308716, {'accuracy': 0.8146, 'data_size': 10000}, 824.8913410870009)
INFO flwr 2024-04-28 22:52:14,651 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 22:52:14,652 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:53:50,007 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 22:53:51,478 | server.py:125 | fit progress: (9, 1.659682035446167, {'accuracy': 0.8009, 'data_size': 10000}, 921.7181033439992)
INFO flwr 2024-04-28 22:53:51,478 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 22:53:51,478 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:55:23,789 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 22:55:25,299 | server.py:125 | fit progress: (10, 1.647171139717102, {'accuracy': 0.8137, 'data_size': 10000}, 1015.5394694239949)
INFO flwr 2024-04-28 22:55:25,299 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 22:55:25,299 | server.py:153 | FL finished in 1015.5398893610109
INFO flwr 2024-04-28 22:55:25,300 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 22:55:25,305 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.8001900e-05, -3.6989266e-04,  3.4059223e-04, -1.3623368e-04,
        2.9600336e-05, -1.1033861e-03,  8.3730090e-04,  8.3749110e-06,
        6.8327459e-04, -2.7162436e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.4207860e-18,  5.4003485e-05, -1.4649462e-02,  2.0182552e-03,
       -5.1824925e-05, -2.0397867e-03,  1.4420361e-02, -1.1609510e-04,
        4.4860214e-04, -8.4050247e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5435113e-20, -3.2591732e-05, -1.4071050e-05, -4.3025495e-05,
        9.1916481e-05,  1.0022291e-03, -1.2455379e-03, -6.7737674e-05,
        3.0869310e-04,  1.3176913e-07], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1208663e-21, -6.6822278e-05,  1.8801240e-02,  3.7361384e-05,
       -1.8598329e-02, -1.8124953e-04,  4.7587895e-05, -1.1432339e-04,
        3.9463156e-04, -3.2009633e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.2341213e-25,  3.5527941e-07, -1.0598788e-04,  3.8152779e-04,
       -3.4129494e-06, -3.0342612e-04,  1.2489363e-04,  7.4815193e-06,
       -1.0729388e-03,  9.7150594e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.4934985e-18,  6.8351766e-04, -6.6126953e-04, -4.5522196e-05,
       -1.4587957e-04,  6.8432017e-04, -2.7961738e-04, -6.5585074e-04,
        3.9568561e-04,  2.4620587e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2478711e-22, -7.8086742e-07,  3.2983805e-06,  6.0454553e-05,
       -3.8698473e-04,  1.1643263e-05, -3.1868727e-05, -6.3150846e-06,
       -4.3015789e-05,  3.9357433e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.6993091e-23, -3.1948608e-07,  9.9709595e-04,  2.5723511e-05,
        5.3250355e-05, -3.9520433e-05, -1.1585224e-05,  1.5001557e-08,
        8.8732804e-06, -1.0335327e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.3200969e-25,  1.9605723e-05, -9.7852853e-06,  6.9136054e-06,
        1.6626497e-04,  2.3234006e-06, -2.6863028e-04, -1.2894036e-05,
        2.6740140e-04, -1.7119932e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.5572786e-24,  5.2805431e-06,  2.5007193e-05,  2.7483588e-03,
        1.1766321e-08, -2.8862625e-03, -2.6926824e-05,  1.4706885e-03,
       -1.0324475e-05, -1.3258297e-03], dtype=float32)])]}
INFO flwr 2024-04-28 22:55:25,305 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 22:55:25,305 | app.py:229 | app_fit: losses_centralized [(0, 2.3012635707855225), (1, 1.8668240308761597), (2, 1.7027875185012817), (3, 1.7130361795425415), (4, 1.6556622982025146), (5, 1.652925968170166), (6, 1.6509937047958374), (7, 1.6476308107376099), (8, 1.6460009813308716), (9, 1.659682035446167), (10, 1.647171139717102)]
INFO flwr 2024-04-28 22:55:25,306 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1222), (1, 0.5934), (2, 0.7578), (3, 0.7474), (4, 0.8048), (5, 0.8077), (6, 0.8102), (7, 0.8134), (8, 0.8146), (9, 0.8009), (10, 0.8137)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8137
wandb:     loss 1.64717
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_223805-fhkc4w7u
wandb: Find logs at: ./wandb/offline-run-20240428_223805-fhkc4w7u/logs
INFO flwr 2024-04-28 22:55:29,026 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 22:55:30,891 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1477862)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1477862)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 22:55:35,896	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 22:55:36,283	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 22:55:36,660	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 22:55:36,662	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 22:55:47,604 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78894845952.0, 'node:10.20.240.13': 1.0, 'memory': 174087973888.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 22:55:47,604 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 22:55:47,604 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 22:55:47,619 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 22:55:47,622 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 22:55:47,622 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 22:55:47,623 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 22:55:50,992 | server.py:94 | initial parameters (loss, other metrics): 2.3025295734405518, {'accuracy': 0.081, 'data_size': 10000}
INFO flwr 2024-04-28 22:55:50,993 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 22:55:50,993 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1497120)[0m 2024-04-28 22:55:53.617644: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1497120)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1497132)[0m 2024-04-28 22:55:55.945209: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1497129)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1497129)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1497129)[0m 2024-04-28 22:55:53.839896: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1497129)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1497127)[0m 2024-04-28 22:55:56.011631: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 22:56:19,414 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 22:56:20,874 | server.py:125 | fit progress: (1, 1.7769043445587158, {'accuracy': 0.7307, 'data_size': 10000}, 29.88075413898332)
INFO flwr 2024-04-28 22:56:20,874 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 22:56:20,874 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:56:35,934 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 22:56:37,424 | server.py:125 | fit progress: (2, 1.6462669372558594, {'accuracy': 0.831, 'data_size': 10000}, 46.43068546199356)
INFO flwr 2024-04-28 22:56:37,424 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 22:56:37,424 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:56:50,912 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 22:56:52,394 | server.py:125 | fit progress: (3, 1.6219168901443481, {'accuracy': 0.85, 'data_size': 10000}, 61.40062044799561)
INFO flwr 2024-04-28 22:56:52,394 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 22:56:52,394 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:57:06,792 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 22:57:08,079 | server.py:125 | fit progress: (4, 1.5664924383163452, {'accuracy': 0.9062, 'data_size': 10000}, 77.08580884899129)
INFO flwr 2024-04-28 22:57:08,079 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 22:57:08,079 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:57:22,667 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 22:57:23,925 | server.py:125 | fit progress: (5, 1.5809834003448486, {'accuracy': 0.8911, 'data_size': 10000}, 92.93179037800292)
INFO flwr 2024-04-28 22:57:23,925 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 22:57:23,925 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:57:38,357 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 22:57:39,845 | server.py:125 | fit progress: (6, 1.5704933404922485, {'accuracy': 0.8993, 'data_size': 10000}, 108.85155664398917)
INFO flwr 2024-04-28 22:57:39,845 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 22:57:39,845 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:57:53,907 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 22:57:55,380 | server.py:125 | fit progress: (7, 1.570999264717102, {'accuracy': 0.8995, 'data_size': 10000}, 124.38667198398616)
INFO flwr 2024-04-28 22:57:55,380 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 22:57:55,380 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:58:07,933 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 22:58:09,479 | server.py:125 | fit progress: (8, 1.562941551208496, {'accuracy': 0.908, 'data_size': 10000}, 138.48617967698374)
INFO flwr 2024-04-28 22:58:09,479 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 22:58:09,480 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:58:23,477 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 22:58:24,977 | server.py:125 | fit progress: (9, 1.5867077112197876, {'accuracy': 0.8836, 'data_size': 10000}, 153.9841044700006)
INFO flwr 2024-04-28 22:58:24,977 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 22:58:24,978 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:58:39,053 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 22:58:40,527 | server.py:125 | fit progress: (10, 1.5561035871505737, {'accuracy': 0.9117, 'data_size': 10000}, 169.53366810298758)
INFO flwr 2024-04-28 22:58:40,527 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 22:58:40,527 | server.py:153 | FL finished in 169.5340637039917
INFO flwr 2024-04-28 22:58:40,527 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 22:58:40,535 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1238464e-04, -6.1991677e-04, -1.3930775e-03,  2.4973105e-03,
        4.8646596e-03, -2.6256631e-03,  9.6410302e-05, -2.1851934e-03,
       -9.1487338e-04,  4.9273152e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.4991054e-05,  1.7745104e-03, -5.5584121e-03, -3.1776456e-04,
        5.6122569e-03,  3.2209517e-03, -1.1700912e-03, -7.2424865e-04,
        9.0573257e-04, -3.6479316e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00150561, -0.00198972,  0.00076294,  0.00231511,  0.00536695,
        0.00249017, -0.00068587, -0.0019243 , -0.00068682, -0.00414282],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0008298 ,  0.00227413,  0.00098927,  0.00355215,  0.0059649 ,
        0.00049145,  0.00102699, -0.00124475, -0.00630392, -0.00757995],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00046819,  0.00101224,  0.00236919, -0.00023381,  0.0110331 ,
        0.0021922 ,  0.00073905, -0.0034047 , -0.00216896, -0.01107006],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00055806,  0.00107479,  0.00186951, -0.00048526,  0.00235013,
        0.00269524, -0.00244109,  0.0051064 , -0.00309535, -0.00763237],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00026148,  0.00035573, -0.00079966,  0.00553298,  0.00147444,
       -0.00146592,  0.00020712, -0.00195659, -0.00298815, -0.00062145],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.2283834e-04, -9.7240671e-04,  1.0405493e-03,  2.0350095e-04,
        7.2671454e-03,  1.5303275e-03,  3.3182483e-03, -3.5886285e-03,
        1.1490843e-05, -7.9873670e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6044428e-04,  9.7910524e-04,  6.9657530e-05,  1.1945505e-04,
        2.9455649e-03,  3.9526783e-03, -2.0450051e-03,  3.5709052e-04,
       -2.4279775e-03, -3.4900575e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00065114,  0.00011171,  0.00091359, -0.00019773,  0.00389729,
        0.00067398,  0.00052981,  0.00360855, -0.00085288, -0.00803312],
      dtype=float32)])]}
INFO flwr 2024-04-28 22:58:40,535 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 22:58:40,535 | app.py:229 | app_fit: losses_centralized [(0, 2.3025295734405518), (1, 1.7769043445587158), (2, 1.6462669372558594), (3, 1.6219168901443481), (4, 1.5664924383163452), (5, 1.5809834003448486), (6, 1.5704933404922485), (7, 1.570999264717102), (8, 1.562941551208496), (9, 1.5867077112197876), (10, 1.5561035871505737)]
INFO flwr 2024-04-28 22:58:40,535 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.081), (1, 0.7307), (2, 0.831), (3, 0.85), (4, 0.9062), (5, 0.8911), (6, 0.8993), (7, 0.8995), (8, 0.908), (9, 0.8836), (10, 0.9117)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9117
wandb:     loss 1.5561
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_225530-k6rv2qfj
wandb: Find logs at: ./wandb/offline-run-20240428_225530-k6rv2qfj/logs
INFO flwr 2024-04-28 22:58:44,166 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 22:58:45,478 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1497119)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1497119)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 22:58:50,587	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 22:58:51,180	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 22:58:51,657	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 22:58:51,658	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 22:59:03,088 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 173921922868.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78823681228.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-28 22:59:03,088 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 22:59:03,088 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 22:59:03,107 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 22:59:03,109 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 22:59:03,109 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 22:59:03,110 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 22:59:05,860 | server.py:94 | initial parameters (loss, other metrics): 2.3045308589935303, {'accuracy': 0.0968, 'data_size': 10000}
INFO flwr 2024-04-28 22:59:05,861 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 22:59:05,861 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1503499)[0m 2024-04-28 22:59:09.263675: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1503499)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1503499)[0m 2024-04-28 22:59:11.648171: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1503499)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1503499)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1503495)[0m 2024-04-28 22:59:09.459082: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1503495)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1503497)[0m 2024-04-28 22:59:11.753607: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 22:59:33,764 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 22:59:35,236 | server.py:125 | fit progress: (1, 1.7429941892623901, {'accuracy': 0.7352, 'data_size': 10000}, 29.375584166002227)
INFO flwr 2024-04-28 22:59:35,237 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 22:59:35,237 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 22:59:49,747 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 22:59:51,232 | server.py:125 | fit progress: (2, 1.5979139804840088, {'accuracy': 0.8771, 'data_size': 10000}, 45.371392911998555)
INFO flwr 2024-04-28 22:59:51,233 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 22:59:51,233 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:00:04,811 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:00:06,277 | server.py:125 | fit progress: (3, 1.603302001953125, {'accuracy': 0.8706, 'data_size': 10000}, 60.41607234798721)
INFO flwr 2024-04-28 23:00:06,277 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:00:06,277 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:00:20,258 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:00:21,526 | server.py:125 | fit progress: (4, 1.5700963735580444, {'accuracy': 0.9004, 'data_size': 10000}, 75.66564837098122)
INFO flwr 2024-04-28 23:00:21,527 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:00:21,527 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:00:34,255 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:00:35,510 | server.py:125 | fit progress: (5, 1.5945842266082764, {'accuracy': 0.875, 'data_size': 10000}, 89.64873772699502)
INFO flwr 2024-04-28 23:00:35,510 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:00:35,510 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:00:49,606 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:00:51,042 | server.py:125 | fit progress: (6, 1.567376732826233, {'accuracy': 0.9013, 'data_size': 10000}, 105.18082786700688)
INFO flwr 2024-04-28 23:00:51,042 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:00:51,042 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:01:05,650 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:01:07,143 | server.py:125 | fit progress: (7, 1.560589075088501, {'accuracy': 0.9069, 'data_size': 10000}, 121.28214320199913)
INFO flwr 2024-04-28 23:01:07,143 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:01:07,143 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:01:21,574 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:01:23,034 | server.py:125 | fit progress: (8, 1.5676095485687256, {'accuracy': 0.8981, 'data_size': 10000}, 137.1731145560043)
INFO flwr 2024-04-28 23:01:23,034 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:01:23,034 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:01:37,882 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:01:39,327 | server.py:125 | fit progress: (9, 1.5524442195892334, {'accuracy': 0.9159, 'data_size': 10000}, 153.46640841499902)
INFO flwr 2024-04-28 23:01:39,328 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:01:39,328 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:01:53,168 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:01:54,667 | server.py:125 | fit progress: (10, 1.5553442239761353, {'accuracy': 0.9098, 'data_size': 10000}, 168.8061298909888)
INFO flwr 2024-04-28 23:01:54,667 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:01:54,667 | server.py:153 | FL finished in 168.80653652199544
INFO flwr 2024-04-28 23:01:54,668 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:01:54,673 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00043928, -0.00122024, -0.00291352,  0.00048717,  0.00400257,
        0.00191231,  0.00128047,  0.00096585,  0.00272663, -0.00680195],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.3419273e-04, -8.3998143e-04,  3.3737766e-04, -1.6972227e-03,
        1.2689373e-03,  4.1669067e-05, -4.1844815e-04, -2.7212170e-03,
        4.2886809e-03, -9.9389593e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00032374,  0.00191303,  0.00249782,  0.00115302, -0.00281669,
        0.00310271, -0.00033505, -0.0036272 , -0.00233437,  0.00012309],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00013853,  0.00043517,  0.00036049,  0.0004027 ,  0.00635797,
       -0.00281764, -0.00050405, -0.0016846 ,  0.00465259, -0.00734106],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0008375 , -0.00024128,  0.00019819, -0.00530258,  0.00431967,
        0.00314655, -0.0005473 ,  0.00299877, -0.00069522, -0.00303925],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.3219919e-04,  1.1376179e-03, -1.3073100e-03, -7.9132042e-05,
       -1.8245428e-03,  1.7707993e-03,  2.6423228e-04,  6.5018958e-04,
       -9.5611817e-04,  7.7652838e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.9158809e-04, -8.4307039e-04,  1.0724355e-03, -1.8580320e-04,
        2.0535467e-03, -6.4545871e-05, -4.8103524e-04,  3.2895824e-03,
        3.8084064e-03, -7.9578506e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00014603,  0.00019448, -0.0011095 ,  0.00185918,  0.00482523,
        0.00062966, -0.000157  ,  0.00038003, -0.00111954, -0.00535645],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6430460e-04,  6.9176761e-04, -3.6046684e-05, -4.1506370e-03,
       -1.2252275e-03,  1.2708633e-03,  5.7566864e-04,  1.9166712e-03,
        1.5313142e-03, -3.1002346e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2223867e-04,  3.1330821e-04, -1.2853253e-03,  1.1930609e-03,
        3.9624861e-03,  1.4452384e-03, -7.1362219e-06,  1.4085352e-03,
       -2.5720070e-03, -4.2359061e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:01:54,673 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:01:54,673 | app.py:229 | app_fit: losses_centralized [(0, 2.3045308589935303), (1, 1.7429941892623901), (2, 1.5979139804840088), (3, 1.603302001953125), (4, 1.5700963735580444), (5, 1.5945842266082764), (6, 1.567376732826233), (7, 1.560589075088501), (8, 1.5676095485687256), (9, 1.5524442195892334), (10, 1.5553442239761353)]
INFO flwr 2024-04-28 23:01:54,673 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0968), (1, 0.7352), (2, 0.8771), (3, 0.8706), (4, 0.9004), (5, 0.875), (6, 0.9013), (7, 0.9069), (8, 0.8981), (9, 0.9159), (10, 0.9098)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9098
wandb:     loss 1.55534
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_225844-77p1kgfd
wandb: Find logs at: ./wandb/offline-run-20240428_225844-77p1kgfd/logs
INFO flwr 2024-04-28 23:01:58,370 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:01:59,010 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1503493)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1503493)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:02:03,675	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:02:04,100	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:02:04,634	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:02:04,635	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:02:15,500 | app.py:213 | Flower VCE: Ray initialized with resources: {'memory': 174342658663.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 79003996569.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 23:02:15,500 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:02:15,500 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:02:15,519 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:02:15,520 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:02:15,520 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:02:15,521 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:02:18,863 | server.py:94 | initial parameters (loss, other metrics): 2.3030409812927246, {'accuracy': 0.1002, 'data_size': 10000}
INFO flwr 2024-04-28 23:02:18,863 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:02:18,864 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1507866)[0m 2024-04-28 23:02:21.588975: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1507866)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1507871)[0m 2024-04-28 23:02:23.859409: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1507871)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1507871)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1507864)[0m 2024-04-28 23:02:21.738906: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1507864)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1507864)[0m 2024-04-28 23:02:24.011708: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:02:47,029 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:02:48,515 | server.py:125 | fit progress: (1, 1.8184725046157837, {'accuracy': 0.6385, 'data_size': 10000}, 29.651051257998915)
INFO flwr 2024-04-28 23:02:48,515 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:02:48,515 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:03:02,610 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:03:04,078 | server.py:125 | fit progress: (2, 1.5881599187850952, {'accuracy': 0.8826, 'data_size': 10000}, 45.214814431004925)
INFO flwr 2024-04-28 23:03:04,079 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:03:04,079 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:03:17,760 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:03:19,293 | server.py:125 | fit progress: (3, 1.600185751914978, {'accuracy': 0.8636, 'data_size': 10000}, 60.4298132469994)
INFO flwr 2024-04-28 23:03:19,294 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:03:19,294 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:03:32,935 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:03:34,239 | server.py:125 | fit progress: (4, 1.5649269819259644, {'accuracy': 0.9, 'data_size': 10000}, 75.3751339649898)
INFO flwr 2024-04-28 23:03:34,239 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:03:34,239 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:03:48,051 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:03:49,329 | server.py:125 | fit progress: (5, 1.5765260457992554, {'accuracy': 0.8858, 'data_size': 10000}, 90.466012519988)
INFO flwr 2024-04-28 23:03:49,330 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:03:49,330 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:04:03,739 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:04:05,258 | server.py:125 | fit progress: (6, 1.5617213249206543, {'accuracy': 0.9008, 'data_size': 10000}, 106.39412281897967)
INFO flwr 2024-04-28 23:04:05,258 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:04:05,258 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:04:19,010 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:04:20,503 | server.py:125 | fit progress: (7, 1.553769588470459, {'accuracy': 0.9084, 'data_size': 10000}, 121.63949287799187)
INFO flwr 2024-04-28 23:04:20,503 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:04:20,503 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:04:34,630 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:04:36,126 | server.py:125 | fit progress: (8, 1.5583293437957764, {'accuracy': 0.9033, 'data_size': 10000}, 137.26256685698172)
INFO flwr 2024-04-28 23:04:36,126 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:04:36,126 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:04:49,785 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:04:51,292 | server.py:125 | fit progress: (9, 1.556140422821045, {'accuracy': 0.9052, 'data_size': 10000}, 152.42885805599508)
INFO flwr 2024-04-28 23:04:51,293 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:04:51,293 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:05:05,886 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:05:07,360 | server.py:125 | fit progress: (10, 1.5683555603027344, {'accuracy': 0.894, 'data_size': 10000}, 168.49667334900005)
INFO flwr 2024-04-28 23:05:07,360 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:05:07,361 | server.py:153 | FL finished in 168.49708608799847
INFO flwr 2024-04-28 23:05:07,361 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:05:07,366 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00951664, -0.00407039, -0.00089738,  0.0014398 ,  0.00270202,
       -0.01497748,  0.00271657,  0.00045174,  0.00605847, -0.00293985],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0020675 , -0.0014721 , -0.00321912,  0.0075395 ,  0.01059597,
        0.00220116, -0.00016279, -0.01353823, -0.00690462,  0.00289288],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.9676785e-05,  3.8744314e-03,  9.5625026e-03,  2.5167855e-04,
        8.2173309e-04,  7.6074811e-04,  3.7887366e-04, -4.3735122e-03,
       -1.0178802e-02, -1.1972014e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9411159e-04,  1.9264813e-03,  1.0677271e-03, -2.9596488e-03,
        2.5023366e-03,  5.3631619e-04, -7.9241581e-06,  5.0407951e-04,
        3.7970545e-04, -3.7548274e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00162102,  0.00529105, -0.00011095,  0.00095462,  0.0046005 ,
       -0.0008505 , -0.00135428, -0.00186546, -0.00167524, -0.00336862],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.2079544e-05,  1.2197696e-03, -5.1332973e-03,  3.3560267e-04,
        1.3495390e-03,  1.1535183e-03, -1.4039995e-03, -1.2367005e-03,
        3.0693749e-03,  5.9419445e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00031479, -0.00057041,  0.00107496, -0.00201577,  0.00094339,
        0.00706477, -0.00035357,  0.00111365, -0.00400093, -0.00357082],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.68137271e-04, -3.07362148e-04,  6.14821620e-05,  2.06775614e-03,
       -2.08625002e-04,  1.15060632e-03,  1.11092646e-04,  4.38199291e-04,
        2.38358814e-04, -2.98330630e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0028137 , -0.00042328,  0.00122238, -0.01128591,  0.00160014,
        0.00287984,  0.00016902, -0.00083834,  0.00615916, -0.00229665],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2557369e-04, -5.8444450e-05,  8.9557288e-04, -2.3826212e-03,
        6.8500906e-04,  1.2150455e-03, -4.7875632e-04, -1.1973053e-03,
        5.0799452e-05,  1.4963398e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:05:07,366 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:05:07,367 | app.py:229 | app_fit: losses_centralized [(0, 2.3030409812927246), (1, 1.8184725046157837), (2, 1.5881599187850952), (3, 1.600185751914978), (4, 1.5649269819259644), (5, 1.5765260457992554), (6, 1.5617213249206543), (7, 1.553769588470459), (8, 1.5583293437957764), (9, 1.556140422821045), (10, 1.5683555603027344)]
INFO flwr 2024-04-28 23:05:07,367 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1002), (1, 0.6385), (2, 0.8826), (3, 0.8636), (4, 0.9), (5, 0.8858), (6, 0.9008), (7, 0.9084), (8, 0.9033), (9, 0.9052), (10, 0.894)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.894
wandb:     loss 1.56836
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_230158-fuuo81lx
wandb: Find logs at: ./wandb/offline-run-20240428_230158-fuuo81lx/logs
INFO flwr 2024-04-28 23:05:10,979 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:05:11,710 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1507864)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1507864)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:05:16,425	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:05:16,781	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:05:17,116	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:05:17,118	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:05:28,098 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 174380164506.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 79020070502.0}
INFO flwr 2024-04-28 23:05:28,098 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:05:28,098 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:05:28,116 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:05:28,118 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:05:28,118 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:05:28,118 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:05:31,080 | server.py:94 | initial parameters (loss, other metrics): 2.3033287525177, {'accuracy': 0.0786, 'data_size': 10000}
INFO flwr 2024-04-28 23:05:31,080 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:05:31,081 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1510993)[0m 2024-04-28 23:05:34.212901: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1510993)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1510987)[0m 2024-04-28 23:05:36.539317: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1510993)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1510993)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1510991)[0m 2024-04-28 23:05:34.393710: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1510991)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1510991)[0m 2024-04-28 23:05:36.676729: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:05:59,231 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:06:00,501 | server.py:125 | fit progress: (1, 1.864125370979309, {'accuracy': 0.5915, 'data_size': 10000}, 29.4200058360002)
INFO flwr 2024-04-28 23:06:00,501 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:06:00,501 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:06:16,370 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:06:17,863 | server.py:125 | fit progress: (2, 1.6366764307022095, {'accuracy': 0.8285, 'data_size': 10000}, 46.78239295599633)
INFO flwr 2024-04-28 23:06:17,863 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:06:17,863 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:06:32,261 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:06:33,746 | server.py:125 | fit progress: (3, 1.5792479515075684, {'accuracy': 0.8919, 'data_size': 10000}, 62.66595174197573)
INFO flwr 2024-04-28 23:06:33,747 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:06:33,747 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:06:47,380 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:06:48,879 | server.py:125 | fit progress: (4, 1.5790919065475464, {'accuracy': 0.889, 'data_size': 10000}, 77.79837256498286)
INFO flwr 2024-04-28 23:06:48,879 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:06:48,879 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:07:02,485 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:07:04,019 | server.py:125 | fit progress: (5, 1.5857259035110474, {'accuracy': 0.8811, 'data_size': 10000}, 92.93806760097505)
INFO flwr 2024-04-28 23:07:04,019 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:07:04,019 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:07:17,491 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:07:19,009 | server.py:125 | fit progress: (6, 1.5722427368164062, {'accuracy': 0.8935, 'data_size': 10000}, 107.92799602498417)
INFO flwr 2024-04-28 23:07:19,009 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:07:19,009 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:07:33,056 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:07:34,588 | server.py:125 | fit progress: (7, 1.562509298324585, {'accuracy': 0.9014, 'data_size': 10000}, 123.50728508099564)
INFO flwr 2024-04-28 23:07:34,588 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:07:34,588 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:07:48,896 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:07:50,386 | server.py:125 | fit progress: (8, 1.552543044090271, {'accuracy': 0.9116, 'data_size': 10000}, 139.30537241199636)
INFO flwr 2024-04-28 23:07:50,386 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:07:50,386 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:08:03,650 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:08:05,226 | server.py:125 | fit progress: (9, 1.553666353225708, {'accuracy': 0.9097, 'data_size': 10000}, 154.14554361600312)
INFO flwr 2024-04-28 23:08:05,226 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:08:05,227 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:08:17,956 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:08:19,480 | server.py:125 | fit progress: (10, 1.5601023435592651, {'accuracy': 0.903, 'data_size': 10000}, 168.39910547700129)
INFO flwr 2024-04-28 23:08:19,480 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:08:19,480 | server.py:153 | FL finished in 168.39952103199903
INFO flwr 2024-04-28 23:08:19,480 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:08:19,486 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00031755,  0.00027874,  0.00265977, -0.00018078,  0.00480155,
       -0.00171544, -0.00141817,  0.0045183 , -0.00131046, -0.00795103],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00034167,  0.0002461 ,  0.00057531,  0.0079072 ,  0.00151025,
       -0.00618107, -0.00123976, -0.00116056, -0.00014344, -0.0011723 ],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00011135, -0.00010067,  0.00153186, -0.00065896,  0.00165334,
       -0.00046489, -0.00019092,  0.00012367, -0.00076165, -0.00124307],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00019251,  0.00013483,  0.00071862,  0.00237101,  0.00117052,
       -0.00194726, -0.00026008, -0.00207401, -0.00125302,  0.00133195],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1510896e-04,  8.9493481e-04, -1.8178088e-03, -4.8334565e-04,
        1.6884014e-03,  7.4739271e-04, -6.9781803e-05, -9.0906525e-04,
        1.7098931e-03, -1.8757039e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.8463386e-04, -3.1764203e-04,  2.4735020e-05,  1.5287788e-03,
        1.5767245e-03,  9.2017435e-04, -5.0097593e-04,  7.9284166e-04,
       -1.4076794e-03, -2.4323212e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0683984e-04, -2.3950671e-03,  2.2579227e-03,  5.4035429e-04,
        1.8898734e-03,  1.8441065e-03,  1.7581900e-04,  1.8936496e-05,
       -1.6963012e-03, -2.5287627e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6069150e-08, -3.1670585e-04, -8.9016663e-05,  4.0870896e-04,
       -2.1097224e-04,  3.6842517e-05,  1.2632456e-04,  1.7522310e-03,
       -4.5671649e-04, -1.2505520e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00016057, -0.00062283, -0.00040346,  0.00011715,  0.00319177,
        0.00057307, -0.00031776, -0.00011589,  0.00015577, -0.00273835],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.13117523e-05,  9.43484920e-05,  1.53434317e-04,  1.06941516e-04,
        8.15951382e-04,  1.08867942e-03,  2.53349921e-04, -1.52882084e-03,
       -1.22685742e-03,  2.84337410e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:08:19,486 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:08:19,486 | app.py:229 | app_fit: losses_centralized [(0, 2.3033287525177), (1, 1.864125370979309), (2, 1.6366764307022095), (3, 1.5792479515075684), (4, 1.5790919065475464), (5, 1.5857259035110474), (6, 1.5722427368164062), (7, 1.562509298324585), (8, 1.552543044090271), (9, 1.553666353225708), (10, 1.5601023435592651)]
INFO flwr 2024-04-28 23:08:19,486 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0786), (1, 0.5915), (2, 0.8285), (3, 0.8919), (4, 0.889), (5, 0.8811), (6, 0.8935), (7, 0.9014), (8, 0.9116), (9, 0.9097), (10, 0.903)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.903
wandb:     loss 1.5601
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_230511-ev703u8u
wandb: Find logs at: ./wandb/offline-run-20240428_230511-ev703u8u/logs
INFO flwr 2024-04-28 23:08:23,111 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:08:23,837 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1510984)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1510984)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:08:28,612	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:08:28,964	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:08:29,430	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:08:29,432	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:08:40,326 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79015947878.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'memory': 174370545050.0, 'node:10.20.240.13': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:08:40,327 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:08:40,327 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:08:40,345 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:08:40,350 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:08:40,350 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:08:40,350 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:08:43,181 | server.py:94 | initial parameters (loss, other metrics): 2.3034565448760986, {'accuracy': 0.0994, 'data_size': 10000}
INFO flwr 2024-04-28 23:08:43,182 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:08:43,182 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1514713)[0m 2024-04-28 23:08:46.437672: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1514713)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1514713)[0m 2024-04-28 23:08:48.692906: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1514725)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1514725)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1514718)[0m 2024-04-28 23:08:46.874871: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1514718)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1514718)[0m 2024-04-28 23:08:49.244375: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:09:10,216 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:09:11,493 | server.py:125 | fit progress: (1, 1.7200562953948975, {'accuracy': 0.7568, 'data_size': 10000}, 28.311433080001734)
INFO flwr 2024-04-28 23:09:11,494 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:09:11,494 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:09:26,313 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:09:27,603 | server.py:125 | fit progress: (2, 1.587935209274292, {'accuracy': 0.8781, 'data_size': 10000}, 44.421475818991894)
INFO flwr 2024-04-28 23:09:27,604 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:09:27,604 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:09:41,298 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:09:42,777 | server.py:125 | fit progress: (3, 1.5722501277923584, {'accuracy': 0.8913, 'data_size': 10000}, 59.59496547598974)
INFO flwr 2024-04-28 23:09:42,777 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:09:42,777 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:09:56,809 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:09:58,286 | server.py:125 | fit progress: (4, 1.563413143157959, {'accuracy': 0.8998, 'data_size': 10000}, 75.10394699999597)
INFO flwr 2024-04-28 23:09:58,286 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:09:58,286 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:10:12,662 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:10:14,192 | server.py:125 | fit progress: (5, 1.557335376739502, {'accuracy': 0.9046, 'data_size': 10000}, 91.00994855799945)
INFO flwr 2024-04-28 23:10:14,192 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:10:14,192 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:10:28,080 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:10:29,594 | server.py:125 | fit progress: (6, 1.5633363723754883, {'accuracy': 0.8988, 'data_size': 10000}, 106.41169670497766)
INFO flwr 2024-04-28 23:10:29,594 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:10:29,594 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:10:43,986 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:10:45,494 | server.py:125 | fit progress: (7, 1.562795877456665, {'accuracy': 0.8995, 'data_size': 10000}, 122.31178932599141)
INFO flwr 2024-04-28 23:10:45,494 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:10:45,494 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:10:59,539 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:11:01,031 | server.py:125 | fit progress: (8, 1.5532104969024658, {'accuracy': 0.9102, 'data_size': 10000}, 137.8490791049844)
INFO flwr 2024-04-28 23:11:01,031 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:11:01,032 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:11:14,374 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:11:15,886 | server.py:125 | fit progress: (9, 1.5478911399841309, {'accuracy': 0.9148, 'data_size': 10000}, 152.704342824989)
INFO flwr 2024-04-28 23:11:15,887 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:11:15,887 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:11:29,312 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:11:30,807 | server.py:125 | fit progress: (10, 1.549777626991272, {'accuracy': 0.9125, 'data_size': 10000}, 167.62517663897597)
INFO flwr 2024-04-28 23:11:30,807 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:11:30,808 | server.py:153 | FL finished in 167.6255939739931
INFO flwr 2024-04-28 23:11:30,808 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:11:30,813 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00031203,  0.0023834 , -0.00069342, -0.00231033,  0.00195449,
        0.00330811, -0.00068364,  0.00756007,  0.00121808, -0.0130487 ],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00024198, -0.00134965, -0.00086751,  0.00609312,  0.00114814,
        0.00561552, -0.00341223, -0.00094808, -0.00327031, -0.00276698],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00044123, -0.0002958 , -0.00059291,  0.00025256,  0.00310877,
        0.00029207, -0.00034683, -0.0022128 , -0.00165885,  0.00101261],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6785414e-03, -4.7672473e-04,  3.2364929e-03, -2.7935025e-03,
       -8.0329663e-04, -1.1539636e-03,  6.4885346e-05,  8.2106155e-05,
        2.8935676e-03, -2.7280981e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00022475,  0.00021737, -0.00240035,  0.00115714,  0.00063672,
       -0.00294456,  0.00019229, -0.00104183,  0.00368602,  0.00072197],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6662718e-04, -2.9888298e-04,  1.0021884e-03, -1.6885942e-03,
        1.6686707e-05,  1.4249797e-03, -1.1061271e-04, -4.1138730e-05,
       -3.9016351e-05,  1.0806644e-06], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.0085230e-04, -1.7576366e-04,  3.2179654e-04, -3.9636245e-05,
        3.0680238e-03, -1.0882522e-03, -4.5772389e-04,  3.6301467e-04,
        6.9689553e-04, -2.1874432e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.2492021e-05, -1.1472779e-03,  6.4375723e-04,  1.4585945e-03,
        2.3443901e-04, -4.5873437e-04,  1.5477682e-04, -3.5059956e-04,
       -6.0115948e-05, -3.9231643e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5802078e-04, -2.3703600e-05,  4.0326503e-04, -2.4019364e-04,
       -5.4970029e-04,  1.8697395e-04,  3.1746287e-05,  3.7378028e-05,
       -5.2343170e-05,  3.6463697e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6934422e-05, -2.6621230e-04,  1.4375463e-03, -9.7539177e-04,
        2.5533317e-03, -2.2840728e-05, -4.6693000e-05, -2.6648893e-04,
        5.6179980e-04, -2.8880772e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:11:30,813 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:11:30,813 | app.py:229 | app_fit: losses_centralized [(0, 2.3034565448760986), (1, 1.7200562953948975), (2, 1.587935209274292), (3, 1.5722501277923584), (4, 1.563413143157959), (5, 1.557335376739502), (6, 1.5633363723754883), (7, 1.562795877456665), (8, 1.5532104969024658), (9, 1.5478911399841309), (10, 1.549777626991272)]
INFO flwr 2024-04-28 23:11:30,814 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0994), (1, 0.7568), (2, 0.8781), (3, 0.8913), (4, 0.8998), (5, 0.9046), (6, 0.8988), (7, 0.8995), (8, 0.9102), (9, 0.9148), (10, 0.9125)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9125
wandb:     loss 1.54978
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_230823-d84dwrj0
wandb: Find logs at: ./wandb/offline-run-20240428_230823-d84dwrj0/logs
INFO flwr 2024-04-28 23:11:34,479 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:11:35,257 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1514713)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1514713)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:11:40,013	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:11:40,449	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:11:40,796	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:11:40,797	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:11:51,737 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'memory': 174354052916.0, 'node:10.20.240.13': 1.0, 'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 79008879820.0}
INFO flwr 2024-04-28 23:11:51,738 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:11:51,738 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:11:51,755 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:11:51,757 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:11:51,757 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:11:51,758 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:11:54,528 | server.py:94 | initial parameters (loss, other metrics): 2.30328106880188, {'accuracy': 0.102, 'data_size': 10000}
INFO flwr 2024-04-28 23:11:54,528 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:11:54,529 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1518820)[0m 2024-04-28 23:11:57.811295: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1518820)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1518820)[0m 2024-04-28 23:12:00.085756: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1518820)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1518820)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1518822)[0m 2024-04-28 23:11:57.989193: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1518822)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1518822)[0m 2024-04-28 23:12:00.311434: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:12:23,921 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:12:25,468 | server.py:125 | fit progress: (1, 1.7205685377120972, {'accuracy': 0.7792, 'data_size': 10000}, 30.939159136993112)
INFO flwr 2024-04-28 23:12:25,468 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:12:25,468 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:12:40,458 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:12:41,902 | server.py:125 | fit progress: (2, 1.7207974195480347, {'accuracy': 0.7369, 'data_size': 10000}, 47.37381149199791)
INFO flwr 2024-04-28 23:12:41,903 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:12:41,903 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:12:55,808 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:12:57,322 | server.py:125 | fit progress: (3, 1.590412974357605, {'accuracy': 0.8702, 'data_size': 10000}, 62.793683494994184)
INFO flwr 2024-04-28 23:12:57,323 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:12:57,323 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:13:11,617 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:13:12,893 | server.py:125 | fit progress: (4, 1.582221508026123, {'accuracy': 0.8786, 'data_size': 10000}, 78.36468488999526)
INFO flwr 2024-04-28 23:13:12,894 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:13:12,894 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:13:26,849 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:13:28,117 | server.py:125 | fit progress: (5, 1.5609053373336792, {'accuracy': 0.901, 'data_size': 10000}, 93.58810451300815)
INFO flwr 2024-04-28 23:13:28,117 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:13:28,117 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:13:41,987 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:13:43,489 | server.py:125 | fit progress: (6, 1.5855671167373657, {'accuracy': 0.8744, 'data_size': 10000}, 108.96060966799268)
INFO flwr 2024-04-28 23:13:43,489 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:13:43,490 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:13:56,887 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:13:58,407 | server.py:125 | fit progress: (7, 1.5534708499908447, {'accuracy': 0.9081, 'data_size': 10000}, 123.87803128201631)
INFO flwr 2024-04-28 23:13:58,407 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:13:58,407 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:14:11,771 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:14:13,270 | server.py:125 | fit progress: (8, 1.5651911497116089, {'accuracy': 0.8947, 'data_size': 10000}, 138.74114532899694)
INFO flwr 2024-04-28 23:14:13,270 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:14:13,270 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:14:27,034 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:14:28,527 | server.py:125 | fit progress: (9, 1.5710564851760864, {'accuracy': 0.8915, 'data_size': 10000}, 153.99872023100033)
INFO flwr 2024-04-28 23:14:28,528 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:14:28,528 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:14:41,751 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:14:43,247 | server.py:125 | fit progress: (10, 1.557485580444336, {'accuracy': 0.9026, 'data_size': 10000}, 168.71850860200357)
INFO flwr 2024-04-28 23:14:43,247 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:14:43,248 | server.py:153 | FL finished in 168.71895711301477
INFO flwr 2024-04-28 23:14:43,248 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:14:43,253 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1046607e-03, -1.1634973e-05,  4.9652187e-03,  8.3622181e-05,
       -5.7399282e-03, -9.7156363e-03, -4.8221144e-04,  1.9592779e-02,
        1.7627830e-02, -2.4215346e-02], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9975640e-03,  8.0101687e-05, -4.3911310e-03,  6.7181834e-03,
       -3.8584308e-03,  1.3316163e-03, -3.7918260e-04,  6.8001245e-04,
       -8.8684866e-04,  2.7032907e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00401607,  0.00131679,  0.0009877 , -0.01596077,  0.00595184,
        0.00740362, -0.00391062, -0.00143791, -0.00295588,  0.00458921],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00047036, -0.00106181,  0.00461253,  0.00011026, -0.00437161,
       -0.00034997,  0.00161015, -0.00476413,  0.00387629,  0.00080868],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.5736029e-03,  6.5042681e-05, -1.1547191e-02, -1.1776399e-03,
        8.0906730e-03,  3.1931216e-03,  1.0630710e-03,  6.8942423e-04,
       -6.1960369e-03, -2.7540356e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0067163 ,  0.01052356,  0.00308184, -0.00918444, -0.00126996,
        0.0096827 , -0.00135279, -0.01428355, -0.00449865,  0.00058504],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00089009,  0.00026656, -0.00148634, -0.00127232,  0.00045525,
        0.00113767,  0.00089908,  0.00722186,  0.00365893, -0.00999057],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4475854e-03,  7.7248109e-04,  2.6402567e-04,  2.5178691e-05,
       -6.6069039e-03,  3.0304412e-03,  7.8607881e-03,  4.3083336e-03,
       -1.0126054e-02, -9.7583362e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00873919, -0.00124642, -0.00692403,  0.01470758,  0.00116471,
       -0.00606315,  0.0091075 , -0.0122206 , -0.00115084,  0.01136446],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00870556, -0.00401218,  0.01973363,  0.00837456, -0.00111941,
        0.00392043, -0.00861286, -0.00936904, -0.00181697,  0.00160742],
      dtype=float32)])]}
INFO flwr 2024-04-28 23:14:43,253 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:14:43,253 | app.py:229 | app_fit: losses_centralized [(0, 2.30328106880188), (1, 1.7205685377120972), (2, 1.7207974195480347), (3, 1.590412974357605), (4, 1.582221508026123), (5, 1.5609053373336792), (6, 1.5855671167373657), (7, 1.5534708499908447), (8, 1.5651911497116089), (9, 1.5710564851760864), (10, 1.557485580444336)]
INFO flwr 2024-04-28 23:14:43,254 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.102), (1, 0.7792), (2, 0.7369), (3, 0.8702), (4, 0.8786), (5, 0.901), (6, 0.8744), (7, 0.9081), (8, 0.8947), (9, 0.8915), (10, 0.9026)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9026
wandb:     loss 1.55749
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_231134-nxnqceov
wandb: Find logs at: ./wandb/offline-run-20240428_231134-nxnqceov/logs
INFO flwr 2024-04-28 23:14:46,960 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:14:47,629 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1518814)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1518814)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:14:52,420	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:14:52,811	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:14:53,244	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:14:53,245	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:15:04,168 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 78996162969.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174324380263.0}
INFO flwr 2024-04-28 23:15:04,168 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:15:04,169 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:15:04,188 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:15:04,189 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:15:04,189 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:15:04,189 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:15:06,954 | server.py:94 | initial parameters (loss, other metrics): 2.298717498779297, {'accuracy': 0.1272, 'data_size': 10000}
INFO flwr 2024-04-28 23:15:06,954 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:15:06,955 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1521941)[0m 2024-04-28 23:15:10.273317: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1521941)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1521941)[0m 2024-04-28 23:15:12.541048: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1521953)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1521953)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1521955)[0m 2024-04-28 23:15:10.549586: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1521955)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1521955)[0m 2024-04-28 23:15:12.835177: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:15:35,441 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:15:36,718 | server.py:125 | fit progress: (1, 1.775414228439331, {'accuracy': 0.6843, 'data_size': 10000}, 29.763098828989314)
INFO flwr 2024-04-28 23:15:36,718 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:15:36,718 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:15:53,381 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:15:54,849 | server.py:125 | fit progress: (2, 1.583054780960083, {'accuracy': 0.8784, 'data_size': 10000}, 47.89456438500201)
INFO flwr 2024-04-28 23:15:54,849 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:15:54,850 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:16:08,198 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:16:09,707 | server.py:125 | fit progress: (3, 1.5660349130630493, {'accuracy': 0.8953, 'data_size': 10000}, 62.752823940012604)
INFO flwr 2024-04-28 23:16:09,708 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:16:09,708 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:16:23,813 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:16:25,297 | server.py:125 | fit progress: (4, 1.5589772462844849, {'accuracy': 0.9035, 'data_size': 10000}, 78.34275224499288)
INFO flwr 2024-04-28 23:16:25,298 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:16:25,298 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:16:39,250 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:16:40,751 | server.py:125 | fit progress: (5, 1.5650622844696045, {'accuracy': 0.8974, 'data_size': 10000}, 93.79615448598634)
INFO flwr 2024-04-28 23:16:40,751 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:16:40,751 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:16:54,037 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:16:55,534 | server.py:125 | fit progress: (6, 1.5545438528060913, {'accuracy': 0.9078, 'data_size': 10000}, 108.57917601399822)
INFO flwr 2024-04-28 23:16:55,534 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:16:55,534 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:17:10,259 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:17:11,747 | server.py:125 | fit progress: (7, 1.5551652908325195, {'accuracy': 0.9066, 'data_size': 10000}, 124.79235825900105)
INFO flwr 2024-04-28 23:17:11,747 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:17:11,747 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:17:25,766 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:17:27,263 | server.py:125 | fit progress: (8, 1.5568158626556396, {'accuracy': 0.9043, 'data_size': 10000}, 140.3081119779963)
INFO flwr 2024-04-28 23:17:27,263 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:17:27,263 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:17:41,575 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:17:43,058 | server.py:125 | fit progress: (9, 1.5621862411499023, {'accuracy': 0.9, 'data_size': 10000}, 156.1037090579921)
INFO flwr 2024-04-28 23:17:43,059 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:17:43,059 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:17:57,196 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:17:58,755 | server.py:125 | fit progress: (10, 1.548003077507019, {'accuracy': 0.9137, 'data_size': 10000}, 171.80054975301027)
INFO flwr 2024-04-28 23:17:58,755 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:17:58,756 | server.py:153 | FL finished in 171.80106908499147
INFO flwr 2024-04-28 23:17:58,756 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:17:58,761 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2050826e-04,  2.8467696e-04,  1.2716004e-05,  1.3351400e-03,
       -1.3902957e-03,  9.6199457e-03, -9.7698910e-05,  3.1324634e-03,
       -4.7765792e-05, -1.3169631e-02], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00466515, -0.00355389,  0.00503547, -0.00286029, -0.00027603,
        0.0004285 , -0.00203945,  0.00438328, -0.00039599, -0.00538671],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.5256674e-04, -8.2809653e-04,  1.0182763e-03,  4.7148402e-05,
        4.6807411e-03,  2.1082691e-05, -2.0078098e-04,  1.2958978e-04,
        1.1817496e-03, -5.0971089e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.2141015e-05, -5.3339059e-05, -3.2863973e-05,  7.0580314e-03,
       -1.2985720e-04,  5.3486892e-04, -2.3636142e-04, -7.2822897e-03,
        1.0316906e-03, -8.3772774e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.7769622e-05,  4.5752304e-04, -3.0249488e-04,  7.4238901e-04,
       -3.3248183e-03,  1.0766535e-02,  4.2581660e-04, -6.1084307e-04,
       -8.8910414e-03,  6.4919272e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.4454238e-05,  4.3080113e-04, -2.7060855e-04,  7.5236365e-04,
        7.3872361e-05, -4.0521129e-04,  6.6723645e-05,  5.1526418e-03,
       -5.1027338e-04, -5.3547355e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7641349e-03, -1.2291939e-05,  5.1313435e-04, -6.8576337e-04,
       -5.9777312e-04,  1.5057062e-03,  2.2692884e-05,  1.1960875e-04,
        3.9035382e-04,  5.0848926e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.01548954e-04, -1.20391669e-04, -4.31659319e-05, -1.38169213e-03,
        7.68367841e-04,  1.35733362e-03,  4.40452277e-04,  9.32869534e-06,
       -1.00185140e-03,  7.31765540e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.1999116e-06,  2.4900492e-03, -7.4705476e-04, -8.1489322e-04,
       -2.1468524e-03,  2.0677304e-04,  1.3843590e-05,  4.2774488e-04,
       -1.0807421e-03,  1.6439457e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6772843e-05,  5.5988235e-06,  5.2358435e-05,  1.8138571e-04,
        1.4658400e-03,  4.3155684e-04, -8.6339234e-05,  2.9887771e-04,
       -6.0540816e-04, -1.7606183e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:17:58,762 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:17:58,762 | app.py:229 | app_fit: losses_centralized [(0, 2.298717498779297), (1, 1.775414228439331), (2, 1.583054780960083), (3, 1.5660349130630493), (4, 1.5589772462844849), (5, 1.5650622844696045), (6, 1.5545438528060913), (7, 1.5551652908325195), (8, 1.5568158626556396), (9, 1.5621862411499023), (10, 1.548003077507019)]
INFO flwr 2024-04-28 23:17:58,762 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1272), (1, 0.6843), (2, 0.8784), (3, 0.8953), (4, 0.9035), (5, 0.8974), (6, 0.9078), (7, 0.9066), (8, 0.9043), (9, 0.9), (10, 0.9137)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9137
wandb:     loss 1.548
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_231447-bywiiylu
wandb: Find logs at: ./wandb/offline-run-20240428_231447-bywiiylu/logs
INFO flwr 2024-04-28 23:18:02,431 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:18:03,078 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1521940)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1521940)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:18:07,843	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:18:08,283	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:18:08,636	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:18:08,638	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:18:19,577 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'CPU': 64.0, 'object_store_memory': 78956281036.0, 'memory': 174231322420.0, 'node:10.20.240.13': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:18:19,577 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:18:19,577 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:18:19,594 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:18:19,595 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:18:19,596 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:18:19,596 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:18:23,002 | server.py:94 | initial parameters (loss, other metrics): 2.307264804840088, {'accuracy': 0.0483, 'data_size': 10000}
INFO flwr 2024-04-28 23:18:23,002 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:18:23,003 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1525675)[0m 2024-04-28 23:18:25.768084: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1525675)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1525675)[0m 2024-04-28 23:18:28.048110: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1525675)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1525675)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1525668)[0m 2024-04-28 23:18:26.068426: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1525668)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1525668)[0m 2024-04-28 23:18:28.463281: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:18:50,033 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:18:51,334 | server.py:125 | fit progress: (1, 1.9533939361572266, {'accuracy': 0.5017, 'data_size': 10000}, 28.332054614991648)
INFO flwr 2024-04-28 23:18:51,335 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:18:51,335 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:19:05,794 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:19:07,074 | server.py:125 | fit progress: (2, 1.623987078666687, {'accuracy': 0.8365, 'data_size': 10000}, 44.07116899700486)
INFO flwr 2024-04-28 23:19:07,074 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:19:07,074 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:19:21,570 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:19:23,095 | server.py:125 | fit progress: (3, 1.5730866193771362, {'accuracy': 0.8889, 'data_size': 10000}, 60.092358994006645)
INFO flwr 2024-04-28 23:19:23,095 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:19:23,095 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:19:36,483 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:19:37,964 | server.py:125 | fit progress: (4, 1.5771358013153076, {'accuracy': 0.8838, 'data_size': 10000}, 74.96180829501827)
INFO flwr 2024-04-28 23:19:37,964 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:19:37,965 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:19:51,362 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:19:52,801 | server.py:125 | fit progress: (5, 1.5574742555618286, {'accuracy': 0.9026, 'data_size': 10000}, 89.79825108201476)
INFO flwr 2024-04-28 23:19:52,801 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:19:52,801 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:20:06,396 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:20:07,916 | server.py:125 | fit progress: (6, 1.5637333393096924, {'accuracy': 0.8978, 'data_size': 10000}, 104.9131819710019)
INFO flwr 2024-04-28 23:20:07,916 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:20:07,916 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:20:22,026 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:20:23,557 | server.py:125 | fit progress: (7, 1.5579609870910645, {'accuracy': 0.9033, 'data_size': 10000}, 120.55472490200191)
INFO flwr 2024-04-28 23:20:23,557 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:20:23,558 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:20:37,397 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:20:38,875 | server.py:125 | fit progress: (8, 1.552242636680603, {'accuracy': 0.9092, 'data_size': 10000}, 135.8722950190131)
INFO flwr 2024-04-28 23:20:38,875 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:20:38,875 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:20:52,247 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:20:53,770 | server.py:125 | fit progress: (9, 1.5543687343597412, {'accuracy': 0.9068, 'data_size': 10000}, 150.76751133499783)
INFO flwr 2024-04-28 23:20:53,770 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:20:53,770 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:21:07,585 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:21:09,048 | server.py:125 | fit progress: (10, 1.5537350177764893, {'accuracy': 0.9081, 'data_size': 10000}, 166.0453404530126)
INFO flwr 2024-04-28 23:21:09,048 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:21:09,048 | server.py:153 | FL finished in 166.04578882301576
INFO flwr 2024-04-28 23:21:09,048 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:21:09,054 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4692744e-04,  6.0773420e-04,  1.8021617e-03, -2.2946550e-03,
        1.7802429e-03,  2.5427621e-04,  3.9842060e-05,  2.9582197e-03,
       -2.4955051e-03, -2.7992290e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00234034, -0.00015702, -0.00349353,  0.00740575,  0.0032017 ,
        0.00225904,  0.00287617, -0.00393768, -0.01862207,  0.00812734],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0063509 ,  0.00953775, -0.00522551,  0.02598721, -0.0005588 ,
       -0.02397142, -0.00171856, -0.00721176,  0.00974428, -0.00023229],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.0709624e-04,  5.1980658e-04,  2.3543360e-03,  3.8733534e-03,
       -4.2087559e-04, -1.7833868e-03, -2.5588518e-03, -5.0719798e-05,
       -2.7494044e-03,  2.0865796e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00779747, -0.00108164, -0.00462702, -0.00131062, -0.0015936 ,
        0.0041944 , -0.00285599,  0.00028735,  0.01158776,  0.00319685],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00076852,  0.00830638, -0.0008773 ,  0.00310123,  0.00974624,
       -0.00285796,  0.0002535 ,  0.00125778, -0.00967211, -0.00848921],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00024262,  0.00171149,  0.00049725, -0.00059179,  0.00028411,
       -0.00094406, -0.00115077,  0.00139316,  0.00094538, -0.00190213],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6087866e-05, -1.5213928e-03, -9.8643976e-04, -1.2497943e-03,
       -1.1692172e-03,  1.3687339e-03,  2.6667360e-04,  3.4258290e-05,
        2.5953858e-03,  6.8789942e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.9504491e-05,  6.1207786e-05, -1.3772496e-04,  4.2274990e-04,
       -6.5632733e-03, -1.5061929e-05, -2.7263878e-04,  2.9697444e-04,
       -1.3144461e-04,  6.3987314e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.4962813e-03, -1.3356424e-04, -1.9252146e-02,  1.9914206e-02,
       -8.5957436e-04, -8.3097294e-03,  2.5061381e-04,  1.7034230e-05,
        1.1256823e-02,  6.1262376e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:21:09,054 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:21:09,054 | app.py:229 | app_fit: losses_centralized [(0, 2.307264804840088), (1, 1.9533939361572266), (2, 1.623987078666687), (3, 1.5730866193771362), (4, 1.5771358013153076), (5, 1.5574742555618286), (6, 1.5637333393096924), (7, 1.5579609870910645), (8, 1.552242636680603), (9, 1.5543687343597412), (10, 1.5537350177764893)]
INFO flwr 2024-04-28 23:21:09,054 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0483), (1, 0.5017), (2, 0.8365), (3, 0.8889), (4, 0.8838), (5, 0.9026), (6, 0.8978), (7, 0.9033), (8, 0.9092), (9, 0.9068), (10, 0.9081)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9081
wandb:     loss 1.55374
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_231802-n7doea5c
wandb: Find logs at: ./wandb/offline-run-20240428_231802-n7doea5c/logs
INFO flwr 2024-04-28 23:21:12,874 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:21:13,539 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1525666)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1525666)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:21:18,343	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:21:18,762	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:21:19,332	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:21:19,334	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:21:30,233 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 78977040384.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174279760896.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-28 23:21:30,234 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:21:30,234 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:21:30,254 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:21:30,258 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:21:30,259 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:21:30,259 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:21:33,224 | server.py:94 | initial parameters (loss, other metrics): 2.302804708480835, {'accuracy': 0.0685, 'data_size': 10000}
INFO flwr 2024-04-28 23:21:33,224 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:21:33,225 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1529432)[0m 2024-04-28 23:21:36.351909: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1529432)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1529432)[0m 2024-04-28 23:21:38.669252: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1529428)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1529428)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1529424)[0m 2024-04-28 23:21:36.478261: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1529424)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1529430)[0m 2024-04-28 23:21:38.774235: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:22:01,873 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:22:03,380 | server.py:125 | fit progress: (1, 2.0222253799438477, {'accuracy': 0.4314, 'data_size': 10000}, 30.155462909984635)
INFO flwr 2024-04-28 23:22:03,380 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:22:03,380 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:22:18,190 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:22:19,702 | server.py:125 | fit progress: (2, 1.8285781145095825, {'accuracy': 0.6284, 'data_size': 10000}, 46.47757131999242)
INFO flwr 2024-04-28 23:22:19,702 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:22:19,702 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:22:34,282 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:22:35,778 | server.py:125 | fit progress: (3, 1.6802791357040405, {'accuracy': 0.7794, 'data_size': 10000}, 62.55389624100644)
INFO flwr 2024-04-28 23:22:35,779 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:22:35,779 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:22:49,858 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:22:51,118 | server.py:125 | fit progress: (4, 1.6188974380493164, {'accuracy': 0.8409, 'data_size': 10000}, 77.89339374299743)
INFO flwr 2024-04-28 23:22:51,118 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:22:51,118 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:23:05,227 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:23:06,520 | server.py:125 | fit progress: (5, 1.6137158870697021, {'accuracy': 0.8459, 'data_size': 10000}, 93.2955581569986)
INFO flwr 2024-04-28 23:23:06,520 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:23:06,520 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:23:20,494 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:23:21,986 | server.py:125 | fit progress: (6, 1.5832353830337524, {'accuracy': 0.8779, 'data_size': 10000}, 108.76150379999308)
INFO flwr 2024-04-28 23:23:21,986 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:23:21,986 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:23:36,385 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:23:37,860 | server.py:125 | fit progress: (7, 1.5792139768600464, {'accuracy': 0.882, 'data_size': 10000}, 124.63551421300508)
INFO flwr 2024-04-28 23:23:37,860 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:23:37,860 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:23:51,376 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:23:52,858 | server.py:125 | fit progress: (8, 1.5650503635406494, {'accuracy': 0.896, 'data_size': 10000}, 139.6336172099982)
INFO flwr 2024-04-28 23:23:52,858 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:23:52,858 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:24:06,710 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:24:08,211 | server.py:125 | fit progress: (9, 1.5591394901275635, {'accuracy': 0.902, 'data_size': 10000}, 154.98698180599604)
INFO flwr 2024-04-28 23:24:08,212 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:24:08,212 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:24:20,951 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:24:22,453 | server.py:125 | fit progress: (10, 1.5565201044082642, {'accuracy': 0.9046, 'data_size': 10000}, 169.22883570400882)
INFO flwr 2024-04-28 23:24:22,454 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:24:22,454 | server.py:153 | FL finished in 169.22933489299612
INFO flwr 2024-04-28 23:24:22,454 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:24:22,459 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.3631817e-04,  4.7277275e-04, -1.4026391e-06,  1.9019708e-04,
        7.9214008e-04, -3.0755883e-04, -3.5739594e-04, -8.8349814e-05,
       -4.4156259e-04, -2.2515769e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.7481578e-04,  1.5006947e-03,  3.0166043e-03, -6.6033886e-03,
       -7.3245930e-05, -1.4207432e-03, -3.4722190e-03, -3.9745640e-04,
        7.4555050e-03,  4.6906565e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00114001,  0.00160131,  0.00187452, -0.00209111,  0.00316587,
        0.00109819, -0.00044178, -0.00318099, -0.00357965,  0.00041364],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00557604, -0.00194054, -0.01223587,  0.0184473 ,  0.01087336,
        0.00384579,  0.00561674, -0.00492975, -0.01130889, -0.01394415],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.01469114,  0.00019037, -0.01864824, -0.00121603,  0.0088385 ,
       -0.0071046 ,  0.00307218,  0.00967368, -0.00062324, -0.00887373],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5062408e-03, -6.3206190e-03,  1.0756848e-02,  6.5126009e-03,
       -1.9337127e-03, -1.2067968e-02, -2.7434311e-05,  3.6456904e-03,
       -5.9455661e-03,  3.8739224e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00667472, -0.00055985,  0.00010797,  0.00487585,  0.00264946,
       -0.01179735, -0.00387811,  0.00069312,  0.00976996, -0.00853575],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00175719, -0.0058322 ,  0.00186299,  0.01645503,  0.00060095,
       -0.00424626,  0.00138362, -0.01152263, -0.00133486,  0.00087618],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.5831166e-03, -4.4137248e-04,  1.4350713e-04,  7.9170341e-04,
       -2.1276623e-03, -2.3903330e-03,  7.7174729e-05, -2.5602737e-03,
       -4.8560472e-03,  1.5946433e-02], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00017021, -0.00143739, -0.00070329, -0.00357604,  0.00252957,
        0.00591104, -0.00339114,  0.00218008, -0.0011687 , -0.00017391],
      dtype=float32)])]}
INFO flwr 2024-04-28 23:24:22,460 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:24:22,460 | app.py:229 | app_fit: losses_centralized [(0, 2.302804708480835), (1, 2.0222253799438477), (2, 1.8285781145095825), (3, 1.6802791357040405), (4, 1.6188974380493164), (5, 1.6137158870697021), (6, 1.5832353830337524), (7, 1.5792139768600464), (8, 1.5650503635406494), (9, 1.5591394901275635), (10, 1.5565201044082642)]
INFO flwr 2024-04-28 23:24:22,460 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0685), (1, 0.4314), (2, 0.6284), (3, 0.7794), (4, 0.8409), (5, 0.8459), (6, 0.8779), (7, 0.882), (8, 0.896), (9, 0.902), (10, 0.9046)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9046
wandb:     loss 1.55652
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_232113-x48yp6t7
wandb: Find logs at: ./wandb/offline-run-20240428_232113-x48yp6t7/logs
INFO flwr 2024-04-28 23:24:26,091 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:24:26,744 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1529423)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1529423)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:24:31,558	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:24:32,015	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:24:32,545	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:24:32,547	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:24:43,444 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174273562010.0, 'object_store_memory': 78974383718.0, 'CPU': 64.0}
INFO flwr 2024-04-28 23:24:43,444 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:24:43,444 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:24:43,460 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:24:43,462 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:24:43,463 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:24:43,463 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:24:46,164 | server.py:94 | initial parameters (loss, other metrics): 2.3021957874298096, {'accuracy': 0.0855, 'data_size': 10000}
INFO flwr 2024-04-28 23:24:46,165 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:24:46,165 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1532536)[0m 2024-04-28 23:24:49.524644: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1532536)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1532536)[0m 2024-04-28 23:24:51.853080: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1532542)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1532542)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1532542)[0m 2024-04-28 23:24:49.819442: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1532542)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1532544)[0m 2024-04-28 23:24:52.004122: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:25:24,452 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:25:25,980 | server.py:125 | fit progress: (1, 1.7617191076278687, {'accuracy': 0.7152, 'data_size': 10000}, 39.81443450899678)
INFO flwr 2024-04-28 23:25:25,980 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:25:25,980 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:25:49,073 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:25:50,555 | server.py:125 | fit progress: (2, 1.608518362045288, {'accuracy': 0.8717, 'data_size': 10000}, 64.38931430497905)
INFO flwr 2024-04-28 23:25:50,555 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:25:50,555 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:26:12,919 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:26:14,431 | server.py:125 | fit progress: (3, 1.5752859115600586, {'accuracy': 0.8962, 'data_size': 10000}, 88.266067716002)
INFO flwr 2024-04-28 23:26:14,432 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:26:14,432 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:26:36,148 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:26:37,426 | server.py:125 | fit progress: (4, 1.5794858932495117, {'accuracy': 0.8919, 'data_size': 10000}, 111.26048437997815)
INFO flwr 2024-04-28 23:26:37,426 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:26:37,426 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:26:59,228 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:27:00,503 | server.py:125 | fit progress: (5, 1.5757911205291748, {'accuracy': 0.8939, 'data_size': 10000}, 134.33780803199625)
INFO flwr 2024-04-28 23:27:00,504 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:27:00,504 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:27:23,548 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:27:25,042 | server.py:125 | fit progress: (6, 1.5725218057632446, {'accuracy': 0.8976, 'data_size': 10000}, 158.87678329797927)
INFO flwr 2024-04-28 23:27:25,042 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:27:25,042 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:27:44,878 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:27:46,401 | server.py:125 | fit progress: (7, 1.5690884590148926, {'accuracy': 0.8984, 'data_size': 10000}, 180.23593860398978)
INFO flwr 2024-04-28 23:27:46,401 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:27:46,402 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:28:09,193 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:28:10,690 | server.py:125 | fit progress: (8, 1.553829312324524, {'accuracy': 0.9132, 'data_size': 10000}, 204.5250443269906)
INFO flwr 2024-04-28 23:28:10,691 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:28:10,691 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:28:33,326 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:28:34,809 | server.py:125 | fit progress: (9, 1.5537596940994263, {'accuracy': 0.9137, 'data_size': 10000}, 228.64359168199007)
INFO flwr 2024-04-28 23:28:34,809 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:28:34,809 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:28:54,766 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:28:56,261 | server.py:125 | fit progress: (10, 1.562736988067627, {'accuracy': 0.9036, 'data_size': 10000}, 250.09604429997853)
INFO flwr 2024-04-28 23:28:56,262 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:28:56,262 | server.py:153 | FL finished in 250.09647176598082
INFO flwr 2024-04-28 23:28:56,262 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:28:56,270 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00059509,  0.00275659,  0.00081172,  0.00639605,  0.00386056,
       -0.00432284, -0.00165189, -0.00324955, -0.00090916, -0.00309638],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00063224,  0.00284255,  0.00089193,  0.0016769 ,  0.00069859,
       -0.00078878, -0.00014095, -0.000273  , -0.0047669 , -0.00077254],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.86284029e-04,  9.37790668e-04,  6.20054547e-04,  3.57644858e-05,
        1.45034934e-03,  1.61100726e-03, -1.07378764e-04,  5.97492326e-04,
       -2.58545368e-03, -2.37330142e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00013482,  0.00039272,  0.0004165 ,  0.00033236,  0.00289536,
        0.00086256,  0.00053572, -0.00070093, -0.00221959, -0.00237984],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00021003, -0.00022578,  0.00030525,  0.0009279 ,  0.00111624,
        0.00292401, -0.00055932,  0.00060877, -0.0030151 , -0.00187191],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00023864,  0.00048327,  0.00129447,  0.00033842,  0.00283022,
       -0.00122411, -0.0001123 , -0.00105818,  0.00011181, -0.00290218],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6613414e-05, -1.2646722e-04,  3.8881481e-04,  3.8187881e-04,
        1.2776123e-03,  1.0487370e-03, -3.1973582e-04, -2.6282802e-05,
       -1.5761261e-03, -1.0750125e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2032584e-05,  1.1889179e-03, -5.3049276e-05, -7.5858546e-04,
        2.5274113e-03,  1.2427099e-03, -2.4478789e-04,  6.5860222e-04,
       -1.2982421e-03, -3.2409083e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00020474,  0.00044956, -0.00013651,  0.00027825,  0.00031967,
        0.00133477,  0.00040176,  0.00023663, -0.00223578, -0.00044356],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.4433000e-05,  1.7090427e-04, -9.0768118e-04,  9.5558621e-04,
        1.4693325e-03,  7.8291050e-04, -2.7432403e-04,  1.8844810e-04,
       -1.5432732e-03, -8.7630644e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:28:56,270 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:28:56,270 | app.py:229 | app_fit: losses_centralized [(0, 2.3021957874298096), (1, 1.7617191076278687), (2, 1.608518362045288), (3, 1.5752859115600586), (4, 1.5794858932495117), (5, 1.5757911205291748), (6, 1.5725218057632446), (7, 1.5690884590148926), (8, 1.553829312324524), (9, 1.5537596940994263), (10, 1.562736988067627)]
INFO flwr 2024-04-28 23:28:56,271 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0855), (1, 0.7152), (2, 0.8717), (3, 0.8962), (4, 0.8919), (5, 0.8939), (6, 0.8976), (7, 0.8984), (8, 0.9132), (9, 0.9137), (10, 0.9036)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9036
wandb:     loss 1.56274
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_232426-64n6jhal
wandb: Find logs at: ./wandb/offline-run-20240428_232426-64n6jhal/logs
INFO flwr 2024-04-28 23:28:59,887 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:29:00,559 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1532536)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1532536)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:29:06,336	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:29:06,692	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:29:07,046	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:29:07,048	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:29:18,031 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174264054375.0, 'object_store_memory': 78970309017.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:29:18,031 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:29:18,032 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:29:18,054 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:29:18,055 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:29:18,056 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:29:18,056 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:29:20,999 | server.py:94 | initial parameters (loss, other metrics): 2.3001112937927246, {'accuracy': 0.1039, 'data_size': 10000}
INFO flwr 2024-04-28 23:29:20,999 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:29:21,000 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1536296)[0m 2024-04-28 23:29:24.076683: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1536296)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1536296)[0m 2024-04-28 23:29:26.392517: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1536296)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1536296)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1536291)[0m 2024-04-28 23:29:24.220686: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1536291)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1536291)[0m 2024-04-28 23:29:26.538042: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:29:57,992 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:29:59,498 | server.py:125 | fit progress: (1, 1.794327974319458, {'accuracy': 0.6759, 'data_size': 10000}, 38.49842521498795)
INFO flwr 2024-04-28 23:29:59,499 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:29:59,499 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:30:22,049 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:30:23,567 | server.py:125 | fit progress: (2, 1.6027919054031372, {'accuracy': 0.8757, 'data_size': 10000}, 62.567350578989135)
INFO flwr 2024-04-28 23:30:23,567 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:30:23,568 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:30:44,839 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:30:46,331 | server.py:125 | fit progress: (3, 1.5884002447128296, {'accuracy': 0.8833, 'data_size': 10000}, 85.33120694800164)
INFO flwr 2024-04-28 23:30:46,331 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:30:46,332 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:31:07,312 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:31:08,588 | server.py:125 | fit progress: (4, 1.5666077136993408, {'accuracy': 0.9012, 'data_size': 10000}, 107.58808129499084)
INFO flwr 2024-04-28 23:31:08,588 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:31:08,588 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:31:30,120 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:31:31,412 | server.py:125 | fit progress: (5, 1.5648746490478516, {'accuracy': 0.9026, 'data_size': 10000}, 130.4124556129973)
INFO flwr 2024-04-28 23:31:31,413 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:31:31,413 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:31:54,238 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:31:55,747 | server.py:125 | fit progress: (6, 1.5616281032562256, {'accuracy': 0.9052, 'data_size': 10000}, 154.74691348799388)
INFO flwr 2024-04-28 23:31:55,747 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:31:55,747 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:32:18,792 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:32:20,318 | server.py:125 | fit progress: (7, 1.5642842054367065, {'accuracy': 0.9027, 'data_size': 10000}, 179.3182486339938)
INFO flwr 2024-04-28 23:32:20,318 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:32:20,319 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:32:39,032 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:32:40,514 | server.py:125 | fit progress: (8, 1.5522356033325195, {'accuracy': 0.9139, 'data_size': 10000}, 199.5141795249947)
INFO flwr 2024-04-28 23:32:40,514 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:32:40,515 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:33:03,401 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:33:04,857 | server.py:125 | fit progress: (9, 1.5579588413238525, {'accuracy': 0.9069, 'data_size': 10000}, 223.85714391697547)
INFO flwr 2024-04-28 23:33:04,857 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:33:04,858 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:33:27,816 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:33:29,343 | server.py:125 | fit progress: (10, 1.553406834602356, {'accuracy': 0.9123, 'data_size': 10000}, 248.343499761977)
INFO flwr 2024-04-28 23:33:29,344 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:33:29,344 | server.py:153 | FL finished in 248.34391644099378
INFO flwr 2024-04-28 23:33:29,344 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:33:29,352 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00168629, -0.0007697 , -0.00084509,  0.00232069,  0.00371114,
       -0.0008892 , -0.00097291, -0.00174581, -0.00195109, -0.00054421],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.9001449e-05, -1.2376619e-04,  9.2306302e-04,  9.5073081e-04,
        1.4149264e-03, -2.9823024e-04, -6.8112422e-04, -7.8241574e-04,
       -1.4085229e-03, -6.3609958e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7829005e-04, -3.8483872e-06,  8.5974578e-04,  3.3283257e-04,
        3.3515471e-04,  6.9318521e-05, -1.0911461e-03,  3.7738751e-04,
       -1.3460993e-03,  6.4499880e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.7725276e-04, -4.8624957e-04, -8.0556521e-05,  5.2753068e-04,
        2.7849763e-03, -3.1368886e-04,  2.6537784e-04, -4.6004730e-05,
        5.5295555e-03, -7.7035781e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00010744,  0.00017806,  0.00077612, -0.00107295,  0.00170833,
        0.00147583, -0.00053992,  0.00022555, -0.0013734 , -0.0012701 ],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.4945249e-04,  3.3180334e-04,  6.4220472e-04,  1.5568695e-04,
        8.7808032e-04, -3.4727363e-04, -3.0504965e-04, -8.7818327e-05,
       -6.3954637e-04, -2.7854057e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.8457828e-04, -3.3500721e-04, -2.5269031e-03, -5.0054688e-05,
        2.2623059e-03,  1.0737535e-03,  1.4469173e-03,  2.1959073e-05,
       -2.0023997e-04, -1.3080576e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.2222359e-04,  1.2291550e-04, -4.1066963e-04,  4.9378630e-04,
        6.6501909e-04, -5.2703486e-05,  1.3706698e-04, -7.1180810e-04,
       -7.6772424e-04,  3.0195370e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00026447,  0.00168344,  0.00017471, -0.00071928,  0.00164621,
        0.00046487, -0.00071041, -0.00026674, -0.00195619, -0.00058104],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1527747e-05, -2.7824022e-04, -1.1525709e-04,  5.0136838e-05,
        7.9849607e-04,  3.1911585e-04, -1.9068299e-04, -1.8186891e-04,
       -1.3584417e-04, -2.9732069e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:33:29,352 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:33:29,352 | app.py:229 | app_fit: losses_centralized [(0, 2.3001112937927246), (1, 1.794327974319458), (2, 1.6027919054031372), (3, 1.5884002447128296), (4, 1.5666077136993408), (5, 1.5648746490478516), (6, 1.5616281032562256), (7, 1.5642842054367065), (8, 1.5522356033325195), (9, 1.5579588413238525), (10, 1.553406834602356)]
INFO flwr 2024-04-28 23:33:29,352 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1039), (1, 0.6759), (2, 0.8757), (3, 0.8833), (4, 0.9012), (5, 0.9026), (6, 0.9052), (7, 0.9027), (8, 0.9139), (9, 0.9069), (10, 0.9123)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9123
wandb:     loss 1.55341
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_232900-0zzv06ml
wandb: Find logs at: ./wandb/offline-run-20240428_232900-0zzv06ml/logs
INFO flwr 2024-04-28 23:33:32,967 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:33:33,685 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1536291)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1536291)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:33:38,754	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:33:39,171	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:33:39,528	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:33:39,529	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:33:50,504 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78968807424.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174260550656.0}
INFO flwr 2024-04-28 23:33:50,504 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:33:50,504 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:33:50,527 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:33:50,529 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:33:50,529 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:33:50,529 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:33:53,261 | server.py:94 | initial parameters (loss, other metrics): 2.3038723468780518, {'accuracy': 0.091, 'data_size': 10000}
INFO flwr 2024-04-28 23:33:53,261 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:33:53,261 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1540041)[0m 2024-04-28 23:33:56.732448: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1540041)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1540041)[0m 2024-04-28 23:33:59.112573: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1540041)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1540041)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1540044)[0m 2024-04-28 23:33:57.017423: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1540044)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1540044)[0m 2024-04-28 23:33:59.306776: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:34:34,468 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:34:35,988 | server.py:125 | fit progress: (1, 1.7527154684066772, {'accuracy': 0.7093, 'data_size': 10000}, 42.72631024400471)
INFO flwr 2024-04-28 23:34:35,988 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:34:35,988 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:34:58,562 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:35:00,072 | server.py:125 | fit progress: (2, 1.6212491989135742, {'accuracy': 0.8446, 'data_size': 10000}, 66.81037346200901)
INFO flwr 2024-04-28 23:35:00,098 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:35:00,099 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:35:22,879 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:35:24,427 | server.py:125 | fit progress: (3, 1.566725730895996, {'accuracy': 0.8977, 'data_size': 10000}, 91.16588118500658)
INFO flwr 2024-04-28 23:35:24,427 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:35:24,428 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:35:47,448 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:35:48,755 | server.py:125 | fit progress: (4, 1.5597823858261108, {'accuracy': 0.9024, 'data_size': 10000}, 115.49360747999162)
INFO flwr 2024-04-28 23:35:48,755 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:35:48,755 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:36:13,612 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:36:14,891 | server.py:125 | fit progress: (5, 1.5661944150924683, {'accuracy': 0.8967, 'data_size': 10000}, 141.62949972500792)
INFO flwr 2024-04-28 23:36:14,891 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:36:14,891 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:36:41,131 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:36:42,646 | server.py:125 | fit progress: (6, 1.5575542449951172, {'accuracy': 0.9063, 'data_size': 10000}, 169.38510645899805)
INFO flwr 2024-04-28 23:36:42,647 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:36:42,647 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:37:07,164 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:37:08,661 | server.py:125 | fit progress: (7, 1.5576871633529663, {'accuracy': 0.9048, 'data_size': 10000}, 195.39966821300914)
INFO flwr 2024-04-28 23:37:08,661 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:37:08,661 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:37:30,683 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:37:32,209 | server.py:125 | fit progress: (8, 1.5492184162139893, {'accuracy': 0.9139, 'data_size': 10000}, 218.94790422500228)
INFO flwr 2024-04-28 23:37:32,209 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:37:32,210 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:37:57,066 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:37:58,565 | server.py:125 | fit progress: (9, 1.5477145910263062, {'accuracy': 0.9157, 'data_size': 10000}, 245.30391740301275)
INFO flwr 2024-04-28 23:37:58,565 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:37:58,566 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:38:21,534 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:38:23,023 | server.py:125 | fit progress: (10, 1.5459892749786377, {'accuracy': 0.9156, 'data_size': 10000}, 269.76141440001084)
INFO flwr 2024-04-28 23:38:23,023 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:38:23,023 | server.py:153 | FL finished in 269.76182899301057
INFO flwr 2024-04-28 23:38:23,023 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:38:23,031 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0009447 , -0.00639964,  0.0059864 ,  0.00025795, -0.00109145,
        0.00544509, -0.00183525, -0.00472919, -0.00188012,  0.00519103],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00024208, -0.00013256,  0.00678423, -0.00137398,  0.00097157,
       -0.00265647, -0.00320025, -0.00015017,  0.00069541, -0.00069564],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3510796e-04,  1.3507974e-04,  9.3541872e-05,  6.8172696e-04,
       -1.1972317e-04, -1.3716286e-04, -8.4489351e-05,  1.7042068e-04,
       -4.0733971e-04, -4.6701691e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3292160e-04,  4.4139556e-04, -1.7792768e-04,  9.6389856e-05,
        1.4760149e-04, -3.7329638e-04,  3.0008092e-04, -2.0661543e-04,
       -1.1384115e-04, -2.4664425e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1150138e-04,  8.6078020e-05,  2.4548997e-04,  4.3329735e-05,
       -4.6353372e-05, -5.7663064e-04,  4.5783989e-04,  8.5570555e-06,
        3.9573386e-04, -3.0243472e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2417201e-04,  1.8169691e-03,  1.1232459e-03,  8.4217935e-04,
        6.0237151e-05,  1.5512858e-04,  2.0423255e-04,  5.3045980e-05,
       -3.8175948e-03, -2.1315337e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1224555e-03,  2.7481830e-04,  1.2607846e-04,  2.1944061e-05,
        4.4922713e-06, -4.6550820e-04, -2.2879189e-03,  2.0795951e-04,
        2.9193284e-04, -2.9613369e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0443981e-04, -2.9723384e-04,  4.0627727e-03,  3.0453429e-03,
        3.2320331e-05, -2.4285377e-04, -1.6563170e-04,  2.9949305e-04,
       -6.3956948e-03, -2.3400156e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.48936509e-05, -2.11884428e-04,  1.19398304e-04,  3.57760960e-04,
        1.87193509e-05, -6.02334367e-05, -5.20715184e-05, -4.06290674e-05,
        1.40174219e-04, -1.96280598e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6912260e-05, -2.0733829e-04,  9.3876253e-05,  2.4822459e-04,
        9.6696967e-05,  3.8570315e-06, -2.5452571e-06, -2.3932997e-03,
        8.8242414e-05,  2.1592486e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:38:23,031 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:38:23,031 | app.py:229 | app_fit: losses_centralized [(0, 2.3038723468780518), (1, 1.7527154684066772), (2, 1.6212491989135742), (3, 1.566725730895996), (4, 1.5597823858261108), (5, 1.5661944150924683), (6, 1.5575542449951172), (7, 1.5576871633529663), (8, 1.5492184162139893), (9, 1.5477145910263062), (10, 1.5459892749786377)]
INFO flwr 2024-04-28 23:38:23,031 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.091), (1, 0.7093), (2, 0.8446), (3, 0.8977), (4, 0.9024), (5, 0.8967), (6, 0.9063), (7, 0.9048), (8, 0.9139), (9, 0.9157), (10, 0.9156)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9156
wandb:     loss 1.54599
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_233333-oj6srszt
wandb: Find logs at: ./wandb/offline-run-20240428_233333-oj6srszt/logs
INFO flwr 2024-04-28 23:38:26,655 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:38:27,337 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1540034)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1540034)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:38:32,197	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:38:32,555	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:38:33,108	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:38:33,110	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:38:44,010 | app.py:213 | Flower VCE: Ray initialized with resources: {'memory': 174317315482.0, 'node:10.20.240.13': 1.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78993135206.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:38:44,010 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:38:44,011 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:38:44,028 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:38:44,029 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:38:44,029 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:38:44,030 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:38:46,758 | server.py:94 | initial parameters (loss, other metrics): 2.304962635040283, {'accuracy': 0.1067, 'data_size': 10000}
INFO flwr 2024-04-28 23:38:46,759 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:38:46,759 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1544222)[0m 2024-04-28 23:38:50.137977: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1544222)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1544222)[0m 2024-04-28 23:38:52.434603: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1544222)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1544222)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1544218)[0m 2024-04-28 23:38:50.349780: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1544218)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1544221)[0m 2024-04-28 23:38:52.644770: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:39:22,577 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:39:24,105 | server.py:125 | fit progress: (1, 1.6849775314331055, {'accuracy': 0.7987, 'data_size': 10000}, 37.345512907981174)
INFO flwr 2024-04-28 23:39:24,105 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:39:24,105 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:39:47,077 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:39:48,581 | server.py:125 | fit progress: (2, 1.5749324560165405, {'accuracy': 0.8972, 'data_size': 10000}, 61.82134344498627)
INFO flwr 2024-04-28 23:39:48,581 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:39:48,581 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:40:09,862 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:40:11,386 | server.py:125 | fit progress: (3, 1.5814331769943237, {'accuracy': 0.8873, 'data_size': 10000}, 84.62667542599957)
INFO flwr 2024-04-28 23:40:11,386 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:40:11,386 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:40:34,445 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:40:35,734 | server.py:125 | fit progress: (4, 1.5681267976760864, {'accuracy': 0.8982, 'data_size': 10000}, 108.97485935798613)
INFO flwr 2024-04-28 23:40:35,734 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:40:35,735 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:41:00,170 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:41:01,410 | server.py:125 | fit progress: (5, 1.558624267578125, {'accuracy': 0.9084, 'data_size': 10000}, 134.65075249099755)
INFO flwr 2024-04-28 23:41:01,410 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:41:01,411 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:41:25,521 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:41:27,029 | server.py:125 | fit progress: (6, 1.5591261386871338, {'accuracy': 0.9056, 'data_size': 10000}, 160.26972186099738)
INFO flwr 2024-04-28 23:41:27,029 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:41:27,030 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:41:49,820 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:41:51,284 | server.py:125 | fit progress: (7, 1.5710375308990479, {'accuracy': 0.8934, 'data_size': 10000}, 184.5244695940055)
INFO flwr 2024-04-28 23:41:51,284 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:41:51,284 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:42:12,752 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:42:14,254 | server.py:125 | fit progress: (8, 1.5517345666885376, {'accuracy': 0.9125, 'data_size': 10000}, 207.49446158498176)
INFO flwr 2024-04-28 23:42:14,254 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:42:14,254 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:42:37,835 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:42:39,314 | server.py:125 | fit progress: (9, 1.5475860834121704, {'accuracy': 0.9176, 'data_size': 10000}, 232.55426264400012)
INFO flwr 2024-04-28 23:42:39,314 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:42:39,314 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:43:01,566 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:43:02,810 | server.py:125 | fit progress: (10, 1.5472155809402466, {'accuracy': 0.9164, 'data_size': 10000}, 256.0507252289972)
INFO flwr 2024-04-28 23:43:02,810 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:43:02,810 | server.py:153 | FL finished in 256.0511457459943
INFO flwr 2024-04-28 23:43:02,811 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:43:02,816 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.7295554e-04, -6.2509417e-04,  1.3915717e-03,  2.7228929e-05,
       -3.2501898e-03,  6.6817141e-05,  2.6185455e-04, -4.7696778e-04,
       -1.1252150e-03,  4.0029930e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.5329070e-05,  9.0802765e-05, -2.9088519e-04,  9.4022049e-04,
        1.6120526e-04,  2.0118488e-04, -1.2800386e-04, -1.8815405e-04,
       -7.5854012e-04,  3.7567574e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.0239934e-04,  6.7412991e-05,  2.1769602e-03, -1.1229942e-03,
        2.7944450e-04,  9.1461610e-04, -3.7036091e-04, -8.0334838e-04,
       -1.8676840e-04, -4.5252102e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9995029e-04, -1.3028980e-04,  2.4616334e-04,  1.8885959e-04,
        1.2454641e-03,  3.3532816e-04, -1.5044518e-04,  5.1024577e-05,
       -3.7395797e-04, -1.2121500e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.2116911e-06, -4.8659314e-04,  5.8054778e-04, -8.2621304e-04,
        2.0920244e-04,  6.8106165e-04, -3.0799001e-05,  4.6678819e-04,
        2.8756566e-04, -8.8671996e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3862202e-04,  2.2846855e-04, -2.1310685e-05,  1.7910924e-04,
        4.2090649e-04, -1.0856695e-04, -1.2447304e-04,  2.4693836e-05,
        2.5529542e-04, -7.1546267e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.6527809e-05,  3.1640995e-04,  7.4333081e-04,  7.6341370e-05,
        1.2199770e-03,  3.3595541e-04, -8.5904059e-05, -1.2125943e-03,
       -1.2392721e-03, -5.7656725e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2763975e-04,  1.8269602e-04,  1.4645897e-05,  7.6246186e-05,
        6.9516595e-04,  1.6242768e-05, -3.3116855e-06, -5.6877080e-04,
       -6.1791419e-04, -1.2259067e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6440069e-05,  1.3689230e-04, -7.1058537e-05, -2.6594998e-05,
       -1.2578594e-04,  4.6350222e-04,  2.2428257e-04, -1.6424341e-04,
       -2.6142719e-04, -1.2909647e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.08573207e-04,  8.14229570e-05,  2.22380055e-04,  1.08428154e-04,
        2.15534048e-04,  4.25865001e-04, -1.25010629e-04, -2.12797997e-04,
       -1.26547762e-03,  4.41105280e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:43:02,816 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:43:02,816 | app.py:229 | app_fit: losses_centralized [(0, 2.304962635040283), (1, 1.6849775314331055), (2, 1.5749324560165405), (3, 1.5814331769943237), (4, 1.5681267976760864), (5, 1.558624267578125), (6, 1.5591261386871338), (7, 1.5710375308990479), (8, 1.5517345666885376), (9, 1.5475860834121704), (10, 1.5472155809402466)]
INFO flwr 2024-04-28 23:43:02,817 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1067), (1, 0.7987), (2, 0.8972), (3, 0.8873), (4, 0.8982), (5, 0.9084), (6, 0.9056), (7, 0.8934), (8, 0.9125), (9, 0.9176), (10, 0.9164)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9164
wandb:     loss 1.54722
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_233826-pkb0bgyp
wandb: Find logs at: ./wandb/offline-run-20240428_233826-pkb0bgyp/logs
INFO flwr 2024-04-28 23:43:06,439 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:43:07,150 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1544218)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1544218)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:43:11,933	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:43:12,300	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:43:12,697	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:43:12,699	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:43:23,657 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 174219156890.0, 'object_store_memory': 78951067238.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:43:23,658 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:43:23,658 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:43:23,677 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:43:23,678 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:43:23,678 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:43:23,678 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:43:26,975 | server.py:94 | initial parameters (loss, other metrics): 2.301093339920044, {'accuracy': 0.0993, 'data_size': 10000}
INFO flwr 2024-04-28 23:43:26,975 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:43:26,975 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1548368)[0m 2024-04-28 23:43:29.848739: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1548368)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1548367)[0m 2024-04-28 23:43:32.129201: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1548367)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1548367)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1548365)[0m 2024-04-28 23:43:30.055944: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1548365)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1548365)[0m 2024-04-28 23:43:32.396660: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:44:05,269 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:44:06,730 | server.py:125 | fit progress: (1, 1.7486345767974854, {'accuracy': 0.7133, 'data_size': 10000}, 39.75467304099584)
INFO flwr 2024-04-28 23:44:06,730 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:44:06,730 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:44:29,812 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:44:31,277 | server.py:125 | fit progress: (2, 1.6274091005325317, {'accuracy': 0.8375, 'data_size': 10000}, 64.30216209197533)
INFO flwr 2024-04-28 23:44:31,277 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:44:31,278 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:44:56,191 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:44:57,686 | server.py:125 | fit progress: (3, 1.5658042430877686, {'accuracy': 0.8985, 'data_size': 10000}, 90.71068315100274)
INFO flwr 2024-04-28 23:44:57,686 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:44:57,686 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:45:20,206 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:45:21,510 | server.py:125 | fit progress: (4, 1.576592206954956, {'accuracy': 0.8875, 'data_size': 10000}, 114.53488428299897)
INFO flwr 2024-04-28 23:45:21,510 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:45:21,510 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:45:45,696 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:45:46,972 | server.py:125 | fit progress: (5, 1.5861496925354004, {'accuracy': 0.8767, 'data_size': 10000}, 139.99738277198048)
INFO flwr 2024-04-28 23:45:46,973 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:45:46,973 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:46:09,103 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:46:10,598 | server.py:125 | fit progress: (6, 1.5552082061767578, {'accuracy': 0.9068, 'data_size': 10000}, 163.623364242987)
INFO flwr 2024-04-28 23:46:10,599 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:46:10,599 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:46:33,464 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:46:34,963 | server.py:125 | fit progress: (7, 1.5625853538513184, {'accuracy': 0.8988, 'data_size': 10000}, 187.98800640899572)
INFO flwr 2024-04-28 23:46:34,964 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:46:34,964 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:46:57,228 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:46:58,743 | server.py:125 | fit progress: (8, 1.5594533681869507, {'accuracy': 0.9022, 'data_size': 10000}, 211.7675763599982)
INFO flwr 2024-04-28 23:46:58,743 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:46:58,743 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:47:19,470 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:47:21,024 | server.py:125 | fit progress: (9, 1.549147605895996, {'accuracy': 0.9136, 'data_size': 10000}, 234.04873218099237)
INFO flwr 2024-04-28 23:47:21,024 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:47:21,024 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:47:44,632 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:47:46,155 | server.py:125 | fit progress: (10, 1.5487329959869385, {'accuracy': 0.9121, 'data_size': 10000}, 259.1801981119788)
INFO flwr 2024-04-28 23:47:46,156 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:47:46,156 | server.py:153 | FL finished in 259.1807281819929
INFO flwr 2024-04-28 23:47:46,156 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:47:46,162 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6485255e-05, -8.4792665e-04, -6.6692752e-05, -1.0698671e-03,
        5.3676509e-04,  4.1556866e-03,  2.4503909e-04, -1.9628601e-03,
       -2.1665078e-03,  1.2629038e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.6631038e-05,  6.3512946e-04, -1.3671005e-04,  3.7487471e-03,
        1.7214826e-03, -7.7521512e-03,  2.9443908e-03, -1.2603586e-03,
        4.6048421e-04, -3.9757419e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.2022817e-05, -4.0376799e-05,  1.1184424e-04, -6.9426249e-05,
        1.7098957e-04,  2.5465057e-04,  5.0329632e-05,  2.7924430e-04,
       -4.8789926e-04, -3.1131876e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0736916e-05,  1.5829341e-04,  1.3684769e-05,  2.8452306e-04,
        3.7842034e-04, -1.1681695e-04, -4.7371072e-05, -2.3319297e-04,
       -1.1822864e-04, -2.8852691e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.28209485e-05, -7.22128534e-05, -4.43783647e-05,  1.64869532e-04,
        1.65998121e-03,  2.27301298e-05,  5.67238385e-05,  3.53686482e-05,
       -3.19435261e-04, -1.51642389e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.33876584e-03, -1.52976339e-04,  9.86914347e-06,  1.32420193e-03,
        1.10633235e-04,  2.99264357e-05, -8.34181174e-06, -3.40240222e-05,
        9.11962707e-05, -3.16676087e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.91043780e-05,  2.40219189e-04, -8.96392667e-05,  1.28552865e-03,
       -2.29451354e-04,  3.51410330e-04,  1.12179274e-04, -2.25626864e-05,
       -1.54353224e-03, -2.03208780e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6254823e-05, -6.1190437e-04,  1.9847491e-04,  2.4474206e-05,
        8.5497005e-03, -3.1973707e-04, -2.8586554e-04, -6.9024347e-05,
        1.2232718e-03, -8.6630685e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6934639e-04, -1.4801431e-04, -1.2647618e-04,  2.0921465e-04,
        7.1304377e-05,  1.1020417e-05, -1.2000796e-04, -6.3918684e-05,
       -2.2672687e-04,  2.2431166e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.3196450e-06,  1.8095764e-04,  7.4195370e-05, -6.5920729e-05,
       -3.9823328e-05,  2.0744019e-05,  2.2972845e-04, -6.3199921e-05,
       -2.4720066e-04, -8.0123420e-05], dtype=float32)])]}
INFO flwr 2024-04-28 23:47:46,162 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:47:46,162 | app.py:229 | app_fit: losses_centralized [(0, 2.301093339920044), (1, 1.7486345767974854), (2, 1.6274091005325317), (3, 1.5658042430877686), (4, 1.576592206954956), (5, 1.5861496925354004), (6, 1.5552082061767578), (7, 1.5625853538513184), (8, 1.5594533681869507), (9, 1.549147605895996), (10, 1.5487329959869385)]
INFO flwr 2024-04-28 23:47:46,162 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0993), (1, 0.7133), (2, 0.8375), (3, 0.8985), (4, 0.8875), (5, 0.8767), (6, 0.9068), (7, 0.8988), (8, 0.9022), (9, 0.9136), (10, 0.9121)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9121
wandb:     loss 1.54873
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_234306-smpml2z6
wandb: Find logs at: ./wandb/offline-run-20240428_234306-smpml2z6/logs
INFO flwr 2024-04-28 23:47:49,779 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:47:50,453 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1548359)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1548359)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:47:55,432	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:47:55,915	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:47:56,259	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:47:56,260	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:48:07,177 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78968448614.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174259713434.0, 'CPU': 64.0}
INFO flwr 2024-04-28 23:48:07,177 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:48:07,177 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:48:07,194 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:48:07,195 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:48:07,196 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:48:07,196 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:48:09,845 | server.py:94 | initial parameters (loss, other metrics): 2.2989494800567627, {'accuracy': 0.1601, 'data_size': 10000}
INFO flwr 2024-04-28 23:48:09,846 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:48:09,846 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1552108)[0m 2024-04-28 23:48:13.291263: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1552108)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1552108)[0m 2024-04-28 23:48:15.600444: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1552118)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1552118)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1552121)[0m 2024-04-28 23:48:13.381647: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1552121)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1552114)[0m 2024-04-28 23:48:15.732397: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:48:48,026 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:48:49,584 | server.py:125 | fit progress: (1, 1.8288830518722534, {'accuracy': 0.6257, 'data_size': 10000}, 39.738508845010074)
INFO flwr 2024-04-28 23:48:49,585 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:48:49,585 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:49:11,598 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:49:13,104 | server.py:125 | fit progress: (2, 1.5978895425796509, {'accuracy': 0.8651, 'data_size': 10000}, 63.25832232501125)
INFO flwr 2024-04-28 23:49:13,104 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:49:13,105 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:49:35,897 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:49:37,445 | server.py:125 | fit progress: (3, 1.560060977935791, {'accuracy': 0.9014, 'data_size': 10000}, 87.5989322559908)
INFO flwr 2024-04-28 23:49:37,445 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:49:37,445 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:49:58,662 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:49:59,940 | server.py:125 | fit progress: (4, 1.5626312494277954, {'accuracy': 0.8991, 'data_size': 10000}, 110.09394319201238)
INFO flwr 2024-04-28 23:49:59,940 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:49:59,940 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:50:24,187 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:50:25,485 | server.py:125 | fit progress: (5, 1.5560364723205566, {'accuracy': 0.9047, 'data_size': 10000}, 135.63870451800176)
INFO flwr 2024-04-28 23:50:25,485 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:50:25,485 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:50:48,727 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:50:50,234 | server.py:125 | fit progress: (6, 1.5504623651504517, {'accuracy': 0.9103, 'data_size': 10000}, 160.38776321598561)
INFO flwr 2024-04-28 23:50:50,234 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:50:50,234 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:51:14,103 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:51:15,641 | server.py:125 | fit progress: (7, 1.5542277097702026, {'accuracy': 0.9065, 'data_size': 10000}, 185.794808584993)
INFO flwr 2024-04-28 23:51:15,641 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:51:15,641 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:51:37,443 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:51:38,976 | server.py:125 | fit progress: (8, 1.5584579706192017, {'accuracy': 0.9027, 'data_size': 10000}, 209.13036583099165)
INFO flwr 2024-04-28 23:51:38,977 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:51:38,977 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:52:01,627 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:52:03,110 | server.py:125 | fit progress: (9, 1.5578843355178833, {'accuracy': 0.9025, 'data_size': 10000}, 233.2642917879857)
INFO flwr 2024-04-28 23:52:03,110 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:52:03,111 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:52:26,050 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:52:27,585 | server.py:125 | fit progress: (10, 1.5515025854110718, {'accuracy': 0.9093, 'data_size': 10000}, 257.73888536100276)
INFO flwr 2024-04-28 23:52:27,585 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:52:27,585 | server.py:153 | FL finished in 257.73933998998837
INFO flwr 2024-04-28 23:52:27,585 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:52:27,591 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.0299324e-04, -1.4936600e-03, -4.2256585e-04, -3.2165507e-04,
        1.7204477e-03, -6.4130560e-05, -5.3999358e-04, -1.4674343e-04,
        2.0013933e-04,  4.6519906e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.1444984e-04, -5.4987008e-04,  1.2003356e-03, -7.4490849e-03,
       -5.5655525e-03, -5.3725275e-04, -8.2712368e-06,  1.9465584e-03,
        8.1561394e-03,  2.3925924e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.5305143e-06,  1.2376836e-03, -6.6412694e-04,  2.1486389e-03,
       -2.9082234e-05,  7.3963878e-05,  5.5873825e-04,  3.3552753e-04,
        1.3887386e-02, -1.7556222e-02], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.7108398e-05,  1.8398332e-03, -7.7447138e-04, -2.9195270e-03,
        1.8401949e-03,  6.8805931e-04, -9.2127688e-05, -5.9858791e-04,
        1.1086811e-04, -3.7081001e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.4457410e-05,  1.4748437e-04, -5.6492857e-04,  6.8862975e-04,
       -3.0516580e-04, -1.2821074e-03,  6.0994783e-04,  1.1818594e-04,
        6.5175712e-04, -1.2820380e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.9670348e-06,  2.3767265e-05,  1.0194855e-04, -2.8748496e-04,
        2.1182615e-03,  2.9811391e-04, -3.3578760e-04, -4.2817093e-05,
        3.0101926e-05, -1.8971073e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.8144011e-05,  2.1289373e-04,  3.5412311e-05,  1.7172071e-05,
       -1.9849684e-04, -3.5853485e-05, -1.1335034e-04, -3.6794422e-04,
        5.9893093e-05,  4.3843556e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1945944e-03, -2.6571940e-04, -3.5126269e-04, -4.5924346e-04,
       -9.5474301e-05, -5.3959880e-03, -1.7070133e-03,  6.4247358e-04,
        4.5149191e-03,  9.2273962e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.4450840e-05,  3.0622527e-04,  2.0056228e-04, -5.9680140e-05,
        2.2600703e-03,  6.2813802e-04, -2.9127125e-04, -1.7350829e-05,
       -2.7305020e-03, -3.5060331e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1013493e-04, -5.9943734e-05,  1.7158049e-05, -2.6260508e-04,
       -6.1245281e-03,  2.0005484e-04,  1.2552360e-05, -2.4811135e-04,
        2.7625175e-04,  5.8790455e-03], dtype=float32)])]}
INFO flwr 2024-04-28 23:52:27,591 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:52:27,591 | app.py:229 | app_fit: losses_centralized [(0, 2.2989494800567627), (1, 1.8288830518722534), (2, 1.5978895425796509), (3, 1.560060977935791), (4, 1.5626312494277954), (5, 1.5560364723205566), (6, 1.5504623651504517), (7, 1.5542277097702026), (8, 1.5584579706192017), (9, 1.5578843355178833), (10, 1.5515025854110718)]
INFO flwr 2024-04-28 23:52:27,591 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1601), (1, 0.6257), (2, 0.8651), (3, 0.9014), (4, 0.8991), (5, 0.9047), (6, 0.9103), (7, 0.9065), (8, 0.9027), (9, 0.9025), (10, 0.9093)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9093
wandb:     loss 1.5515
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_234750-0vli8ijm
wandb: Find logs at: ./wandb/offline-run-20240428_234750-0vli8ijm/logs
INFO flwr 2024-04-28 23:52:31,227 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:52:31,901 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1552108)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1552108)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:52:36,987	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:52:37,341	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:52:37,686	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:52:37,688	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:52:48,646 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174284921856.0, 'CPU': 64.0, 'object_store_memory': 78979252224.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-28 23:52:48,646 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:52:48,646 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:52:48,663 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:52:48,664 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:52:48,665 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:52:48,665 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:52:51,785 | server.py:94 | initial parameters (loss, other metrics): 2.3026866912841797, {'accuracy': 0.1045, 'data_size': 10000}
INFO flwr 2024-04-28 23:52:51,786 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:52:51,786 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1555855)[0m 2024-04-28 23:52:54.658477: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1555855)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1555855)[0m 2024-04-28 23:52:56.906148: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1555867)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1555867)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1555861)[0m 2024-04-28 23:52:55.015429: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1555861)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1555861)[0m 2024-04-28 23:52:57.411503: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:53:28,067 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:53:29,590 | server.py:125 | fit progress: (1, 1.7470990419387817, {'accuracy': 0.715, 'data_size': 10000}, 37.80404699000064)
INFO flwr 2024-04-28 23:53:29,590 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:53:29,590 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:53:53,301 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:53:54,803 | server.py:125 | fit progress: (2, 1.6714484691619873, {'accuracy': 0.7879, 'data_size': 10000}, 63.01714241100126)
INFO flwr 2024-04-28 23:53:54,803 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:53:54,803 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:54:14,540 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:54:16,081 | server.py:125 | fit progress: (3, 1.5690218210220337, {'accuracy': 0.8935, 'data_size': 10000}, 84.29475396499038)
INFO flwr 2024-04-28 23:54:16,081 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:54:16,081 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:54:34,888 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:54:36,195 | server.py:125 | fit progress: (4, 1.562572717666626, {'accuracy': 0.8983, 'data_size': 10000}, 104.40949341701344)
INFO flwr 2024-04-28 23:54:36,196 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:54:36,196 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:55:00,129 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:55:01,406 | server.py:125 | fit progress: (5, 1.5567591190338135, {'accuracy': 0.9052, 'data_size': 10000}, 129.62033037800575)
INFO flwr 2024-04-28 23:55:01,406 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:55:01,407 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:55:27,292 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-28 23:55:28,809 | server.py:125 | fit progress: (6, 1.5678268671035767, {'accuracy': 0.8934, 'data_size': 10000}, 157.02334006800083)
INFO flwr 2024-04-28 23:55:28,809 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-28 23:55:28,810 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:55:48,971 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-28 23:55:50,498 | server.py:125 | fit progress: (7, 1.5538607835769653, {'accuracy': 0.9073, 'data_size': 10000}, 178.7123469549988)
INFO flwr 2024-04-28 23:55:50,498 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-28 23:55:50,499 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:56:13,627 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-28 23:56:15,137 | server.py:125 | fit progress: (8, 1.5540709495544434, {'accuracy': 0.9067, 'data_size': 10000}, 203.35110023900052)
INFO flwr 2024-04-28 23:56:15,137 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-28 23:56:15,137 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:56:38,058 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-28 23:56:39,554 | server.py:125 | fit progress: (9, 1.5527485609054565, {'accuracy': 0.9082, 'data_size': 10000}, 227.7686668940005)
INFO flwr 2024-04-28 23:56:39,555 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-28 23:56:39,555 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:57:01,680 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-28 23:57:02,976 | server.py:125 | fit progress: (10, 1.5587536096572876, {'accuracy': 0.9024, 'data_size': 10000}, 251.1900651610049)
INFO flwr 2024-04-28 23:57:02,976 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-28 23:57:02,976 | server.py:153 | FL finished in 251.1905660449993
INFO flwr 2024-04-28 23:57:02,977 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-28 23:57:02,982 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2846452e-05,  2.2218139e-03, -5.9034242e-03, -1.0122301e-04,
        2.6109096e-04,  7.6490161e-03,  1.5273532e-04, -2.3830291e-03,
       -2.9153156e-03,  1.0055281e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3563594e-05, -8.2549501e-05, -3.5329646e-04,  2.7288876e-05,
        4.4717497e-04,  1.1606335e-04,  1.9603838e-05, -6.9662849e-05,
       -1.0119509e-04, -1.6966656e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2348962e-05, -3.0540340e-04,  2.0189032e-04, -1.6385541e-04,
        1.0180901e-04, -1.3371675e-04, -1.2469630e-05,  4.3798384e-04,
        8.3562198e-05, -1.9743269e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.3229621e-05,  5.0742048e-05, -3.5110803e-05, -1.2470457e-04,
        2.9952257e-04,  1.1406234e-03, -5.5403209e-05, -1.5001118e-04,
       -9.9620293e-04, -2.1267685e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6090498e-05, -3.1595817e-03, -1.4839997e-04,  1.9769873e-03,
        1.7970285e-04,  7.8942881e-05, -1.7837789e-05,  9.0273295e-04,
        1.3900606e-03, -1.1164692e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.5060679e-05,  5.2215048e-04,  6.9291804e-05, -7.4389398e-05,
        7.5128875e-05, -4.1377785e-05,  5.6621895e-05, -1.9024148e-04,
       -9.7254582e-04,  5.2032131e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0094541e-05,  9.1236754e-05,  5.4310472e-06,  8.9005498e-06,
        7.8119692e-06, -2.9571447e-05, -4.5759211e-06,  1.5011092e-05,
        5.0578172e-05, -1.6490427e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0661338e-06,  3.9973649e-05,  2.2982758e-05, -5.1372794e-05,
        2.1441450e-05,  1.4970226e-04,  1.9860285e-05, -9.2746275e-05,
       -5.2247477e-05, -5.6518995e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.1137137e-05,  5.3019971e-06,  3.3999702e-05,  1.1048525e-05,
        3.9610403e-04, -8.1696213e-05, -3.0047371e-04,  1.6992252e-04,
       -1.2368620e-04, -6.9354057e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.4223264e-05,  1.9227471e-05, -3.0194455e-05,  4.0276107e-05,
       -4.9253056e-05, -1.7129130e-05,  5.4985037e-05, -8.6037221e-04,
        1.5209724e-06,  8.6517300e-04], dtype=float32)])]}
INFO flwr 2024-04-28 23:57:02,982 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-28 23:57:02,982 | app.py:229 | app_fit: losses_centralized [(0, 2.3026866912841797), (1, 1.7470990419387817), (2, 1.6714484691619873), (3, 1.5690218210220337), (4, 1.562572717666626), (5, 1.5567591190338135), (6, 1.5678268671035767), (7, 1.5538607835769653), (8, 1.5540709495544434), (9, 1.5527485609054565), (10, 1.5587536096572876)]
INFO flwr 2024-04-28 23:57:02,983 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1045), (1, 0.715), (2, 0.7879), (3, 0.8935), (4, 0.8983), (5, 0.9052), (6, 0.8934), (7, 0.9073), (8, 0.9067), (9, 0.9082), (10, 0.9024)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9024
wandb:     loss 1.55875
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_235231-b6z3fpjk
wandb: Find logs at: ./wandb/offline-run-20240428_235231-b6z3fpjk/logs
INFO flwr 2024-04-28 23:57:06,615 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-28 23:57:07,352 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1555855)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1555855)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-28 23:57:12,308	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-28 23:57:12,856	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-28 23:57:13,222	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-28 23:57:13,224	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-28 23:57:24,124 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 174231368295.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 78956300697.0}
INFO flwr 2024-04-28 23:57:24,125 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-28 23:57:24,125 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-28 23:57:24,144 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-28 23:57:24,145 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-28 23:57:24,145 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-28 23:57:24,145 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-28 23:57:27,351 | server.py:94 | initial parameters (loss, other metrics): 2.303633689880371, {'accuracy': 0.0891, 'data_size': 10000}
INFO flwr 2024-04-28 23:57:27,352 | server.py:104 | FL starting
DEBUG flwr 2024-04-28 23:57:27,352 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1559627)[0m 2024-04-28 23:57:30.222647: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1559627)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1559627)[0m 2024-04-28 23:57:32.500664: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1559623)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1559623)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1559619)[0m 2024-04-28 23:57:30.404477: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1559619)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1559619)[0m 2024-04-28 23:57:32.710012: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-28 23:58:04,019 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-28 23:58:05,575 | server.py:125 | fit progress: (1, 1.995622992515564, {'accuracy': 0.4555, 'data_size': 10000}, 38.22290437298943)
INFO flwr 2024-04-28 23:58:05,575 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-28 23:58:05,575 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:58:29,040 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-28 23:58:30,553 | server.py:125 | fit progress: (2, 1.666724443435669, {'accuracy': 0.7944, 'data_size': 10000}, 63.200514563999604)
INFO flwr 2024-04-28 23:58:30,553 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-28 23:58:30,553 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:58:52,304 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-28 23:58:53,823 | server.py:125 | fit progress: (3, 1.565582036972046, {'accuracy': 0.8949, 'data_size': 10000}, 86.47079824999673)
INFO flwr 2024-04-28 23:58:53,823 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-28 23:58:53,823 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:59:15,322 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-28 23:59:16,610 | server.py:125 | fit progress: (4, 1.5615180730819702, {'accuracy': 0.8995, 'data_size': 10000}, 109.25776584199048)
INFO flwr 2024-04-28 23:59:16,610 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-28 23:59:16,610 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-28 23:59:39,059 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-28 23:59:40,367 | server.py:125 | fit progress: (5, 1.5620969533920288, {'accuracy': 0.8986, 'data_size': 10000}, 133.01543229300296)
INFO flwr 2024-04-28 23:59:40,368 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-28 23:59:40,368 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:00:03,549 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:00:05,062 | server.py:125 | fit progress: (6, 1.5568768978118896, {'accuracy': 0.9037, 'data_size': 10000}, 157.71043925598497)
INFO flwr 2024-04-29 00:00:05,063 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:00:05,063 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:00:26,791 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:00:28,305 | server.py:125 | fit progress: (7, 1.5597375631332397, {'accuracy': 0.9007, 'data_size': 10000}, 180.95299976298702)
INFO flwr 2024-04-29 00:00:28,305 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:00:28,306 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:00:51,272 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:00:52,785 | server.py:125 | fit progress: (8, 1.5499684810638428, {'accuracy': 0.9105, 'data_size': 10000}, 205.4328584219911)
INFO flwr 2024-04-29 00:00:52,785 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:00:52,785 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:01:14,234 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:01:15,762 | server.py:125 | fit progress: (9, 1.550336480140686, {'accuracy': 0.9102, 'data_size': 10000}, 228.41031726598158)
INFO flwr 2024-04-29 00:01:15,763 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:01:15,763 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:01:37,504 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:01:39,095 | server.py:125 | fit progress: (10, 1.5569356679916382, {'accuracy': 0.9037, 'data_size': 10000}, 251.74256838700967)
INFO flwr 2024-04-29 00:01:39,095 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:01:39,095 | server.py:153 | FL finished in 251.74305105098756
INFO flwr 2024-04-29 00:01:39,095 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:01:39,103 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.5427739e-05, -2.2351739e-03, -3.7554910e-03,  1.9770344e-03,
        8.1786665e-04, -3.9533186e-03,  8.3787441e-03,  6.1892899e-04,
       -1.8194934e-03, -1.1450641e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1832544e-04, -1.4332299e-04, -3.1525731e-05, -1.4674355e-03,
       -6.9543254e-04,  1.5677970e-03, -9.4071677e-04, -7.5089629e-05,
        1.0982774e-03,  4.6915645e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.01470694e-04, -1.18582940e-03,  6.49991969e-04,  5.07852237e-04,
        1.22154795e-03,  6.53769937e-04, -1.33374007e-03, -1.03596738e-03,
        3.39203951e-04,  8.17200198e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.95171589e-05, -3.23811691e-04, -4.43102144e-05,  3.31821688e-03,
       -2.09710342e-04,  8.20128899e-03, -1.20863195e-04,  2.63332785e-03,
       -7.51254568e-03, -5.99108776e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.6374714e-04,  2.2089409e-04, -6.2622283e-05, -1.9919204e-03,
        5.4470864e-05,  4.9277255e-04, -5.1305123e-04, -1.0552441e-03,
        1.9929544e-03,  1.9801540e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1960278e-06,  6.2607537e-06,  1.9381694e-03, -1.8788589e-04,
        9.0642535e-04, -1.9463254e-03, -2.2412727e-04,  1.2897605e-04,
        9.6746939e-05, -7.1503146e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.9671570e-04, -6.2517334e-05,  7.4540917e-04,  1.3033967e-05,
        2.5690324e-03, -4.2948090e-05,  6.2164413e-06, -2.3349756e-04,
        4.1912799e-04, -3.2171309e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.0144962e-05,  1.0198732e-04,  4.0387972e-06, -8.9548746e-05,
        1.6213510e-04, -1.2628607e-06,  4.7926347e-05, -9.9351871e-07,
       -2.6253116e-05, -1.7786516e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1357152e-04, -7.6370625e-06, -5.5842153e-05, -9.2292830e-05,
       -5.6018001e-05,  1.9800962e-05,  2.6114800e-05, -4.1469280e-05,
       -2.1136925e-04,  2.0515651e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.1241783e-05, -1.3747995e-05, -2.5110281e-04, -1.7617428e-03,
        3.8942316e-04, -1.1182519e-05, -1.1928023e-04,  5.3920754e-04,
        1.5655211e-03, -2.8584228e-04], dtype=float32)])]}
INFO flwr 2024-04-29 00:01:39,103 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:01:39,103 | app.py:229 | app_fit: losses_centralized [(0, 2.303633689880371), (1, 1.995622992515564), (2, 1.666724443435669), (3, 1.565582036972046), (4, 1.5615180730819702), (5, 1.5620969533920288), (6, 1.5568768978118896), (7, 1.5597375631332397), (8, 1.5499684810638428), (9, 1.550336480140686), (10, 1.5569356679916382)]
INFO flwr 2024-04-29 00:01:39,103 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0891), (1, 0.4555), (2, 0.7944), (3, 0.8949), (4, 0.8995), (5, 0.8986), (6, 0.9037), (7, 0.9007), (8, 0.9105), (9, 0.9102), (10, 0.9037)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9037
wandb:     loss 1.55694
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240428_235706-f0x6cmll
wandb: Find logs at: ./wandb/offline-run-20240428_235706-f0x6cmll/logs
INFO flwr 2024-04-29 00:01:42,747 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:01:43,462 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1559612)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1559612)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:01:48,327	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:01:48,690	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:01:49,027	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:01:49,029	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:01:59,982 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'CPU': 64.0, 'object_store_memory': 78952556544.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 174222631936.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 00:01:59,982 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:01:59,982 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:02:00,000 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:02:00,003 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:02:00,003 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:02:00,004 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:02:02,705 | server.py:94 | initial parameters (loss, other metrics): 2.3023431301116943, {'accuracy': 0.0648, 'data_size': 10000}
INFO flwr 2024-04-29 00:02:02,706 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:02:02,706 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1563398)[0m 2024-04-29 00:02:06.064838: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1563398)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1563398)[0m 2024-04-29 00:02:08.340348: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1563405)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1563405)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1563403)[0m 2024-04-29 00:02:06.333664: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1563403)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1563403)[0m 2024-04-29 00:02:08.808429: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:02:41,218 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:02:42,775 | server.py:125 | fit progress: (1, 1.9550765752792358, {'accuracy': 0.5048, 'data_size': 10000}, 40.068858074984746)
INFO flwr 2024-04-29 00:02:42,775 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:02:42,776 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:03:04,157 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:03:05,650 | server.py:125 | fit progress: (2, 1.765391230583191, {'accuracy': 0.6932, 'data_size': 10000}, 62.94405153498519)
INFO flwr 2024-04-29 00:03:05,651 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:03:05,651 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:03:28,896 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:03:30,434 | server.py:125 | fit progress: (3, 1.5906720161437988, {'accuracy': 0.8695, 'data_size': 10000}, 87.72795013099676)
INFO flwr 2024-04-29 00:03:30,435 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:03:30,435 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:03:53,169 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:03:54,458 | server.py:125 | fit progress: (4, 1.575907588005066, {'accuracy': 0.8846, 'data_size': 10000}, 111.75127948599402)
INFO flwr 2024-04-29 00:03:54,458 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:03:54,458 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:04:16,670 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:04:17,984 | server.py:125 | fit progress: (5, 1.5770536661148071, {'accuracy': 0.8837, 'data_size': 10000}, 135.27759969199542)
INFO flwr 2024-04-29 00:04:17,984 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:04:17,984 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:04:40,995 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:04:42,480 | server.py:125 | fit progress: (6, 1.5681668519973755, {'accuracy': 0.8925, 'data_size': 10000}, 159.7736399039859)
INFO flwr 2024-04-29 00:04:42,480 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:04:42,480 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:05:06,707 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:05:08,207 | server.py:125 | fit progress: (7, 1.5703058242797852, {'accuracy': 0.8903, 'data_size': 10000}, 185.50031874899287)
INFO flwr 2024-04-29 00:05:08,207 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:05:08,207 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:05:29,365 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:05:30,882 | server.py:125 | fit progress: (8, 1.5577924251556396, {'accuracy': 0.9019, 'data_size': 10000}, 208.1759388729988)
INFO flwr 2024-04-29 00:05:30,882 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:05:30,883 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:05:54,780 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:05:56,290 | server.py:125 | fit progress: (9, 1.5545464754104614, {'accuracy': 0.9056, 'data_size': 10000}, 233.58374366597855)
INFO flwr 2024-04-29 00:05:56,290 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:05:56,291 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:06:18,375 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:06:19,669 | server.py:125 | fit progress: (10, 1.5532920360565186, {'accuracy': 0.9067, 'data_size': 10000}, 256.96226293197833)
INFO flwr 2024-04-29 00:06:19,669 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:06:19,669 | server.py:153 | FL finished in 256.96269527898403
INFO flwr 2024-04-29 00:06:19,669 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:06:19,677 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.6237408e-03, -1.5256067e-03, -4.5301276e-04, -4.4699473e-04,
       -8.6814128e-03,  4.6055047e-05,  1.4053746e-02,  1.6681767e-04,
        1.6818568e-04,  6.2959692e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00098878,  0.00115061, -0.00040735,  0.00033526, -0.00351016,
       -0.00197994,  0.00017394,  0.0039654 ,  0.00019686, -0.00091339],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00691323, -0.00197469, -0.00442812,  0.01906839, -0.00303854,
        0.00630223,  0.00627342, -0.00099914, -0.0121673 , -0.00212303],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1455464e-04, -1.0509318e-05,  1.0958206e-03,  2.8641685e-03,
        9.1584766e-04,  6.1285764e-04,  3.3355082e-05, -4.4105717e-04,
       -4.3358649e-03, -8.4917585e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.0490561e-05,  1.3022424e-06, -2.2393010e-04,  1.0200278e-03,
        2.2597576e-03, -4.0107846e-04,  4.3311511e-04, -6.6467532e-04,
       -3.0251360e-03,  6.7112123e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.3958224e-04, -6.4547459e-04, -9.4044465e-04, -7.6670889e-03,
       -1.8034419e-03,  2.6891038e-03,  8.0036058e-05,  8.9501627e-03,
       -6.9812090e-06, -4.1627861e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0005608 ,  0.00040647, -0.00033274, -0.00893017,  0.00386041,
        0.00904661,  0.00072117,  0.00038129, -0.00663516,  0.00092131],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.3160369e-05,  5.3425421e-05,  1.3262500e-03,  6.8356137e-04,
       -1.1792497e-03, -2.0380248e-03, -9.3138381e-04, -7.6799020e-05,
        1.7730917e-03,  3.2596884e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.5258647e-04,  1.7440577e-04,  5.1867223e-04,  1.1818918e-04,
       -8.0402201e-04, -1.0501504e-03,  4.6318292e-04, -5.3764044e-05,
       -1.2689825e-04, -9.2196758e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.09784950e-04, -1.17481824e-04, -6.08720147e-05,  6.09598449e-03,
        2.91081087e-04,  3.18768580e-04, -4.44868725e-04, -6.41963677e-03,
       -3.50408867e-04,  8.97232385e-04], dtype=float32)])]}
INFO flwr 2024-04-29 00:06:19,677 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:06:19,677 | app.py:229 | app_fit: losses_centralized [(0, 2.3023431301116943), (1, 1.9550765752792358), (2, 1.765391230583191), (3, 1.5906720161437988), (4, 1.575907588005066), (5, 1.5770536661148071), (6, 1.5681668519973755), (7, 1.5703058242797852), (8, 1.5577924251556396), (9, 1.5545464754104614), (10, 1.5532920360565186)]
INFO flwr 2024-04-29 00:06:19,677 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0648), (1, 0.5048), (2, 0.6932), (3, 0.8695), (4, 0.8846), (5, 0.8837), (6, 0.8925), (7, 0.8903), (8, 0.9019), (9, 0.9056), (10, 0.9067)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9067
wandb:     loss 1.55329
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_000143-llx9aed8
wandb: Find logs at: ./wandb/offline-run-20240429_000143-llx9aed8/logs
INFO flwr 2024-04-29 00:06:23,300 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:06:24,066 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1563398)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1563398)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:06:28,694	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:06:29,055	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:06:29,442	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:06:29,444	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:06:40,427 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78972157132.0, 'node:10.20.240.13': 1.0, 'memory': 174268366644.0, 'node:__internal_head__': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 00:06:40,427 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:06:40,427 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:06:40,445 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:06:40,446 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:06:40,446 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:06:40,447 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:06:44,223 | server.py:94 | initial parameters (loss, other metrics): 2.303743839263916, {'accuracy': 0.0817, 'data_size': 10000}
INFO flwr 2024-04-29 00:06:44,224 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:06:44,225 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1566874)[0m 2024-04-29 00:06:46.550672: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1566874)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1566874)[0m 2024-04-29 00:06:48.848501: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1566875)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1566875)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1566868)[0m 2024-04-29 00:06:46.736776: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1566868)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1566870)[0m 2024-04-29 00:06:48.934005: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:07:50,811 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:07:52,331 | server.py:125 | fit progress: (1, 1.6879990100860596, {'accuracy': 0.7959, 'data_size': 10000}, 68.10613880099845)
INFO flwr 2024-04-29 00:07:52,331 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:07:52,331 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:08:45,621 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:08:47,133 | server.py:125 | fit progress: (2, 1.588226556777954, {'accuracy': 0.887, 'data_size': 10000}, 122.90849768399494)
INFO flwr 2024-04-29 00:08:47,134 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:08:47,134 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:09:37,623 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:09:39,164 | server.py:125 | fit progress: (3, 1.5675448179244995, {'accuracy': 0.9024, 'data_size': 10000}, 174.93978832798894)
INFO flwr 2024-04-29 00:09:39,164 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:09:39,165 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:10:27,158 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:10:28,436 | server.py:125 | fit progress: (4, 1.5718411207199097, {'accuracy': 0.8957, 'data_size': 10000}, 224.21137981698848)
INFO flwr 2024-04-29 00:10:28,436 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:10:28,436 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:11:16,237 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:11:17,527 | server.py:125 | fit progress: (5, 1.566379427909851, {'accuracy': 0.9008, 'data_size': 10000}, 273.3026359299838)
INFO flwr 2024-04-29 00:11:17,527 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:11:17,528 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:12:06,770 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:12:08,286 | server.py:125 | fit progress: (6, 1.5568856000900269, {'accuracy': 0.9094, 'data_size': 10000}, 324.061863009003)
INFO flwr 2024-04-29 00:12:08,287 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:12:08,287 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:12:58,514 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:13:00,016 | server.py:125 | fit progress: (7, 1.5613759756088257, {'accuracy': 0.9062, 'data_size': 10000}, 375.79125122199184)
INFO flwr 2024-04-29 00:13:00,016 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:13:00,016 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:13:52,410 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:13:53,940 | server.py:125 | fit progress: (8, 1.5534141063690186, {'accuracy': 0.9138, 'data_size': 10000}, 429.71512391298893)
INFO flwr 2024-04-29 00:13:53,940 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:13:53,940 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:14:42,510 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:14:44,032 | server.py:125 | fit progress: (9, 1.5542809963226318, {'accuracy': 0.913, 'data_size': 10000}, 479.80734403498354)
INFO flwr 2024-04-29 00:14:44,032 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:14:44,032 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:15:38,505 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:15:39,790 | server.py:125 | fit progress: (10, 1.557468056678772, {'accuracy': 0.9081, 'data_size': 10000}, 535.5653351119836)
INFO flwr 2024-04-29 00:15:39,790 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:15:39,790 | server.py:153 | FL finished in 535.5657398669864
INFO flwr 2024-04-29 00:15:39,790 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:15:39,798 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.6018398e-05, -1.6702722e-04, -9.7642660e-05, -4.4441174e-04,
        2.0240215e-03, -1.4509016e-03, -2.5194429e-04,  1.5387412e-05,
        1.0297808e-03, -7.3326152e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00051069, -0.0002875 ,  0.0006143 ,  0.00050965,  0.00122259,
       -0.00014266, -0.00022042, -0.00045901,  0.00051781, -0.00124401],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1116573e-04,  2.7153656e-04,  1.8081296e-04, -6.8458397e-04,
        9.1400015e-04,  1.5301183e-04, -7.6452474e-05,  4.6174278e-04,
        6.5354674e-05, -1.5965506e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.57627471e-05,  1.02336555e-04, -1.85075929e-04,  1.34785322e-03,
        9.14954930e-04,  2.99972980e-05, -2.73372250e-04, -1.90451829e-04,
       -6.57658093e-04, -1.06274220e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.16346767e-05, -4.44438105e-04, -1.84561759e-05,  2.10477578e-04,
        5.37501241e-04,  4.26541723e-04, -5.52230049e-04, -4.45194426e-04,
        1.04611448e-04,  1.09594424e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0085886e-04,  1.1692124e-05, -1.9021796e-05,  7.8413310e-04,
        7.4085768e-04, -7.5187488e-04, -2.5101574e-04, -3.9237511e-04,
        1.8962559e-04, -4.1288399e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4989119e-04,  4.3531999e-04,  4.5960711e-04,  7.2288400e-05,
        9.3917176e-04,  4.5248884e-04,  1.9997971e-04, -5.9656337e-05,
       -9.5434947e-04, -1.3949121e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.9073806e-05, -3.1117932e-04, -3.9879892e-06,  2.3559513e-05,
        4.2353891e-04,  5.7584984e-04, -2.4734432e-04,  1.7731651e-04,
        2.0166700e-04, -8.8843453e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.1009702e-05, -1.0871943e-04,  1.5479680e-05, -1.7907124e-04,
        5.2030635e-04,  4.1527956e-04, -1.0950770e-05,  6.4201019e-04,
       -4.9808720e-04, -7.5518666e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7577115e-05, -2.2254213e-04,  1.4656679e-04,  2.9164908e-04,
        4.4089532e-04,  2.4045160e-04,  2.8257489e-05,  3.7456412e-04,
       -1.8852662e-04, -1.1788753e-03], dtype=float32)])]}
INFO flwr 2024-04-29 00:15:39,798 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:15:39,798 | app.py:229 | app_fit: losses_centralized [(0, 2.303743839263916), (1, 1.6879990100860596), (2, 1.588226556777954), (3, 1.5675448179244995), (4, 1.5718411207199097), (5, 1.566379427909851), (6, 1.5568856000900269), (7, 1.5613759756088257), (8, 1.5534141063690186), (9, 1.5542809963226318), (10, 1.557468056678772)]
INFO flwr 2024-04-29 00:15:39,798 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0817), (1, 0.7959), (2, 0.887), (3, 0.9024), (4, 0.8957), (5, 0.9008), (6, 0.9094), (7, 0.9062), (8, 0.9138), (9, 0.913), (10, 0.9081)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9081
wandb:     loss 1.55747
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_000623-tcmfxses
wandb: Find logs at: ./wandb/offline-run-20240429_000623-tcmfxses/logs
INFO flwr 2024-04-29 00:15:43,423 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:15:44,094 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1566866)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1566866)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:15:49,098	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:15:49,449	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:15:49,849	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:15:49,851	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:16:00,828 | app.py:213 | Flower VCE: Ray initialized with resources: {'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 174199066420.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 78942457036.0, 'node:__internal_head__': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 00:16:00,828 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:16:00,829 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:16:00,847 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:16:00,849 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:16:00,849 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:16:00,849 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:16:04,079 | server.py:94 | initial parameters (loss, other metrics): 2.302584409713745, {'accuracy': 0.1028, 'data_size': 10000}
INFO flwr 2024-04-29 00:16:04,079 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:16:04,079 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1571329)[0m 2024-04-29 00:16:06.895114: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1571329)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1571331)[0m 2024-04-29 00:16:09.236074: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1571332)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1571332)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1571333)[0m 2024-04-29 00:16:07.031937: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1571333)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1571322)[0m 2024-04-29 00:16:09.409649: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:17:10,851 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:17:12,330 | server.py:125 | fit progress: (1, 1.6819978952407837, {'accuracy': 0.8001, 'data_size': 10000}, 68.25085981501616)
INFO flwr 2024-04-29 00:17:12,330 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:17:12,331 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:18:08,230 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:18:09,750 | server.py:125 | fit progress: (2, 1.5911540985107422, {'accuracy': 0.8803, 'data_size': 10000}, 125.67050870100502)
INFO flwr 2024-04-29 00:18:09,750 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:18:09,750 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:19:03,332 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:19:04,861 | server.py:125 | fit progress: (3, 1.5653074979782104, {'accuracy': 0.9036, 'data_size': 10000}, 180.78156949402182)
INFO flwr 2024-04-29 00:19:04,861 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:19:04,861 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:19:54,277 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:19:55,604 | server.py:125 | fit progress: (4, 1.5639655590057373, {'accuracy': 0.9033, 'data_size': 10000}, 231.52484294801252)
INFO flwr 2024-04-29 00:19:55,604 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:19:55,605 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:20:45,626 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:20:46,907 | server.py:125 | fit progress: (5, 1.557690978050232, {'accuracy': 0.9096, 'data_size': 10000}, 282.8276443820214)
INFO flwr 2024-04-29 00:20:46,907 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:20:46,908 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:21:36,360 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:21:37,878 | server.py:125 | fit progress: (6, 1.5581260919570923, {'accuracy': 0.9075, 'data_size': 10000}, 333.7985224639997)
INFO flwr 2024-04-29 00:21:37,878 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:21:37,878 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:22:29,918 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:22:31,429 | server.py:125 | fit progress: (7, 1.5569027662277222, {'accuracy': 0.9083, 'data_size': 10000}, 387.3494351739937)
INFO flwr 2024-04-29 00:22:31,429 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:22:31,429 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:23:24,279 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:23:25,773 | server.py:125 | fit progress: (8, 1.5745941400527954, {'accuracy': 0.8908, 'data_size': 10000}, 441.693197140994)
INFO flwr 2024-04-29 00:23:25,773 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:23:25,773 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:24:17,981 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:24:19,497 | server.py:125 | fit progress: (9, 1.5596122741699219, {'accuracy': 0.9052, 'data_size': 10000}, 495.4174126080179)
INFO flwr 2024-04-29 00:24:19,497 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:24:19,497 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:25:09,456 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:25:10,746 | server.py:125 | fit progress: (10, 1.574223279953003, {'accuracy': 0.8903, 'data_size': 10000}, 546.6666711940197)
INFO flwr 2024-04-29 00:25:10,746 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:25:10,746 | server.py:153 | FL finished in 546.6671005120152
INFO flwr 2024-04-29 00:25:10,747 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:25:10,752 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00125754,  0.00198227, -0.00032507, -0.00132727,  0.0003888 ,
        0.00092521, -0.00062019, -0.00627276,  0.0005043 ,  0.00348721],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.5701988e-05,  4.1902109e-04, -3.3366359e-05,  4.0924360e-04,
        4.5868810e-04, -3.9517003e-04,  7.4103627e-05, -4.1145648e-04,
       -7.1922404e-04,  1.2250053e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0925413e-04,  2.5695731e-04,  1.9775507e-04,  1.8340573e-04,
        2.2611397e-04,  5.1429769e-04, -1.8520461e-04, -2.0879859e-05,
       -4.8222602e-04, -5.8088440e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.27984152e-05, -3.03810288e-04,  1.00086996e-04,  1.63347999e-04,
        7.86453893e-04,  1.49037733e-04, -4.04271304e-06, -5.69673011e-06,
       -1.42343313e-04, -6.70170004e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1945523e-04,  6.1435494e-06, -8.7983783e-05, -2.6717325e-04,
        4.8238269e-04,  4.4547376e-04, -1.4440581e-04,  2.4604052e-04,
        3.8868980e-05, -5.9979188e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4204506e-05,  2.3635419e-04, -1.1357606e-04,  5.8868201e-04,
        8.7273109e-04,  4.0401708e-05, -6.3669031e-05, -2.4600577e-04,
       -5.4702599e-04, -7.9201546e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1800588e-04, -5.8477330e-05, -1.7112090e-05,  5.5493385e-04,
        4.7122105e-04, -5.5487832e-04, -1.4292827e-04, -8.1290797e-05,
        4.6581769e-04, -7.5522595e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4944989e-05,  2.7869816e-04, -4.1191470e-05, -6.5736669e-05,
        5.4758292e-04,  2.6632409e-04,  8.9499401e-05,  1.8656210e-05,
       -3.1906588e-04, -7.9966977e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.8879956e-05,  2.0869203e-04,  2.4466630e-04,  6.0342009e-05,
        5.7631492e-04,  2.5942834e-04, -2.4493247e-05, -1.0084112e-04,
       -6.6987338e-04, -5.0530175e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0538671e-05, -8.4542684e-05,  8.7902015e-05,  6.7170702e-05,
        9.8497840e-04,  1.0104790e-04, -3.5994293e-04, -3.3496646e-04,
       -2.5173686e-06, -4.2853775e-04], dtype=float32)])]}
INFO flwr 2024-04-29 00:25:10,752 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:25:10,752 | app.py:229 | app_fit: losses_centralized [(0, 2.302584409713745), (1, 1.6819978952407837), (2, 1.5911540985107422), (3, 1.5653074979782104), (4, 1.5639655590057373), (5, 1.557690978050232), (6, 1.5581260919570923), (7, 1.5569027662277222), (8, 1.5745941400527954), (9, 1.5596122741699219), (10, 1.574223279953003)]
INFO flwr 2024-04-29 00:25:10,753 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1028), (1, 0.8001), (2, 0.8803), (3, 0.9036), (4, 0.9033), (5, 0.9096), (6, 0.9075), (7, 0.9083), (8, 0.8908), (9, 0.9052), (10, 0.8903)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8903
wandb:     loss 1.57422
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_001543-jfbh0g83
wandb: Find logs at: ./wandb/offline-run-20240429_001543-jfbh0g83/logs
INFO flwr 2024-04-29 00:25:14,419 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:25:15,147 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1571322)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1571322)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:25:20,041	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:25:20,398	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:25:20,861	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:25:20,862	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:25:31,791 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'memory': 174162139751.0, 'node:10.20.240.13': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0, 'object_store_memory': 78926631321.0}
INFO flwr 2024-04-29 00:25:31,791 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:25:31,791 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:25:31,810 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:25:31,811 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:25:31,811 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:25:31,811 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:25:35,520 | server.py:94 | initial parameters (loss, other metrics): 2.3018460273742676, {'accuracy': 0.0899, 'data_size': 10000}
INFO flwr 2024-04-29 00:25:35,521 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:25:35,521 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1575769)[0m 2024-04-29 00:25:37.859537: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1575769)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1575771)[0m 2024-04-29 00:25:40.138603: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1575775)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1575775)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1575773)[0m 2024-04-29 00:25:38.270776: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1575773)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1575773)[0m 2024-04-29 00:25:40.546439: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:26:36,936 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:26:38,463 | server.py:125 | fit progress: (1, 1.7415066957473755, {'accuracy': 0.7198, 'data_size': 10000}, 62.942409668001346)
INFO flwr 2024-04-29 00:26:38,463 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:26:38,464 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:27:30,425 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:27:31,890 | server.py:125 | fit progress: (2, 1.6095004081726074, {'accuracy': 0.8537, 'data_size': 10000}, 116.36914188202354)
INFO flwr 2024-04-29 00:27:31,890 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:27:31,890 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:28:27,146 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:28:28,668 | server.py:125 | fit progress: (3, 1.5714062452316284, {'accuracy': 0.8929, 'data_size': 10000}, 173.14746975401067)
INFO flwr 2024-04-29 00:28:28,669 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:28:28,669 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:29:16,117 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:29:17,391 | server.py:125 | fit progress: (4, 1.5574936866760254, {'accuracy': 0.9063, 'data_size': 10000}, 221.86981831802404)
INFO flwr 2024-04-29 00:29:17,391 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:29:17,391 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:30:11,484 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:30:12,743 | server.py:125 | fit progress: (5, 1.5544668436050415, {'accuracy': 0.9076, 'data_size': 10000}, 277.221749504999)
INFO flwr 2024-04-29 00:30:12,743 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:30:12,743 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:31:04,302 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:31:05,814 | server.py:125 | fit progress: (6, 1.5509843826293945, {'accuracy': 0.9113, 'data_size': 10000}, 330.29303555801744)
INFO flwr 2024-04-29 00:31:05,814 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:31:05,814 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:31:56,941 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:31:58,455 | server.py:125 | fit progress: (7, 1.5754289627075195, {'accuracy': 0.8856, 'data_size': 10000}, 382.93396787700476)
INFO flwr 2024-04-29 00:31:58,455 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:31:58,455 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:32:53,672 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:32:55,149 | server.py:125 | fit progress: (8, 1.5555100440979004, {'accuracy': 0.9065, 'data_size': 10000}, 439.62793355601025)
INFO flwr 2024-04-29 00:32:55,149 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:32:55,149 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:33:45,784 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:33:47,274 | server.py:125 | fit progress: (9, 1.5528452396392822, {'accuracy': 0.9098, 'data_size': 10000}, 491.7530833440251)
INFO flwr 2024-04-29 00:33:47,274 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:33:47,274 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:34:37,975 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:34:39,233 | server.py:125 | fit progress: (10, 1.5530188083648682, {'accuracy': 0.9089, 'data_size': 10000}, 543.7126408340118)
INFO flwr 2024-04-29 00:34:39,234 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:34:39,234 | server.py:153 | FL finished in 543.7130639320239
INFO flwr 2024-04-29 00:34:39,234 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:34:39,239 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00024297, -0.00194438,  0.00159013,  0.00059275, -0.00546889,
       -0.00112063,  0.00011934,  0.00176067,  0.00107653,  0.00363766],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.6124443e-06,  7.0156020e-05,  2.0837317e-04, -3.2920649e-04,
        1.7551830e-04,  2.6841072e-04,  2.8591827e-05, -5.2256557e-05,
       -2.9679271e-04, -8.0285936e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.06090465e-05, -6.31322619e-05, -1.18507851e-04, -5.09585007e-05,
        2.08134312e-04,  1.34128335e-04,  3.87206055e-05, -8.37420448e-05,
       -3.14787503e-05, -4.36227747e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4760598e-04, -3.0044406e-05,  8.2587103e-05, -1.2214446e-06,
        6.8199653e-05,  1.1850063e-04, -7.8954465e-05, -3.9279772e-04,
        2.3961210e-04,  1.4182295e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1606227e-04,  5.8998103e-05,  2.8448654e-04, -1.6429785e-05,
        4.2586503e-04,  3.4559966e-05, -3.6230823e-04,  8.2728331e-04,
       -1.0874273e-03, -4.8888462e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.3697026e-05, -7.4538082e-05,  1.7389710e-04,  2.3834649e-05,
       -2.6845782e-05, -2.7977932e-05,  7.9652636e-05, -4.1299246e-04,
       -2.1358489e-04,  5.3234946e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.8581114e-05, -4.4006305e-05, -7.1300718e-05,  1.4051364e-04,
        1.7235799e-04, -1.2357680e-04,  8.7903863e-05, -2.9354846e-05,
        2.9863691e-05, -2.1092621e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.75206980e-05,  4.89305057e-05,  8.70014919e-05,  4.82683981e-06,
        9.70512774e-05, -1.85500303e-05, -8.06904518e-06,  1.42542194e-05,
       -6.08556838e-05, -1.16992145e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.27789091e-05, -1.53850066e-04,  1.06400075e-04, -2.29993224e-04,
       -3.08988878e-04, -8.36543622e-05, -3.78276491e-05,  9.47669614e-05,
        3.79404431e-04,  1.91039304e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.85904808e-06,  7.28556843e-05,  1.13557464e-04,  1.50429551e-04,
        1.19713899e-04, -1.57596471e-04, -2.14275351e-05, -9.19333761e-05,
       -2.48385659e-05, -1.70556246e-04], dtype=float32)])]}
INFO flwr 2024-04-29 00:34:39,240 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:34:39,240 | app.py:229 | app_fit: losses_centralized [(0, 2.3018460273742676), (1, 1.7415066957473755), (2, 1.6095004081726074), (3, 1.5714062452316284), (4, 1.5574936866760254), (5, 1.5544668436050415), (6, 1.5509843826293945), (7, 1.5754289627075195), (8, 1.5555100440979004), (9, 1.5528452396392822), (10, 1.5530188083648682)]
INFO flwr 2024-04-29 00:34:39,240 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0899), (1, 0.7198), (2, 0.8537), (3, 0.8929), (4, 0.9063), (5, 0.9076), (6, 0.9113), (7, 0.8856), (8, 0.9065), (9, 0.9098), (10, 0.9089)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9089
wandb:     loss 1.55302
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_002514-y33szvqw
wandb: Find logs at: ./wandb/offline-run-20240429_002514-y33szvqw/logs
INFO flwr 2024-04-29 00:34:42,851 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:34:43,575 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1575766)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1575766)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:34:48,435	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:34:48,790	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:34:49,127	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:34:49,129	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:35:00,092 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78889301606.0, 'CPU': 64.0, 'memory': 174075037082.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 00:35:00,092 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:35:00,092 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:35:00,114 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:35:00,115 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:35:00,115 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:35:00,116 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:35:04,574 | server.py:94 | initial parameters (loss, other metrics): 2.3045008182525635, {'accuracy': 0.0786, 'data_size': 10000}
INFO flwr 2024-04-29 00:35:04,574 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:35:04,574 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1580188)[0m 2024-04-29 00:35:06.025817: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1580188)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1580185)[0m 2024-04-29 00:35:08.302910: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1580185)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1580185)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1580186)[0m 2024-04-29 00:35:06.307941: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1580186)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1580186)[0m 2024-04-29 00:35:08.703814: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:36:07,310 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:36:08,828 | server.py:125 | fit progress: (1, 1.6477181911468506, {'accuracy': 0.8285, 'data_size': 10000}, 64.25377613599994)
INFO flwr 2024-04-29 00:36:08,828 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:36:08,829 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:36:59,820 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:37:01,346 | server.py:125 | fit progress: (2, 1.5785340070724487, {'accuracy': 0.891, 'data_size': 10000}, 116.77119257699815)
INFO flwr 2024-04-29 00:37:01,346 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:37:01,346 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:37:56,883 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:37:58,411 | server.py:125 | fit progress: (3, 1.5726783275604248, {'accuracy': 0.8952, 'data_size': 10000}, 173.83712925898726)
INFO flwr 2024-04-29 00:37:58,412 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:37:58,412 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:38:50,742 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:38:52,039 | server.py:125 | fit progress: (4, 1.5592697858810425, {'accuracy': 0.9068, 'data_size': 10000}, 227.4648528379912)
INFO flwr 2024-04-29 00:38:52,040 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:38:52,040 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:39:46,701 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:39:48,012 | server.py:125 | fit progress: (5, 1.5620392560958862, {'accuracy': 0.9013, 'data_size': 10000}, 283.437441201997)
INFO flwr 2024-04-29 00:39:48,012 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:39:48,012 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:40:37,486 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:40:39,063 | server.py:125 | fit progress: (6, 1.5538743734359741, {'accuracy': 0.9107, 'data_size': 10000}, 334.4888213640079)
INFO flwr 2024-04-29 00:40:39,063 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:40:39,064 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:41:33,880 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:41:35,403 | server.py:125 | fit progress: (7, 1.5500644445419312, {'accuracy': 0.9136, 'data_size': 10000}, 390.8287349799939)
INFO flwr 2024-04-29 00:41:35,403 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:41:35,404 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:42:23,990 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:42:25,505 | server.py:125 | fit progress: (8, 1.5535237789154053, {'accuracy': 0.911, 'data_size': 10000}, 440.93097797600785)
INFO flwr 2024-04-29 00:42:25,506 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:42:25,506 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:43:16,396 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:43:17,915 | server.py:125 | fit progress: (9, 1.5827888250350952, {'accuracy': 0.8815, 'data_size': 10000}, 493.3408260520082)
INFO flwr 2024-04-29 00:43:17,915 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:43:17,916 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:44:08,105 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:44:09,394 | server.py:125 | fit progress: (10, 1.5555788278579712, {'accuracy': 0.9081, 'data_size': 10000}, 544.8198538389988)
INFO flwr 2024-04-29 00:44:09,394 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:44:09,395 | server.py:153 | FL finished in 544.8202947329846
INFO flwr 2024-04-29 00:44:09,395 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:44:09,400 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.22317940e-06,  3.85708932e-04,  1.62867800e-04,  2.46417494e-05,
       -9.97076277e-05, -2.75761820e-04, -5.91139215e-05, -1.33473595e-05,
       -8.90871161e-05, -4.53940993e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.7137942e-06,  2.2554846e-06, -2.4495942e-03, -1.3162696e-04,
        1.0252040e-03,  7.9455196e-05,  9.4182277e-04, -1.4173009e-03,
       -1.2727733e-06,  1.9424248e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.2682055e-05, -3.9230868e-05,  7.5273281e-05,  4.2373154e-04,
        5.7064736e-04,  1.3854921e-04, -4.5138213e-06,  2.4814304e-04,
       -5.9309677e-04, -8.7214023e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2798387e-05,  1.0812453e-04,  5.2493805e-04,  2.9762872e-04,
        2.3461453e-04, -3.9291324e-05, -4.6065412e-04, -2.0197897e-04,
        2.6728756e-05, -4.6726904e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.9077030e-05,  1.1018473e-06, -1.2838958e-04, -1.1723938e-04,
        4.7005211e-05,  2.8096096e-05,  1.4509893e-05,  3.7300262e-05,
        1.8613979e-04, -8.7541819e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.1185277e-05,  3.2712294e-05,  9.0209476e-05, -9.5574083e-05,
        9.5292657e-05,  1.6941369e-04,  9.2319897e-05, -6.5403055e-06,
       -2.7485244e-04, -3.1774965e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.5355247e-06, -5.8765054e-05,  9.0386304e-05, -2.0290110e-05,
        2.2548920e-04,  1.4035677e-04, -1.5210713e-05,  4.6597292e-05,
       -1.8906443e-04, -2.2698293e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.07192885e-05,  1.16120376e-04, -5.12252627e-05, -1.01032500e-04,
        8.94337863e-05,  3.39229213e-04,  5.48538665e-05,  1.20621502e-04,
       -5.32832928e-04, -1.05826010e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.9131966e-05, -1.5995304e-04, -1.2491483e-05, -1.7054044e-05,
        3.9609431e-04,  1.9375140e-04, -3.2537719e-05,  1.9069522e-04,
       -2.7061085e-04, -2.4870207e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.12611897e-04,  1.44629885e-05, -1.15378054e-04,  1.79381299e-04,
       -1.63434015e-05, -4.24070713e-05, -2.82137305e-04, -1.85469165e-04,
        1.40761142e-04, -5.45094099e-06], dtype=float32)])]}
INFO flwr 2024-04-29 00:44:09,400 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:44:09,401 | app.py:229 | app_fit: losses_centralized [(0, 2.3045008182525635), (1, 1.6477181911468506), (2, 1.5785340070724487), (3, 1.5726783275604248), (4, 1.5592697858810425), (5, 1.5620392560958862), (6, 1.5538743734359741), (7, 1.5500644445419312), (8, 1.5535237789154053), (9, 1.5827888250350952), (10, 1.5555788278579712)]
INFO flwr 2024-04-29 00:44:09,401 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0786), (1, 0.8285), (2, 0.891), (3, 0.8952), (4, 0.9068), (5, 0.9013), (6, 0.9107), (7, 0.9136), (8, 0.911), (9, 0.8815), (10, 0.9081)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9081
wandb:     loss 1.55558
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_003443-p3bjebpi
wandb: Find logs at: ./wandb/offline-run-20240429_003443-p3bjebpi/logs
INFO flwr 2024-04-29 00:44:13,035 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:44:13,715 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1580177)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1580177)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:44:18,582	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:44:18,955	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:44:19,296	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:44:19,297	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:44:30,242 | app.py:213 | Flower VCE: Ray initialized with resources: {'memory': 174143841280.0, 'node:10.20.240.13': 1.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78918789120.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-29 00:44:30,242 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:44:30,243 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:44:30,262 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:44:30,264 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:44:30,264 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:44:30,265 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:44:33,759 | server.py:94 | initial parameters (loss, other metrics): 2.3000147342681885, {'accuracy': 0.1103, 'data_size': 10000}
INFO flwr 2024-04-29 00:44:33,760 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:44:33,760 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1584992)[0m 2024-04-29 00:44:36.312290: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1584992)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1584995)[0m 2024-04-29 00:44:38.640188: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1584997)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1584997)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1585003)[0m 2024-04-29 00:44:36.490489: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1585003)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1584999)[0m 2024-04-29 00:44:38.715966: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:45:36,188 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:45:37,682 | server.py:125 | fit progress: (1, 1.7694036960601807, {'accuracy': 0.6948, 'data_size': 10000}, 63.921805860998575)
INFO flwr 2024-04-29 00:45:37,682 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:45:37,682 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:46:28,849 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:46:30,327 | server.py:125 | fit progress: (2, 1.6187912225723267, {'accuracy': 0.8452, 'data_size': 10000}, 116.56660826998996)
INFO flwr 2024-04-29 00:46:30,327 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:46:30,327 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:47:19,519 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:47:21,021 | server.py:125 | fit progress: (3, 1.5608890056610107, {'accuracy': 0.9022, 'data_size': 10000}, 167.26080904298578)
INFO flwr 2024-04-29 00:47:21,021 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:47:21,021 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:48:20,115 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:48:21,418 | server.py:125 | fit progress: (4, 1.5583488941192627, {'accuracy': 0.9047, 'data_size': 10000}, 227.6581211279845)
INFO flwr 2024-04-29 00:48:21,418 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:48:21,419 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:49:14,230 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:49:15,483 | server.py:125 | fit progress: (5, 1.5577806234359741, {'accuracy': 0.9057, 'data_size': 10000}, 281.7227915379917)
INFO flwr 2024-04-29 00:49:15,483 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:49:15,483 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:50:09,287 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:50:10,756 | server.py:125 | fit progress: (6, 1.5576285123825073, {'accuracy': 0.905, 'data_size': 10000}, 336.99596346900216)
INFO flwr 2024-04-29 00:50:10,756 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:50:10,756 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:51:07,260 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 00:51:08,751 | server.py:125 | fit progress: (7, 1.5622130632400513, {'accuracy': 0.9006, 'data_size': 10000}, 394.9911759099923)
INFO flwr 2024-04-29 00:51:08,752 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 00:51:08,752 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:52:01,184 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 00:52:02,676 | server.py:125 | fit progress: (8, 1.5567476749420166, {'accuracy': 0.9057, 'data_size': 10000}, 448.9163912549848)
INFO flwr 2024-04-29 00:52:02,677 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 00:52:02,677 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:52:57,323 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 00:52:58,846 | server.py:125 | fit progress: (9, 1.5478745698928833, {'accuracy': 0.915, 'data_size': 10000}, 505.0855062560004)
INFO flwr 2024-04-29 00:52:58,846 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 00:52:58,846 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:53:50,221 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 00:53:51,462 | server.py:125 | fit progress: (10, 1.5568288564682007, {'accuracy': 0.9055, 'data_size': 10000}, 557.7017790509854)
INFO flwr 2024-04-29 00:53:51,462 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 00:53:51,462 | server.py:153 | FL finished in 557.7022974569991
INFO flwr 2024-04-29 00:53:51,463 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 00:53:51,471 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00067376,  0.00011723,  0.00036734,  0.00011217,  0.0001564 ,
       -0.00062917,  0.00019241, -0.00331103, -0.00028918,  0.00395766],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.8174457e-05,  1.0754068e-04,  6.4258253e-05,  8.1148020e-05,
       -7.6890346e-06, -1.1416531e-04, -1.8548286e-05,  6.6576811e-04,
        5.3827138e-05, -7.7392929e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.36855989e-05, -6.04514753e-05, -5.12582628e-05, -1.16481817e-04,
        1.02708334e-04,  3.66298445e-05,  5.47621203e-05,  8.86437774e-05,
       -5.30677935e-05, -4.51137203e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.9373510e-05,  2.9743904e-05,  1.3634506e-04,  2.1572592e-04,
        2.9263448e-04, -2.3398458e-04,  5.6404442e-05, -1.2472873e-04,
        3.8188606e-05, -3.8089918e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.2042174e-07, -6.7123430e-05,  1.4423679e-04,  1.2714448e-04,
        1.0589479e-04, -2.3544404e-05, -9.2731694e-05, -1.4115722e-04,
        1.2011590e-04, -1.7319887e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4548319e-05, -2.8016075e-05,  6.0393919e-05,  1.2070687e-04,
        1.5170313e-04, -1.0882897e-05, -4.1545758e-05, -3.5833402e-06,
       -1.0960695e-04, -1.2457560e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.04762016e-07, -3.04057835e-06, -5.89051109e-04,  4.75908542e-04,
        3.66032851e-04, -4.81050782e-04,  3.09414405e-04,  7.47269441e-05,
       -3.78156947e-05, -1.14969960e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.41745495e-05,  2.50984231e-05,  1.76278063e-05, -1.79483250e-05,
        6.78583019e-05,  1.28964006e-04, -9.17049783e-06, -3.23484601e-05,
       -6.52149756e-05, -1.00672041e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.7708424e-05,  1.1485945e-05, -7.1429208e-06,  5.3689553e-05,
        8.7374010e-06,  2.7558583e-04, -1.0444576e-04,  2.9099067e-06,
        1.3639129e-04, -3.0943088e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3680533e-05,  6.5722721e-05,  9.9209145e-05, -4.3474451e-05,
        1.9720082e-04, -1.5028710e-05, -2.6931099e-05, -5.3835924e-05,
       -2.6008012e-04,  5.0930004e-05], dtype=float32)])]}
INFO flwr 2024-04-29 00:53:51,471 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 00:53:51,471 | app.py:229 | app_fit: losses_centralized [(0, 2.3000147342681885), (1, 1.7694036960601807), (2, 1.6187912225723267), (3, 1.5608890056610107), (4, 1.5583488941192627), (5, 1.5577806234359741), (6, 1.5576285123825073), (7, 1.5622130632400513), (8, 1.5567476749420166), (9, 1.5478745698928833), (10, 1.5568288564682007)]
INFO flwr 2024-04-29 00:53:51,472 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1103), (1, 0.6948), (2, 0.8452), (3, 0.9022), (4, 0.9047), (5, 0.9057), (6, 0.905), (7, 0.9006), (8, 0.9057), (9, 0.915), (10, 0.9055)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9055
wandb:     loss 1.55683
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_004413-mv1xupo1
wandb: Find logs at: ./wandb/offline-run-20240429_004413-mv1xupo1/logs
INFO flwr 2024-04-29 00:53:55,087 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 00:53:55,759 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1584989)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1584989)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 00:54:00,633	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 00:54:00,993	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 00:54:01,356	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 00:54:01,357	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 00:54:12,314 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'object_store_memory': 79010891366.0, 'node:10.20.240.13': 1.0, 'memory': 174358746522.0}
INFO flwr 2024-04-29 00:54:12,314 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 00:54:12,315 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 00:54:12,330 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 00:54:12,332 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 00:54:12,332 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 00:54:12,332 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 00:54:15,660 | server.py:94 | initial parameters (loss, other metrics): 2.3059470653533936, {'accuracy': 0.0799, 'data_size': 10000}
INFO flwr 2024-04-29 00:54:15,660 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 00:54:15,661 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1589418)[0m 2024-04-29 00:54:18.438977: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1589418)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1589421)[0m 2024-04-29 00:54:20.719437: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1589422)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1589422)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1589413)[0m 2024-04-29 00:54:18.699370: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1589413)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1589413)[0m 2024-04-29 00:54:20.929133: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 00:55:18,490 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 00:55:20,067 | server.py:125 | fit progress: (1, 1.772797703742981, {'accuracy': 0.6878, 'data_size': 10000}, 64.40630426100688)
INFO flwr 2024-04-29 00:55:20,067 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 00:55:20,067 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:56:07,157 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 00:56:08,655 | server.py:125 | fit progress: (2, 1.6124800443649292, {'accuracy': 0.8501, 'data_size': 10000}, 112.99438655900303)
INFO flwr 2024-04-29 00:56:08,655 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 00:56:08,655 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:57:02,271 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 00:57:03,863 | server.py:125 | fit progress: (3, 1.5807369947433472, {'accuracy': 0.8809, 'data_size': 10000}, 168.20298639300745)
INFO flwr 2024-04-29 00:57:03,864 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 00:57:03,864 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:57:55,087 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 00:57:56,386 | server.py:125 | fit progress: (4, 1.562187910079956, {'accuracy': 0.8988, 'data_size': 10000}, 220.72558271200978)
INFO flwr 2024-04-29 00:57:56,386 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 00:57:56,387 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:58:43,850 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 00:58:45,191 | server.py:125 | fit progress: (5, 1.5557923316955566, {'accuracy': 0.9053, 'data_size': 10000}, 269.53062636600225)
INFO flwr 2024-04-29 00:58:45,191 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 00:58:45,192 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 00:59:40,452 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 00:59:41,968 | server.py:125 | fit progress: (6, 1.5569120645523071, {'accuracy': 0.9038, 'data_size': 10000}, 326.30805740100914)
INFO flwr 2024-04-29 00:59:41,969 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 00:59:41,969 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:00:31,619 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:00:33,125 | server.py:125 | fit progress: (7, 1.556443214416504, {'accuracy': 0.9042, 'data_size': 10000}, 377.46446867100894)
INFO flwr 2024-04-29 01:00:33,125 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:00:33,125 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:01:25,735 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:01:27,256 | server.py:125 | fit progress: (8, 1.5573859214782715, {'accuracy': 0.9027, 'data_size': 10000}, 431.5954461049987)
INFO flwr 2024-04-29 01:01:27,256 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:01:27,256 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:02:20,984 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:02:22,535 | server.py:125 | fit progress: (9, 1.5545144081115723, {'accuracy': 0.9073, 'data_size': 10000}, 486.8747114140133)
INFO flwr 2024-04-29 01:02:22,535 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:02:22,536 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:03:15,700 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:03:17,050 | server.py:125 | fit progress: (10, 1.5537949800491333, {'accuracy': 0.9068, 'data_size': 10000}, 541.3899540870043)
INFO flwr 2024-04-29 01:03:17,051 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:03:17,051 | server.py:153 | FL finished in 541.3903713489999
INFO flwr 2024-04-29 01:03:17,051 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:03:17,057 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5230165e-04,  1.3195516e-03,  1.7658390e-04, -1.0418219e-03,
       -1.1453554e-03, -1.2873187e-04, -1.1300189e-05,  2.3761598e-04,
        5.5101205e-04, -1.0982974e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.6179853e-06,  1.7999302e-03, -7.3567685e-04,  7.6408958e-04,
        6.8424566e-04, -2.3659840e-03, -4.3331482e-04,  3.1800213e-04,
       -1.2337809e-04,  8.3521059e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.8185622e-04,  1.3328120e-03,  1.8743967e-05,  4.9428281e-04,
        2.0309197e-04, -1.3682349e-03,  5.1222687e-06, -1.1212714e-04,
        1.2088473e-04, -4.1269165e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.9524980e-05,  2.2521654e-05,  2.7897599e-04, -3.3036899e-04,
       -2.5976749e-05, -1.3694988e-05, -5.6418986e-04, -1.5323027e-05,
        2.9722089e-04,  2.7135477e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.0839164e-05, -1.8120124e-06,  5.7475205e-04, -4.5818641e-05,
        1.4652468e-03, -8.3447143e-04,  1.0497597e-04, -1.5508725e-03,
        9.1439324e-05,  2.3745110e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4200404e-04, -1.3703759e-05,  1.5002493e-04,  1.6043393e-04,
       -8.3645200e-06, -1.1236453e-04,  1.9327392e-05, -2.4447480e-04,
       -3.0507599e-05, -6.2351901e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.04235834e-04,  9.64256760e-05,  5.46542055e-04, -8.49706994e-05,
        5.21567308e-05, -7.30547526e-07, -1.40804514e-05, -6.02173328e-04,
       -2.34482039e-04,  3.45569046e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.7786460e-04,  5.3900498e-04,  4.2323265e-04, -1.7198137e-04,
       -4.1159656e-05,  3.5305646e-05, -3.5459921e-05, -5.2217493e-04,
       -2.8820505e-04, -1.1638040e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0886913e-05, -9.0113372e-06,  3.3920907e-05, -1.0620540e-05,
        3.0505700e-05,  2.7979117e-05, -2.0368994e-05,  1.6713388e-04,
        7.3952426e-05, -3.0435508e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.2241371e-06,  1.8858218e-04,  3.6335850e-04,  2.5266924e-04,
        3.5288220e-04, -2.4262141e-04,  7.8809884e-05, -6.4595137e-05,
       -4.6611606e-04, -4.6816788e-04], dtype=float32)])]}
INFO flwr 2024-04-29 01:03:17,057 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:03:17,057 | app.py:229 | app_fit: losses_centralized [(0, 2.3059470653533936), (1, 1.772797703742981), (2, 1.6124800443649292), (3, 1.5807369947433472), (4, 1.562187910079956), (5, 1.5557923316955566), (6, 1.5569120645523071), (7, 1.556443214416504), (8, 1.5573859214782715), (9, 1.5545144081115723), (10, 1.5537949800491333)]
INFO flwr 2024-04-29 01:03:17,057 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0799), (1, 0.6878), (2, 0.8501), (3, 0.8809), (4, 0.8988), (5, 0.9053), (6, 0.9038), (7, 0.9042), (8, 0.9027), (9, 0.9073), (10, 0.9068)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9068
wandb:     loss 1.55379
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_005355-szd3hcr6
wandb: Find logs at: ./wandb/offline-run-20240429_005355-szd3hcr6/logs
INFO flwr 2024-04-29 01:03:20,679 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:03:21,318 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1589413)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1589413)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:03:26,155	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:03:26,519	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:03:26,925	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:03:26,927	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:03:37,882 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79009631846.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 174355807642.0}
INFO flwr 2024-04-29 01:03:37,882 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:03:37,882 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:03:37,899 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:03:37,901 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:03:37,901 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:03:37,901 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:03:42,197 | server.py:94 | initial parameters (loss, other metrics): 2.300560235977173, {'accuracy': 0.1405, 'data_size': 10000}
INFO flwr 2024-04-29 01:03:42,197 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:03:42,197 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1593865)[0m 2024-04-29 01:03:44.025512: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1593865)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1593860)[0m 2024-04-29 01:03:46.222008: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1593865)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1593865)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1593866)[0m 2024-04-29 01:03:44.167305: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1593866)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1593866)[0m 2024-04-29 01:03:46.461466: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:04:47,506 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:04:49,027 | server.py:125 | fit progress: (1, 1.6839666366577148, {'accuracy': 0.7832, 'data_size': 10000}, 66.83018421698944)
INFO flwr 2024-04-29 01:04:49,028 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:04:49,028 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:05:39,202 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:05:40,711 | server.py:125 | fit progress: (2, 1.5754262208938599, {'accuracy': 0.8886, 'data_size': 10000}, 118.51374645999749)
INFO flwr 2024-04-29 01:05:40,711 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:05:40,711 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:06:31,475 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:06:32,983 | server.py:125 | fit progress: (3, 1.5709927082061768, {'accuracy': 0.8915, 'data_size': 10000}, 170.78617507300805)
INFO flwr 2024-04-29 01:06:32,984 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:06:32,984 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:07:22,695 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:07:23,994 | server.py:125 | fit progress: (4, 1.5662540197372437, {'accuracy': 0.8951, 'data_size': 10000}, 221.7965681059868)
INFO flwr 2024-04-29 01:07:23,994 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:07:23,994 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:08:17,816 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:08:19,108 | server.py:125 | fit progress: (5, 1.5573527812957764, {'accuracy': 0.9047, 'data_size': 10000}, 276.9111391970073)
INFO flwr 2024-04-29 01:08:19,109 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:08:19,109 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:09:14,107 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:09:15,622 | server.py:125 | fit progress: (6, 1.5553536415100098, {'accuracy': 0.9056, 'data_size': 10000}, 333.4250988959975)
INFO flwr 2024-04-29 01:09:15,623 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:09:15,623 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:10:07,075 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:10:08,617 | server.py:125 | fit progress: (7, 1.5499356985092163, {'accuracy': 0.9125, 'data_size': 10000}, 386.4200306510029)
INFO flwr 2024-04-29 01:10:08,618 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:10:08,618 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:11:00,903 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:11:02,403 | server.py:125 | fit progress: (8, 1.5540529489517212, {'accuracy': 0.9078, 'data_size': 10000}, 440.20560226298403)
INFO flwr 2024-04-29 01:11:02,403 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:11:02,403 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:11:58,371 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:11:59,908 | server.py:125 | fit progress: (9, 1.555050253868103, {'accuracy': 0.9069, 'data_size': 10000}, 497.7107738140039)
INFO flwr 2024-04-29 01:11:59,908 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:11:59,908 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:12:52,712 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:12:54,023 | server.py:125 | fit progress: (10, 1.5706433057785034, {'accuracy': 0.8898, 'data_size': 10000}, 551.8259267579997)
INFO flwr 2024-04-29 01:12:54,023 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:12:54,024 | server.py:153 | FL finished in 551.8264475759934
INFO flwr 2024-04-29 01:12:54,024 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:12:54,029 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.3747337e-03, -2.4085483e-03,  5.8605033e-04,  9.3829585e-05,
        1.6272976e-04,  2.1137947e-03, -4.5930789e-04,  6.1005536e-05,
        4.1164341e-03,  1.0878399e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.3348651e-04, -6.9028770e-06,  2.8719593e-05,  1.8399642e-05,
        7.4740958e-05, -1.1150484e-05, -4.2094380e-04, -2.7330083e-04,
        8.1497834e-05,  7.5495169e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1489407e-04,  4.3027449e-05, -1.9658582e-04,  2.7849699e-05,
       -7.1461982e-05,  1.0188337e-05,  1.9916608e-04, -7.1776805e-05,
       -5.4649572e-05, -1.0060890e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.6338179e-06,  2.7428898e-05, -1.4869046e-05, -1.3841045e-05,
        9.0272733e-05,  3.5365541e-05, -3.8385206e-05,  1.0439047e-06,
       -3.5730329e-05, -4.9624803e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.9333656e-07, -2.3840621e-06,  7.8264602e-06, -3.4738976e-05,
        5.5469023e-05,  3.7617268e-05, -5.4971888e-06,  2.6957670e-05,
       -5.2546588e-05, -3.3579501e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.3718319e-07,  4.9152590e-05, -4.4503452e-07,  1.3781752e-04,
        1.7348757e-05, -1.2805918e-04, -3.5120709e-06,  2.6932650e-05,
       -9.7096126e-05, -2.5507345e-06], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.2762238e-06, -2.1771697e-05,  2.3053794e-06,  1.9185276e-05,
        6.4023909e-05, -2.3076700e-05, -1.6121971e-06, -1.4965423e-05,
       -8.9016736e-05,  6.7221605e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1197316e-06,  4.2821557e-06, -8.9464747e-06,  4.6707578e-06,
        3.8901595e-05, -2.9822191e-05,  4.2693446e-06, -1.0498220e-05,
        1.5064965e-04, -1.5460406e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.52526976e-04,  1.12957696e-05, -2.77378203e-05, -2.71617628e-05,
       -2.32577557e-04, -6.74914918e-04,  2.10354003e-04,  1.90364899e-05,
       -4.47100283e-05,  1.39009335e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.09741825e-06, -1.81696942e-05,  6.52517701e-06, -1.91771487e-05,
        1.42885465e-05,  2.51029869e-05, -1.09146619e-07,  1.21865116e-06,
       -3.88334665e-05,  2.70770233e-05], dtype=float32)])]}
INFO flwr 2024-04-29 01:12:54,030 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:12:54,030 | app.py:229 | app_fit: losses_centralized [(0, 2.300560235977173), (1, 1.6839666366577148), (2, 1.5754262208938599), (3, 1.5709927082061768), (4, 1.5662540197372437), (5, 1.5573527812957764), (6, 1.5553536415100098), (7, 1.5499356985092163), (8, 1.5540529489517212), (9, 1.555050253868103), (10, 1.5706433057785034)]
INFO flwr 2024-04-29 01:12:54,030 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1405), (1, 0.7832), (2, 0.8886), (3, 0.8915), (4, 0.8951), (5, 0.9047), (6, 0.9056), (7, 0.9125), (8, 0.9078), (9, 0.9069), (10, 0.8898)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8898
wandb:     loss 1.57064
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_010320-4m4crmyc
wandb: Find logs at: ./wandb/offline-run-20240429_010320-4m4crmyc/logs
INFO flwr 2024-04-29 01:12:57,651 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:12:58,375 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1593859)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1593859)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:13:03,216	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:13:03,678	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:13:04,092	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:13:04,094	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:13:14,993 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 79017965568.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 174375252992.0}
INFO flwr 2024-04-29 01:13:14,993 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:13:14,993 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:13:15,011 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:13:15,012 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:13:15,012 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:13:15,012 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:13:18,232 | server.py:94 | initial parameters (loss, other metrics): 2.302933931350708, {'accuracy': 0.1035, 'data_size': 10000}
INFO flwr 2024-04-29 01:13:18,232 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:13:18,233 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1598641)[0m 2024-04-29 01:13:21.146808: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1598641)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1598641)[0m 2024-04-29 01:13:23.437131: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1598640)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1598640)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1598639)[0m 2024-04-29 01:13:21.339533: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1598639)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1598639)[0m 2024-04-29 01:13:23.608014: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:14:27,805 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:14:29,311 | server.py:125 | fit progress: (1, 1.7717013359069824, {'accuracy': 0.6908, 'data_size': 10000}, 71.0781760539976)
INFO flwr 2024-04-29 01:14:29,311 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:14:29,311 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:15:15,924 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:15:17,486 | server.py:125 | fit progress: (2, 1.5997411012649536, {'accuracy': 0.8624, 'data_size': 10000}, 119.25347148199216)
INFO flwr 2024-04-29 01:15:17,486 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:15:17,487 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:16:07,922 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:16:09,461 | server.py:125 | fit progress: (3, 1.5860092639923096, {'accuracy': 0.8749, 'data_size': 10000}, 171.22846681499504)
INFO flwr 2024-04-29 01:16:09,461 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:16:09,462 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:17:01,079 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:17:02,343 | server.py:125 | fit progress: (4, 1.5575926303863525, {'accuracy': 0.9037, 'data_size': 10000}, 224.110857888998)
INFO flwr 2024-04-29 01:17:02,344 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:17:02,344 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:17:52,358 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:17:53,659 | server.py:125 | fit progress: (5, 1.557248592376709, {'accuracy': 0.9037, 'data_size': 10000}, 275.4264600809838)
INFO flwr 2024-04-29 01:17:53,659 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:17:53,660 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:18:44,788 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:18:46,275 | server.py:125 | fit progress: (6, 1.5547308921813965, {'accuracy': 0.9069, 'data_size': 10000}, 328.0419468129985)
INFO flwr 2024-04-29 01:18:46,275 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:18:46,275 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:19:39,886 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:19:41,405 | server.py:125 | fit progress: (7, 1.5512763261795044, {'accuracy': 0.9101, 'data_size': 10000}, 383.17279573797714)
INFO flwr 2024-04-29 01:19:41,406 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:19:41,406 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:20:31,917 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:20:33,407 | server.py:125 | fit progress: (8, 1.5492557287216187, {'accuracy': 0.911, 'data_size': 10000}, 435.17484891199274)
INFO flwr 2024-04-29 01:20:33,408 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:20:33,408 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:21:25,193 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:21:26,664 | server.py:125 | fit progress: (9, 1.548804521560669, {'accuracy': 0.9114, 'data_size': 10000}, 488.4310669799743)
INFO flwr 2024-04-29 01:21:26,664 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:21:26,664 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:22:23,010 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:22:24,328 | server.py:125 | fit progress: (10, 1.552057147026062, {'accuracy': 0.9089, 'data_size': 10000}, 546.095307932992)
INFO flwr 2024-04-29 01:22:24,328 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:22:24,328 | server.py:153 | FL finished in 546.0957416589954
INFO flwr 2024-04-29 01:22:24,328 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:22:24,334 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.71615465e-03,  5.11272985e-04, -6.32244686e-04,  3.03196321e-05,
       -1.21421566e-04,  1.42271584e-03, -5.30561758e-03,  1.44557655e-03,
       -2.47164327e-03,  4.04894032e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.5635056e-05, -1.4285085e-03, -1.0219695e-04,  6.9439056e-04,
        1.2419657e-03,  4.2199343e-04, -7.1263144e-06, -1.1771551e-03,
        7.2638976e-04, -4.4537958e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.3093492e-06, -1.1030723e-05, -7.3494790e-05,  1.6940993e-06,
       -5.8745866e-04,  1.5755262e-05,  9.1011556e-05,  5.8164302e-04,
       -1.5350070e-05,  1.5488126e-06], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.8234618e-07, -2.4686492e-04,  8.7003627e-07, -3.7544567e-05,
        2.0263412e-04,  7.4018080e-06, -1.3972026e-05, -1.6562597e-04,
        3.5512369e-04, -1.0268727e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0623846e-05,  8.9843568e-05, -2.8600565e-05,  1.5702983e-04,
        5.8302681e-05, -4.5648187e-05, -1.6847720e-04,  1.5239249e-04,
       -2.3523759e-04, -2.0521216e-07], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.9068069e-05,  1.9878130e-06, -7.7923047e-05,  4.2628672e-05,
       -2.0032421e-06, -1.6893054e-04,  6.6432287e-05, -2.4588689e-05,
        2.9648766e-06,  1.2039244e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3048378e-06, -3.0128522e-06, -3.6663298e-06, -1.8728879e-05,
        2.3753753e-06,  3.1950563e-07,  9.3481269e-08, -1.9633349e-04,
        1.9255567e-04,  2.5101077e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2862220e-06,  5.3363929e-06, -2.0142425e-06,  9.7175810e-04,
       -1.8039851e-04, -7.6879922e-04, -3.0542044e-05,  7.8143330e-06,
       -5.7540106e-04,  5.7554420e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.1916615e-07,  6.6970161e-04, -7.5907615e-06,  2.4909335e-05,
       -1.7210058e-03, -6.7222735e-04,  2.6303413e-04,  9.8913675e-04,
        2.8066264e-05,  4.2689961e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3894486e-04,  1.7378485e-05, -1.4750556e-04, -8.3797195e-06,
       -5.3254480e-04, -1.5707943e-05,  5.4580119e-04,  2.3246794e-05,
       -5.0143801e-05,  2.8914774e-05], dtype=float32)])]}
INFO flwr 2024-04-29 01:22:24,334 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:22:24,334 | app.py:229 | app_fit: losses_centralized [(0, 2.302933931350708), (1, 1.7717013359069824), (2, 1.5997411012649536), (3, 1.5860092639923096), (4, 1.5575926303863525), (5, 1.557248592376709), (6, 1.5547308921813965), (7, 1.5512763261795044), (8, 1.5492557287216187), (9, 1.548804521560669), (10, 1.552057147026062)]
INFO flwr 2024-04-29 01:22:24,334 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1035), (1, 0.6908), (2, 0.8624), (3, 0.8749), (4, 0.9037), (5, 0.9037), (6, 0.9069), (7, 0.9101), (8, 0.911), (9, 0.9114), (10, 0.9089)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9089
wandb:     loss 1.55206
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_011257-uq72h6ky
wandb: Find logs at: ./wandb/offline-run-20240429_011257-uq72h6ky/logs
INFO flwr 2024-04-29 01:22:27,946 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 2
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:22:28,645 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1598629)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1598629)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:22:33,575	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:22:33,925	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:22:34,271	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:22:34,273	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:22:45,246 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78985085337.0, 'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 174298532455.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 01:22:45,246 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:22:45,246 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:22:45,263 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:22:45,264 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:22:45,264 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:22:45,264 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:22:48,493 | server.py:94 | initial parameters (loss, other metrics): 2.302145481109619, {'accuracy': 0.1196, 'data_size': 10000}
INFO flwr 2024-04-29 01:22:48,493 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:22:48,494 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1603064)[0m 2024-04-29 01:22:51.437287: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1603064)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1603064)[0m 2024-04-29 01:22:53.720967: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1603068)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1603068)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1603065)[0m 2024-04-29 01:22:51.724208: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1603065)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1603065)[0m 2024-04-29 01:22:53.944090: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:23:54,212 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:23:55,713 | server.py:125 | fit progress: (1, 1.8281025886535645, {'accuracy': 0.6314, 'data_size': 10000}, 67.21973750201869)
INFO flwr 2024-04-29 01:23:55,714 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:23:55,714 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:24:52,283 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:24:53,784 | server.py:125 | fit progress: (2, 1.691037893295288, {'accuracy': 0.7687, 'data_size': 10000}, 125.29013428802136)
INFO flwr 2024-04-29 01:24:53,784 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:24:53,784 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:25:49,897 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:25:51,443 | server.py:125 | fit progress: (3, 1.6503007411956787, {'accuracy': 0.8105, 'data_size': 10000}, 182.94915314702666)
INFO flwr 2024-04-29 01:25:51,443 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:25:51,443 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:26:44,728 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:26:46,001 | server.py:125 | fit progress: (4, 1.638546109199524, {'accuracy': 0.8219, 'data_size': 10000}, 237.50760318801622)
INFO flwr 2024-04-29 01:26:46,002 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:26:46,002 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:27:33,588 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:27:34,859 | server.py:125 | fit progress: (5, 1.6351704597473145, {'accuracy': 0.8255, 'data_size': 10000}, 286.3650778090232)
INFO flwr 2024-04-29 01:27:34,859 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:27:34,859 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:28:24,724 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:28:26,229 | server.py:125 | fit progress: (6, 1.5699665546417236, {'accuracy': 0.8912, 'data_size': 10000}, 337.7354838180181)
INFO flwr 2024-04-29 01:28:26,229 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:28:26,230 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:29:18,919 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:29:20,399 | server.py:125 | fit progress: (7, 1.5608198642730713, {'accuracy': 0.9, 'data_size': 10000}, 391.90568713401444)
INFO flwr 2024-04-29 01:29:20,400 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:29:20,400 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:30:09,263 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:30:10,748 | server.py:125 | fit progress: (8, 1.5529111623764038, {'accuracy': 0.9082, 'data_size': 10000}, 442.25451458099997)
INFO flwr 2024-04-29 01:30:10,749 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:30:10,749 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:31:00,715 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:31:02,215 | server.py:125 | fit progress: (9, 1.5556164979934692, {'accuracy': 0.9055, 'data_size': 10000}, 493.72095635102596)
INFO flwr 2024-04-29 01:31:02,215 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:31:02,215 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:31:53,211 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:31:54,516 | server.py:125 | fit progress: (10, 1.551190733909607, {'accuracy': 0.9098, 'data_size': 10000}, 546.0227649410081)
INFO flwr 2024-04-29 01:31:54,517 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:31:54,517 | server.py:153 | FL finished in 546.0232264740043
INFO flwr 2024-04-29 01:31:54,517 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:31:54,523 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00082253,  0.0013991 , -0.0005858 ,  0.00158579,  0.00035003,
        0.00063571, -0.0002478 , -0.00023617, -0.00162028, -0.00045806],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.5231280e-03,  2.0206685e-03,  7.2204112e-04, -3.3627087e-03,
        1.3939433e-03, -2.5662892e-03,  9.7907335e-03, -5.2658591e-04,
        9.5381355e-04,  9.7519151e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.8602875e-06, -8.0902413e-05, -8.8529610e-05, -3.8446051e-06,
        7.1663692e-07,  4.2251652e-04,  9.2022726e-04, -4.0375884e-04,
        6.9957803e-04, -1.4621364e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.2473536e-05,  2.8395953e-04,  1.3880858e-04,  3.9083050e-03,
       -3.5524405e-07,  7.5081247e-04,  2.6709875e-04,  2.5293461e-04,
       -4.6906765e-03, -8.3840807e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1085201e-07,  8.8145789e-05, -4.6222474e-05, -1.8656947e-05,
       -1.0571939e-06, -4.3481963e-05, -3.7046728e-05, -4.4799331e-04,
        1.8467548e-05,  4.8805925e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.7202425e-05, -1.7185401e-05, -1.3156187e-04, -1.2333557e-05,
        5.5211701e-04, -6.6418065e-06,  1.7355713e-04, -5.7630497e-04,
       -1.5196631e-04,  2.3752506e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.1593247e-06,  2.9219946e-05, -2.6783443e-04, -4.2038799e-05,
        3.5022826e-05, -5.1082707e-06, -2.6614757e-04,  2.6672531e-04,
        2.6780672e-04, -8.4921585e-06], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.46634185e-05, -6.87081138e-06, -2.57452775e-05,  1.66684986e-05,
       -2.07163453e-06, -1.78791597e-05,  1.20238692e-04, -9.04594526e-06,
       -1.75687219e-05, -1.30628005e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.69170301e-06, -5.07091318e-05,  8.06478693e-06, -1.03838886e-07,
        2.86994735e-04,  1.40707225e-05, -3.11508396e-04,  1.99379610e-05,
        9.28782611e-05, -5.79294392e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.2567796e-05, -1.6660628e-05,  2.2496963e-04,  1.0225602e-04,
        8.1542130e-05, -1.0208586e-04, -5.1382711e-05, -3.0446373e-04,
        1.7225029e-05, -4.3947115e-05], dtype=float32)])]}
INFO flwr 2024-04-29 01:31:54,523 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:31:54,523 | app.py:229 | app_fit: losses_centralized [(0, 2.302145481109619), (1, 1.8281025886535645), (2, 1.691037893295288), (3, 1.6503007411956787), (4, 1.638546109199524), (5, 1.6351704597473145), (6, 1.5699665546417236), (7, 1.5608198642730713), (8, 1.5529111623764038), (9, 1.5556164979934692), (10, 1.551190733909607)]
INFO flwr 2024-04-29 01:31:54,523 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1196), (1, 0.6314), (2, 0.7687), (3, 0.8105), (4, 0.8219), (5, 0.8255), (6, 0.8912), (7, 0.9), (8, 0.9082), (9, 0.9055), (10, 0.9098)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9098
wandb:     loss 1.55119
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_012228-tzqjubks
wandb: Find logs at: ./wandb/offline-run-20240429_012228-tzqjubks/logs
INFO flwr 2024-04-29 01:31:58,143 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:31:59,823 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1603056)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1603056)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:32:04,867	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:32:05,227	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:32:05,573	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:32:05,574	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:32:16,520 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 174299019879.0, 'CPU': 64.0, 'object_store_memory': 78985294233.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 01:32:16,520 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:32:16,520 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:32:16,536 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:32:16,537 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:32:16,537 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:32:16,538 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:32:19,790 | server.py:94 | initial parameters (loss, other metrics): 2.302846670150757, {'accuracy': 0.1046, 'data_size': 10000}
INFO flwr 2024-04-29 01:32:19,790 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:32:19,791 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1607464)[0m 2024-04-29 01:32:22.670172: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1607464)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1607464)[0m 2024-04-29 01:32:24.944638: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1607465)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1607465)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1607463)[0m 2024-04-29 01:32:22.845914: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1607463)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1607463)[0m 2024-04-29 01:32:25.093808: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:32:43,126 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:32:44,647 | server.py:125 | fit progress: (1, 1.736693024635315, {'accuracy': 0.7894, 'data_size': 10000}, 24.85683824500302)
INFO flwr 2024-04-29 01:32:44,648 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:32:44,648 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:32:56,382 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:32:57,853 | server.py:125 | fit progress: (2, 1.6378012895584106, {'accuracy': 0.8596, 'data_size': 10000}, 38.06198998898617)
INFO flwr 2024-04-29 01:32:57,853 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:32:57,853 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:33:08,631 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:33:10,177 | server.py:125 | fit progress: (3, 1.6136696338653564, {'accuracy': 0.8711, 'data_size': 10000}, 50.386862566985656)
INFO flwr 2024-04-29 01:33:10,178 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:33:10,178 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:33:20,987 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:33:22,272 | server.py:125 | fit progress: (4, 1.5945237874984741, {'accuracy': 0.887, 'data_size': 10000}, 62.48153374899994)
INFO flwr 2024-04-29 01:33:22,272 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:33:22,273 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:33:33,274 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:33:34,540 | server.py:125 | fit progress: (5, 1.5724931955337524, {'accuracy': 0.9051, 'data_size': 10000}, 74.74903333099792)
INFO flwr 2024-04-29 01:33:34,540 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:33:34,540 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:33:44,709 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:33:46,208 | server.py:125 | fit progress: (6, 1.5841560363769531, {'accuracy': 0.8935, 'data_size': 10000}, 86.41734812999493)
INFO flwr 2024-04-29 01:33:46,208 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:33:46,208 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:33:56,408 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:33:57,873 | server.py:125 | fit progress: (7, 1.5643659830093384, {'accuracy': 0.9091, 'data_size': 10000}, 98.08231113399961)
INFO flwr 2024-04-29 01:33:57,873 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:33:57,874 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:34:08,660 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:34:10,177 | server.py:125 | fit progress: (8, 1.572606086730957, {'accuracy': 0.9012, 'data_size': 10000}, 110.38642737700138)
INFO flwr 2024-04-29 01:34:10,177 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:34:10,178 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:34:21,332 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:34:22,803 | server.py:125 | fit progress: (9, 1.5751934051513672, {'accuracy': 0.8983, 'data_size': 10000}, 123.01280238997424)
INFO flwr 2024-04-29 01:34:22,804 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:34:22,804 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:34:33,769 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:34:35,046 | server.py:125 | fit progress: (10, 1.5729724168777466, {'accuracy': 0.9004, 'data_size': 10000}, 135.25578595499974)
INFO flwr 2024-04-29 01:34:35,047 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:34:35,047 | server.py:153 | FL finished in 135.25620949297445
INFO flwr 2024-04-29 01:34:35,047 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:34:35,052 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00251543,  0.00583248, -0.01029066, -0.01312777, -0.00414677,
        0.00383946,  0.00705044,  0.00086443,  0.00545302,  0.0070408 ],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00157715, -0.00033147,  0.00252999,  0.00183174,  0.00771034,
       -0.00126766, -0.00202873, -0.00576467,  0.00334072, -0.00759738],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.2074668e-05, -7.3310878e-04,  5.5491953e-04,  3.7437209e-03,
        3.8508035e-03,  3.6695329e-03, -2.9379756e-03, -8.0513506e-04,
       -2.5029818e-03, -4.9118171e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00293523,  0.0011883 , -0.0003301 , -0.00055312,  0.00871086,
        0.0040464 , -0.00072707, -0.00103453,  0.00190334, -0.01026878],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.001885  , -0.00373834,  0.00494571, -0.00341162,  0.00095816,
       -0.00011528,  0.00163941,  0.00397674, -0.00307734,  0.00070758],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00045237,  0.00068589,  0.00110389, -0.00157952,  0.00626249,
        0.00086037,  0.00360962,  0.00529951, -0.00677872, -0.0090111 ],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2998546e-03, -1.3381388e-03,  2.2065018e-03, -3.4275837e-04,
        1.7477515e-03, -9.5471856e-05,  3.3736683e-04,  2.3717065e-03,
        1.6080752e-03, -5.1951199e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00092718,  0.00121092, -0.00017238,  0.00168333,  0.00787958,
       -0.002158  , -0.00359856, -0.00238587, -0.00241217, -0.000974  ],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00140687,  0.00601206, -0.00083666, -0.00064445,  0.00369114,
        0.00442187,  0.0005027 ,  0.00160519, -0.00960629, -0.00655241],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00022607, -0.00041757,  0.00053513, -0.00126433,  0.00668776,
       -0.00056443, -0.00083146, -0.00074475,  0.0016624 , -0.00483665],
      dtype=float32)])]}
INFO flwr 2024-04-29 01:34:35,052 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:34:35,053 | app.py:229 | app_fit: losses_centralized [(0, 2.302846670150757), (1, 1.736693024635315), (2, 1.6378012895584106), (3, 1.6136696338653564), (4, 1.5945237874984741), (5, 1.5724931955337524), (6, 1.5841560363769531), (7, 1.5643659830093384), (8, 1.572606086730957), (9, 1.5751934051513672), (10, 1.5729724168777466)]
INFO flwr 2024-04-29 01:34:35,053 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1046), (1, 0.7894), (2, 0.8596), (3, 0.8711), (4, 0.887), (5, 0.9051), (6, 0.8935), (7, 0.9091), (8, 0.9012), (9, 0.8983), (10, 0.9004)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9004
wandb:     loss 1.57297
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_013159-t52posbh
wandb: Find logs at: ./wandb/offline-run-20240429_013159-t52posbh/logs
INFO flwr 2024-04-29 01:34:38,675 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:34:39,337 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1607456)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1607456)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:34:44,027	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:34:44,379	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:34:44,762	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:34:44,764	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:34:55,694 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78947887104.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174211736576.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 01:34:55,694 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:34:55,695 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:34:55,710 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:34:55,712 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:34:55,712 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:34:55,713 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:34:59,386 | server.py:94 | initial parameters (loss, other metrics): 2.3029398918151855, {'accuracy': 0.0852, 'data_size': 10000}
INFO flwr 2024-04-29 01:34:59,386 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:34:59,386 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1610580)[0m 2024-04-29 01:35:01.825526: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1610580)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1610580)[0m 2024-04-29 01:35:04.125085: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1610580)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1610580)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1610573)[0m 2024-04-29 01:35:01.996362: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1610573)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1610573)[0m 2024-04-29 01:35:04.239310: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:35:21,611 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:35:23,131 | server.py:125 | fit progress: (1, 1.7864378690719604, {'accuracy': 0.7105, 'data_size': 10000}, 23.74472575201071)
INFO flwr 2024-04-29 01:35:23,131 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:35:23,131 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:35:33,873 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:35:35,342 | server.py:125 | fit progress: (2, 1.6297107934951782, {'accuracy': 0.8558, 'data_size': 10000}, 35.95591454600799)
INFO flwr 2024-04-29 01:35:35,342 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:35:35,343 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:35:46,007 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:35:47,515 | server.py:125 | fit progress: (3, 1.608704924583435, {'accuracy': 0.8721, 'data_size': 10000}, 48.12888215499697)
INFO flwr 2024-04-29 01:35:47,515 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:35:47,516 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:35:57,884 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:35:59,133 | server.py:125 | fit progress: (4, 1.5729918479919434, {'accuracy': 0.9057, 'data_size': 10000}, 59.74641099802102)
INFO flwr 2024-04-29 01:35:59,133 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:35:59,133 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:36:09,494 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:36:10,774 | server.py:125 | fit progress: (5, 1.5707149505615234, {'accuracy': 0.9041, 'data_size': 10000}, 71.38800644900766)
INFO flwr 2024-04-29 01:36:10,775 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:36:10,775 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:36:22,162 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:36:23,646 | server.py:125 | fit progress: (6, 1.5965642929077148, {'accuracy': 0.8778, 'data_size': 10000}, 84.25967301000492)
INFO flwr 2024-04-29 01:36:23,646 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:36:23,646 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:36:33,568 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:36:35,067 | server.py:125 | fit progress: (7, 1.5659809112548828, {'accuracy': 0.9062, 'data_size': 10000}, 95.68034048800473)
INFO flwr 2024-04-29 01:36:35,067 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:36:35,067 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:36:45,912 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:36:47,383 | server.py:125 | fit progress: (8, 1.5582574605941772, {'accuracy': 0.9138, 'data_size': 10000}, 107.99675928000943)
INFO flwr 2024-04-29 01:36:47,383 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:36:47,384 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:36:57,557 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:36:59,050 | server.py:125 | fit progress: (9, 1.575463056564331, {'accuracy': 0.8955, 'data_size': 10000}, 119.66351167301764)
INFO flwr 2024-04-29 01:36:59,050 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:36:59,050 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:37:09,243 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:37:10,550 | server.py:125 | fit progress: (10, 1.55968177318573, {'accuracy': 0.9103, 'data_size': 10000}, 131.16352476499742)
INFO flwr 2024-04-29 01:37:10,550 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:37:10,550 | server.py:153 | FL finished in 131.16393526800675
INFO flwr 2024-04-29 01:37:10,550 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:37:10,556 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00057638, -0.00313521, -0.00375293,  0.00632423,  0.0077115 ,
       -0.00156299, -0.00178971, -0.00230442,  0.00282065, -0.00488746],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3527494e-03, -4.2594556e-04,  2.8355601e-03, -5.4372260e-03,
       -3.4898373e-03, -9.9705852e-05,  7.7476085e-04,  1.1679509e-03,
        4.8725302e-03, -1.5507835e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5533588e-07,  7.2292271e-03,  2.7468721e-03, -3.1433823e-03,
        4.0669911e-04,  4.4438178e-03, -7.6769497e-03, -5.7670609e-03,
        1.3300888e-03,  4.3089836e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00027045,  0.0011766 , -0.00053621, -0.0014362 ,  0.00645778,
       -0.00166639,  0.00105422,  0.00776575,  0.00418198, -0.01672704],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00060409,  0.00403535,  0.00337601,  0.00295149,  0.00208122,
       -0.00072674, -0.00459344, -0.00389234,  0.00016454, -0.00279198],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00116464,  0.00187682, -0.00066279,  0.00076697,  0.00142541,
       -0.0012491 ,  0.00039224,  0.0003932 , -0.00160386, -0.00250348],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.2187193e-04,  2.4488338e-04,  5.3276349e-04, -1.9534640e-03,
        3.1119781e-03,  2.5401153e-03,  4.4670020e-04, -2.1191027e-03,
       -6.1624538e-05, -2.3202887e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.6170741e-05, -1.2076636e-03, -9.5099019e-04,  2.7324189e-03,
       -9.8471926e-04,  7.8859193e-05,  1.5971863e-03, -8.6115999e-04,
       -2.1546860e-03,  1.7246450e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2538208e-03,  1.3549960e-03,  8.4627385e-04, -1.0437719e-03,
       -6.3143717e-04,  1.1110619e-03, -7.7299110e-04, -8.3946571e-04,
       -3.3056636e-03,  2.7216225e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00032044,  0.00079431, -0.00269276, -0.00103298,  0.00321015,
        0.00123715, -0.00121676, -0.00187299,  0.00274928, -0.00085486],
      dtype=float32)])]}
INFO flwr 2024-04-29 01:37:10,556 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:37:10,556 | app.py:229 | app_fit: losses_centralized [(0, 2.3029398918151855), (1, 1.7864378690719604), (2, 1.6297107934951782), (3, 1.608704924583435), (4, 1.5729918479919434), (5, 1.5707149505615234), (6, 1.5965642929077148), (7, 1.5659809112548828), (8, 1.5582574605941772), (9, 1.575463056564331), (10, 1.55968177318573)]
INFO flwr 2024-04-29 01:37:10,556 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0852), (1, 0.7105), (2, 0.8558), (3, 0.8721), (4, 0.9057), (5, 0.9041), (6, 0.8778), (7, 0.9062), (8, 0.9138), (9, 0.8955), (10, 0.9103)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9103
wandb:     loss 1.55968
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_013438-8uptrjvp
wandb: Find logs at: ./wandb/offline-run-20240429_013438-8uptrjvp/logs
INFO flwr 2024-04-29 01:37:14,187 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:37:14,987 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1610569)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1610569)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:37:19,912	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:37:20,265	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:37:20,604	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:37:20,605	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:37:31,570 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 174147720602.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78920451686.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 01:37:31,571 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:37:31,571 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:37:31,590 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:37:31,591 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:37:31,591 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:37:31,591 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:37:34,756 | server.py:94 | initial parameters (loss, other metrics): 2.3060481548309326, {'accuracy': 0.0384, 'data_size': 10000}
INFO flwr 2024-04-29 01:37:34,756 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:37:34,756 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1614302)[0m 2024-04-29 01:37:37.712174: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1614302)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1614310)[0m 2024-04-29 01:37:39.986852: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1614310)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1614310)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1614306)[0m 2024-04-29 01:37:37.866999: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1614306)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1614307)[0m 2024-04-29 01:37:40.149195: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:37:58,359 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:37:59,891 | server.py:125 | fit progress: (1, 1.9030661582946777, {'accuracy': 0.5592, 'data_size': 10000}, 25.134886104002362)
INFO flwr 2024-04-29 01:37:59,892 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:37:59,892 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:38:11,861 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:38:13,323 | server.py:125 | fit progress: (2, 1.6171680688858032, {'accuracy': 0.8596, 'data_size': 10000}, 38.56625328800874)
INFO flwr 2024-04-29 01:38:13,323 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:38:13,323 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:38:23,874 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:38:25,395 | server.py:125 | fit progress: (3, 1.5925190448760986, {'accuracy': 0.8831, 'data_size': 10000}, 50.638292360003106)
INFO flwr 2024-04-29 01:38:25,395 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:38:25,395 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:38:35,695 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:38:36,970 | server.py:125 | fit progress: (4, 1.5752403736114502, {'accuracy': 0.8916, 'data_size': 10000}, 62.213794994022464)
INFO flwr 2024-04-29 01:38:36,970 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:38:36,971 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:38:47,961 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:38:49,266 | server.py:125 | fit progress: (5, 1.576542615890503, {'accuracy': 0.892, 'data_size': 10000}, 74.50939248802024)
INFO flwr 2024-04-29 01:38:49,266 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:38:49,266 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:38:59,710 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:39:01,210 | server.py:125 | fit progress: (6, 1.5625478029251099, {'accuracy': 0.903, 'data_size': 10000}, 86.45336301700445)
INFO flwr 2024-04-29 01:39:01,210 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:39:01,210 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:39:11,794 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:39:13,279 | server.py:125 | fit progress: (7, 1.5572625398635864, {'accuracy': 0.9099, 'data_size': 10000}, 98.52285878002294)
INFO flwr 2024-04-29 01:39:13,279 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:39:13,280 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:39:23,465 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:39:24,927 | server.py:125 | fit progress: (8, 1.5757389068603516, {'accuracy': 0.8888, 'data_size': 10000}, 110.17090620900854)
INFO flwr 2024-04-29 01:39:24,928 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:39:24,928 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:39:34,997 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:39:36,490 | server.py:125 | fit progress: (9, 1.559295654296875, {'accuracy': 0.907, 'data_size': 10000}, 121.73354173000553)
INFO flwr 2024-04-29 01:39:36,490 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:39:36,491 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:39:47,150 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:39:48,408 | server.py:125 | fit progress: (10, 1.5630549192428589, {'accuracy': 0.9035, 'data_size': 10000}, 133.65149973600637)
INFO flwr 2024-04-29 01:39:48,408 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:39:48,408 | server.py:153 | FL finished in 133.6519306510163
INFO flwr 2024-04-29 01:39:48,408 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:39:48,414 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.8923812e-05, -2.1749060e-03,  6.8391726e-04,  1.0923463e-02,
        4.0150089e-03, -1.2031641e-02,  2.1137539e-04,  4.0352461e-03,
        1.1878271e-03, -6.9091031e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00204485, -0.00428564,  0.00372065, -0.01374394, -0.00819262,
        0.01029341,  0.00033855,  0.00170072,  0.00534208,  0.00687175],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0020891 ,  0.00121072,  0.00110679,  0.00118358, -0.00370446,
       -0.01035897, -0.00059882, -0.00119731,  0.00368692,  0.00658256],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00169927,  0.00061371,  0.00133701, -0.00218942, -0.00422305,
        0.00017752,  0.00252364, -0.00907246,  0.00290201,  0.00963041],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00074289,  0.00118502, -0.00053779, -0.00356286, -0.00090745,
        0.00405206,  0.0009454 , -0.00210266, -0.00407727,  0.00426278],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00076279,  0.00129425,  0.00221677,  0.00238619, -0.00776547,
       -0.00149988, -0.00322276, -0.00209875,  0.00289184,  0.00656069],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.4639067e-04, -6.7869690e-04, -1.8713350e-03,  6.9664591e-03,
       -2.3558226e-03, -9.6962421e-04, -1.5771782e-05, -4.6971189e-03,
       -6.5569426e-03,  1.1025377e-02], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00084984, -0.00025481, -0.00171544, -0.00051854,  0.00470593,
       -0.00131786,  0.00015181, -0.00226505,  0.00146048,  0.00060346],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.9199637e-05,  1.5636524e-03,  6.6234665e-05,  2.1150810e-04,
       -2.4872657e-04, -2.8129849e-03, -1.0254864e-03, -1.6984255e-03,
        1.5201869e-03,  2.3949835e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.8395567e-04, -1.2705164e-04,  9.2999330e-03,  2.4137245e-03,
        4.8545902e-04, -4.6462123e-03, -5.6629920e-06, -3.1192708e-04,
       -5.8481614e-03, -5.7602365e-04], dtype=float32)])]}
INFO flwr 2024-04-29 01:39:48,414 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:39:48,414 | app.py:229 | app_fit: losses_centralized [(0, 2.3060481548309326), (1, 1.9030661582946777), (2, 1.6171680688858032), (3, 1.5925190448760986), (4, 1.5752403736114502), (5, 1.576542615890503), (6, 1.5625478029251099), (7, 1.5572625398635864), (8, 1.5757389068603516), (9, 1.559295654296875), (10, 1.5630549192428589)]
INFO flwr 2024-04-29 01:39:48,414 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0384), (1, 0.5592), (2, 0.8596), (3, 0.8831), (4, 0.8916), (5, 0.892), (6, 0.903), (7, 0.9099), (8, 0.8888), (9, 0.907), (10, 0.9035)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9035
wandb:     loss 1.56305
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_013714-7hxoxaw0
wandb: Find logs at: ./wandb/offline-run-20240429_013714-7hxoxaw0/logs
INFO flwr 2024-04-29 01:39:52,175 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:39:52,866 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1614301)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1614301)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:39:57,716	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:39:58,148	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:39:58,615	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:39:58,617	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:40:09,522 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 174140673024.0, 'object_store_memory': 78917431296.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 01:40:09,522 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:40:09,522 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:40:09,542 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:40:09,544 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:40:09,545 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:40:09,545 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:40:12,768 | server.py:94 | initial parameters (loss, other metrics): 2.3039090633392334, {'accuracy': 0.0686, 'data_size': 10000}
INFO flwr 2024-04-29 01:40:12,769 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:40:12,769 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1617446)[0m 2024-04-29 01:40:15.602989: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1617446)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1617446)[0m 2024-04-29 01:40:17.891394: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1617444)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1617444)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1617442)[0m 2024-04-29 01:40:15.854224: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1617442)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1617442)[0m 2024-04-29 01:40:18.131083: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:40:35,503 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:40:37,029 | server.py:125 | fit progress: (1, 1.8160079717636108, {'accuracy': 0.6702, 'data_size': 10000}, 24.259992076986236)
INFO flwr 2024-04-29 01:40:37,030 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:40:37,030 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:40:48,283 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:40:49,800 | server.py:125 | fit progress: (2, 1.6531562805175781, {'accuracy': 0.8194, 'data_size': 10000}, 37.031071328994585)
INFO flwr 2024-04-29 01:40:49,801 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:40:49,801 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:41:00,229 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:41:01,739 | server.py:125 | fit progress: (3, 1.5817925930023193, {'accuracy': 0.8949, 'data_size': 10000}, 48.96921156998724)
INFO flwr 2024-04-29 01:41:01,739 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:41:01,739 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:41:12,020 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:41:13,326 | server.py:125 | fit progress: (4, 1.5760568380355835, {'accuracy': 0.8988, 'data_size': 10000}, 60.557033663004404)
INFO flwr 2024-04-29 01:41:13,327 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:41:13,327 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:41:24,625 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:41:25,874 | server.py:125 | fit progress: (5, 1.5664385557174683, {'accuracy': 0.9035, 'data_size': 10000}, 73.1046794319991)
INFO flwr 2024-04-29 01:41:25,874 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:41:25,875 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:41:36,456 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:41:37,920 | server.py:125 | fit progress: (6, 1.5664005279541016, {'accuracy': 0.9048, 'data_size': 10000}, 85.1506945839792)
INFO flwr 2024-04-29 01:41:37,920 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:41:37,921 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:41:48,461 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:41:49,980 | server.py:125 | fit progress: (7, 1.5614566802978516, {'accuracy': 0.9091, 'data_size': 10000}, 97.21115013698)
INFO flwr 2024-04-29 01:41:49,981 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:41:49,981 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:42:00,139 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:42:01,631 | server.py:125 | fit progress: (8, 1.555191159248352, {'accuracy': 0.9154, 'data_size': 10000}, 108.86161039498984)
INFO flwr 2024-04-29 01:42:01,631 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:42:01,631 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:42:12,323 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:42:13,809 | server.py:125 | fit progress: (9, 1.5566034317016602, {'accuracy': 0.9118, 'data_size': 10000}, 121.03952854897943)
INFO flwr 2024-04-29 01:42:13,809 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:42:13,840 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:42:24,537 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:42:25,853 | server.py:125 | fit progress: (10, 1.5542877912521362, {'accuracy': 0.9139, 'data_size': 10000}, 133.08338035500492)
INFO flwr 2024-04-29 01:42:25,853 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:42:25,853 | server.py:153 | FL finished in 133.08382713998435
INFO flwr 2024-04-29 01:42:25,853 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:42:25,859 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.3586840e-04,  2.6663248e-03, -2.9602283e-04, -3.0703216e-03,
        2.1261200e-03,  2.4836554e-04,  1.3548814e-03, -6.4053229e-04,
        2.0183568e-05, -3.0448211e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00019898,  0.0002497 , -0.00150909,  0.0014425 ,  0.00296801,
       -0.0020399 , -0.00029515, -0.00343645,  0.00143724,  0.00098421],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00051658, -0.00053772,  0.00129857, -0.00090108,  0.00266717,
        0.00063421, -0.00087797, -0.00284949,  0.00211626, -0.00103332],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.9548654e-04,  7.5263367e-04,  1.1236491e-03,  3.8447941e-04,
       -1.4296948e-04,  1.3689867e-03,  1.8596582e-03,  9.9044235e-05,
       -4.1796057e-03, -1.4612923e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.5575067e-04, -2.1776750e-03,  4.5579459e-04, -5.7675544e-04,
       -7.1442548e-05,  6.0138884e-03, -1.6653433e-04,  2.9430264e-03,
       -6.3528484e-03, -4.2316000e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.6372770e-04,  5.1108586e-06,  1.3281510e-03, -2.0891371e-04,
        4.1442313e-03,  5.9648920e-03,  1.3354064e-04, -5.4192945e-04,
       -5.5390880e-03, -4.5221997e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.5864326e-04,  4.7286032e-04,  2.7501395e-03, -3.4655436e-04,
        3.0038701e-03, -1.0696338e-03, -2.8852211e-05, -5.3068215e-04,
        2.4579684e-04, -3.7382550e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00133598, -0.00080536,  0.00099021, -0.00025684,  0.00092495,
        0.0009885 , -0.00041862,  0.00155013, -0.00038155, -0.00125538],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00028326,  0.00078994, -0.0008398 , -0.00133596,  0.00019644,
        0.00038329,  0.00057705,  0.00421989,  0.00064466, -0.00491874],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0001448 , -0.0008511 , -0.00307236, -0.00115612,  0.00202195,
        0.00102414,  0.00285444,  0.00147757,  0.00139263, -0.0035463 ],
      dtype=float32)])]}
INFO flwr 2024-04-29 01:42:25,859 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:42:25,859 | app.py:229 | app_fit: losses_centralized [(0, 2.3039090633392334), (1, 1.8160079717636108), (2, 1.6531562805175781), (3, 1.5817925930023193), (4, 1.5760568380355835), (5, 1.5664385557174683), (6, 1.5664005279541016), (7, 1.5614566802978516), (8, 1.555191159248352), (9, 1.5566034317016602), (10, 1.5542877912521362)]
INFO flwr 2024-04-29 01:42:25,859 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0686), (1, 0.6702), (2, 0.8194), (3, 0.8949), (4, 0.8988), (5, 0.9035), (6, 0.9048), (7, 0.9091), (8, 0.9154), (9, 0.9118), (10, 0.9139)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9139
wandb:     loss 1.55429
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_013952-otmdgy9r
wandb: Find logs at: ./wandb/offline-run-20240429_013952-otmdgy9r/logs
INFO flwr 2024-04-29 01:42:29,507 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:42:30,251 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1617440)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1617440)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:42:35,090	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:42:35,447	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:42:35,865	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:42:35,867	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:42:46,868 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'object_store_memory': 78562202419.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0, 'memory': 173311805645.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 01:42:46,868 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:42:46,869 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:42:46,885 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:42:46,887 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:42:46,887 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:42:46,888 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:42:50,345 | server.py:94 | initial parameters (loss, other metrics): 2.30361270904541, {'accuracy': 0.0681, 'data_size': 10000}
INFO flwr 2024-04-29 01:42:50,345 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:42:50,345 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1623132)[0m 2024-04-29 01:42:52.960097: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1623132)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1623124)[0m 2024-04-29 01:42:55.258429: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1623132)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1623132)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1623133)[0m 2024-04-29 01:42:53.203288: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1623133)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1623133)[0m 2024-04-29 01:42:55.422823: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:43:13,547 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:43:15,075 | server.py:125 | fit progress: (1, 1.9208669662475586, {'accuracy': 0.5425, 'data_size': 10000}, 24.729895464988658)
INFO flwr 2024-04-29 01:43:15,075 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:43:15,076 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:43:26,324 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:43:27,822 | server.py:125 | fit progress: (2, 1.6400195360183716, {'accuracy': 0.8352, 'data_size': 10000}, 37.47692371899029)
INFO flwr 2024-04-29 01:43:27,822 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:43:27,823 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:43:38,685 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:43:40,182 | server.py:125 | fit progress: (3, 1.5812463760375977, {'accuracy': 0.8913, 'data_size': 10000}, 49.83635573799256)
INFO flwr 2024-04-29 01:43:40,182 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:43:40,182 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:43:49,870 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:43:51,156 | server.py:125 | fit progress: (4, 1.562503457069397, {'accuracy': 0.9084, 'data_size': 10000}, 60.810969329992076)
INFO flwr 2024-04-29 01:43:51,157 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:43:51,157 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:44:01,102 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:44:02,394 | server.py:125 | fit progress: (5, 1.5602422952651978, {'accuracy': 0.9085, 'data_size': 10000}, 72.04922973999055)
INFO flwr 2024-04-29 01:44:02,395 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:44:02,395 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:44:13,302 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:44:14,817 | server.py:125 | fit progress: (6, 1.5701669454574585, {'accuracy': 0.8966, 'data_size': 10000}, 84.47147218999453)
INFO flwr 2024-04-29 01:44:14,817 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:44:14,817 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:44:25,215 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:44:26,712 | server.py:125 | fit progress: (7, 1.5529717206954956, {'accuracy': 0.9137, 'data_size': 10000}, 96.3663636079873)
INFO flwr 2024-04-29 01:44:26,712 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:44:26,712 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:44:37,502 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:44:39,014 | server.py:125 | fit progress: (8, 1.5779907703399658, {'accuracy': 0.8885, 'data_size': 10000}, 108.66848684399156)
INFO flwr 2024-04-29 01:44:39,014 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:44:39,014 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:44:49,112 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:44:50,623 | server.py:125 | fit progress: (9, 1.5613629817962646, {'accuracy': 0.9055, 'data_size': 10000}, 120.27759852900635)
INFO flwr 2024-04-29 01:44:50,623 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:44:50,623 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:45:01,021 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:45:02,329 | server.py:125 | fit progress: (10, 1.56708562374115, {'accuracy': 0.897, 'data_size': 10000}, 131.98379231701256)
INFO flwr 2024-04-29 01:45:02,329 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:45:02,329 | server.py:153 | FL finished in 131.98423147501308
INFO flwr 2024-04-29 01:45:02,330 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:45:02,335 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.0004961 ,  0.00305698, -0.00500217,  0.00131021, -0.00085645,
       -0.01026138,  0.00246341,  0.00168926,  0.00488211,  0.00222202],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00035899, -0.00066694,  0.00081842, -0.0027586 ,  0.00253185,
        0.00136671, -0.00039611,  0.00055399, -0.00017534, -0.0016329 ],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1890271e-03,  9.3597948e-05,  1.1901545e-03, -5.0467462e-03,
        2.2718773e-04, -1.3630537e-04, -1.6338510e-03,  1.0084739e-03,
        1.7317012e-03,  1.3767981e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.4653979e-04, -7.9882710e-04,  1.3373711e-03, -8.1394851e-04,
        4.5880265e-04, -3.3382684e-04,  3.7590442e-05,  1.1890490e-03,
       -9.1267918e-04, -8.0999132e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00038513,  0.00151127, -0.00025106, -0.00090885,  0.00023132,
        0.0007591 , -0.0004967 , -0.00049604,  0.00033396, -0.00029779],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00073792,  0.00086698,  0.00119591, -0.000849  ,  0.00159003,
        0.00017689,  0.00051366, -0.00118438, -0.00039372, -0.00117837],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.9840678e-04,  1.2752883e-03,  3.1774235e-03, -2.2989721e-03,
        2.2060731e-03, -8.9669840e-05, -8.2238310e-04,  2.5293298e-04,
       -2.7741659e-03, -1.2248886e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.7735470e-05, -6.0741219e-04,  3.4005349e-03,  2.3257786e-03,
       -6.0657162e-04, -9.1103386e-05, -8.1656949e-04,  9.0196304e-04,
       -3.3667244e-03, -1.1675686e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2703500e-04,  2.2104809e-03, -2.3342783e-04, -3.5228401e-05,
       -5.5136299e-04, -1.0754676e-03, -6.0402817e-05, -1.6153711e-03,
        6.2555913e-04,  1.0623538e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.2133949e-04, -1.0641722e-04,  1.7167337e-03,  8.2934072e-04,
       -5.9149068e-05, -1.0256708e-05,  1.2559695e-04, -1.2777380e-04,
       -1.8031877e-03,  1.5652471e-04], dtype=float32)])]}
INFO flwr 2024-04-29 01:45:02,335 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:45:02,335 | app.py:229 | app_fit: losses_centralized [(0, 2.30361270904541), (1, 1.9208669662475586), (2, 1.6400195360183716), (3, 1.5812463760375977), (4, 1.562503457069397), (5, 1.5602422952651978), (6, 1.5701669454574585), (7, 1.5529717206954956), (8, 1.5779907703399658), (9, 1.5613629817962646), (10, 1.56708562374115)]
INFO flwr 2024-04-29 01:45:02,335 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0681), (1, 0.5425), (2, 0.8352), (3, 0.8913), (4, 0.9084), (5, 0.9085), (6, 0.8966), (7, 0.9137), (8, 0.8885), (9, 0.9055), (10, 0.897)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.897
wandb:     loss 1.56709
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_014229-9fluj2ek
wandb: Find logs at: ./wandb/offline-run-20240429_014229-9fluj2ek/logs
INFO flwr 2024-04-29 01:45:06,059 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:45:06,886 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1623121)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1623121)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:45:11,566	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:45:11,921	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:45:12,277	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:45:12,279	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:45:23,251 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78540053299.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:10.20.240.13': 1.0, 'memory': 173260124365.0}
INFO flwr 2024-04-29 01:45:23,252 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:45:23,252 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:45:23,271 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:45:23,271 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:45:23,272 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:45:23,272 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:45:26,387 | server.py:94 | initial parameters (loss, other metrics): 2.3072807788848877, {'accuracy': 0.0542, 'data_size': 10000}
INFO flwr 2024-04-29 01:45:26,387 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:45:26,388 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1628872)[0m 2024-04-29 01:45:29.447170: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1628872)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1628880)[0m 2024-04-29 01:45:31.767627: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1628880)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1628880)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1628873)[0m 2024-04-29 01:45:29.574443: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1628873)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1628878)[0m 2024-04-29 01:45:31.847798: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:45:50,776 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:45:52,290 | server.py:125 | fit progress: (1, 1.8788576126098633, {'accuracy': 0.594, 'data_size': 10000}, 25.902697922021616)
INFO flwr 2024-04-29 01:45:52,291 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:45:52,291 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:46:03,024 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:46:04,540 | server.py:125 | fit progress: (2, 1.7059167623519897, {'accuracy': 0.7566, 'data_size': 10000}, 38.15236154201557)
INFO flwr 2024-04-29 01:46:04,540 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:46:04,540 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:46:15,400 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:46:16,974 | server.py:125 | fit progress: (3, 1.6434268951416016, {'accuracy': 0.8211, 'data_size': 10000}, 50.5863590890076)
INFO flwr 2024-04-29 01:46:16,974 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:46:16,975 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:46:27,459 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:46:28,764 | server.py:125 | fit progress: (4, 1.639298677444458, {'accuracy': 0.8217, 'data_size': 10000}, 62.375947179010836)
INFO flwr 2024-04-29 01:46:28,764 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:46:28,764 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:46:39,525 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:46:40,844 | server.py:125 | fit progress: (5, 1.6380728483200073, {'accuracy': 0.8231, 'data_size': 10000}, 74.45591326500289)
INFO flwr 2024-04-29 01:46:40,844 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:46:40,844 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:46:51,392 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:46:52,905 | server.py:125 | fit progress: (6, 1.6282398700714111, {'accuracy': 0.8333, 'data_size': 10000}, 86.51771740900585)
INFO flwr 2024-04-29 01:46:52,906 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:46:52,906 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:47:03,222 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:47:04,734 | server.py:125 | fit progress: (7, 1.6370042562484741, {'accuracy': 0.8247, 'data_size': 10000}, 98.34618729201611)
INFO flwr 2024-04-29 01:47:04,734 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:47:04,734 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:47:14,826 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:47:16,359 | server.py:125 | fit progress: (8, 1.6285589933395386, {'accuracy': 0.8326, 'data_size': 10000}, 109.97091709400411)
INFO flwr 2024-04-29 01:47:16,359 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:47:16,359 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:47:26,492 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:47:28,000 | server.py:125 | fit progress: (9, 1.6301721334457397, {'accuracy': 0.8311, 'data_size': 10000}, 121.61284970800625)
INFO flwr 2024-04-29 01:47:28,001 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:47:28,001 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:47:38,446 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:47:39,764 | server.py:125 | fit progress: (10, 1.6346038579940796, {'accuracy': 0.8263, 'data_size': 10000}, 133.37595847100602)
INFO flwr 2024-04-29 01:47:39,764 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:47:39,764 | server.py:153 | FL finished in 133.37637507700128
INFO flwr 2024-04-29 01:47:39,764 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:47:39,770 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1780706e-03, -7.0086122e-04,  1.5747749e-03,  2.6214083e-03,
        1.8654278e-03, -2.5302076e-03,  2.7355850e-03,  1.7260840e-03,
       -6.1060186e-03, -8.0468035e-06], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5875118e-04,  2.8889994e-03,  2.5798348e-03, -3.9369469e-03,
       -5.7518631e-03, -3.2403404e-03, -4.4124419e-04,  1.1166555e-03,
        6.9738072e-03, -3.0049076e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1862814e-03, -1.6070479e-03,  1.4358731e-03, -1.0986853e-03,
        1.6447665e-03, -7.4004219e-03,  2.2314524e-03,  1.2324339e-03,
        1.4071370e-03, -3.1635336e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.4601806e-04,  2.9507661e-04, -4.3120710e-03,  1.7726144e-02,
       -3.6391329e-03, -7.7396696e-03,  7.0324051e-04,  8.0914563e-04,
       -4.2886045e-03, -5.2539949e-08], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.3910678e-04,  3.7263450e-04, -5.8939750e-03,  1.6809726e-04,
        1.4587545e-03, -1.9097077e-03,  1.2719958e-03,  6.9576269e-04,
        3.2985681e-03, -1.1331837e-06], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.7210749e-03,  1.0355844e-03, -4.1456660e-04, -1.0630964e-02,
        6.8702665e-03,  5.0200527e-03, -1.3039872e-03,  4.0828362e-03,
       -6.3648433e-03, -1.5392463e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.25969236e-03, -2.78204563e-04,  3.42835742e-03,  2.23164493e-03,
        7.49925151e-04, -1.72376819e-03, -3.08575365e-03,  1.31730485e-05,
       -2.59456295e-03, -4.16861155e-07], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.1846193e-04, -4.7670550e-05, -2.1441940e-03, -2.4283042e-03,
        7.2439987e-04, -1.6279962e-03,  2.5476259e-04, -1.7952989e-05,
        4.5739147e-03, -5.3401391e-06], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1788747e-04, -1.0733110e-04,  2.8358234e-04,  2.0479297e-04,
        5.5162312e-04, -1.6400968e-03,  1.2326214e-05, -1.2210967e-03,
        2.0347750e-03, -6.3898102e-07], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0486752e-03,  2.6677581e-04,  4.7801877e-04, -6.8640057e-04,
       -8.5083314e-04, -2.5744650e-03, -2.5394559e-04, -1.3773813e-04,
        4.8083635e-03, -1.0468560e-06], dtype=float32)])]}
INFO flwr 2024-04-29 01:47:39,770 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:47:39,770 | app.py:229 | app_fit: losses_centralized [(0, 2.3072807788848877), (1, 1.8788576126098633), (2, 1.7059167623519897), (3, 1.6434268951416016), (4, 1.639298677444458), (5, 1.6380728483200073), (6, 1.6282398700714111), (7, 1.6370042562484741), (8, 1.6285589933395386), (9, 1.6301721334457397), (10, 1.6346038579940796)]
INFO flwr 2024-04-29 01:47:39,770 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0542), (1, 0.594), (2, 0.7566), (3, 0.8211), (4, 0.8217), (5, 0.8231), (6, 0.8333), (7, 0.8247), (8, 0.8326), (9, 0.8311), (10, 0.8263)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8263
wandb:     loss 1.6346
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_014506-hg6ao3ak
wandb: Find logs at: ./wandb/offline-run-20240429_014506-hg6ao3ak/logs
INFO flwr 2024-04-29 01:47:43,411 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:47:44,074 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1628870)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1628870)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:47:49,048	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:47:49,402	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:47:49,748	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:47:49,749	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:48:00,722 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'CPU': 64.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 78546910003.0, 'node:10.20.240.13': 1.0, 'memory': 173276123341.0}
INFO flwr 2024-04-29 01:48:00,722 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:48:00,722 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:48:00,741 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:48:00,743 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:48:00,743 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:48:00,743 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:48:04,051 | server.py:94 | initial parameters (loss, other metrics): 2.3005738258361816, {'accuracy': 0.1305, 'data_size': 10000}
INFO flwr 2024-04-29 01:48:04,051 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:48:04,051 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1634708)[0m 2024-04-29 01:48:06.957366: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1634708)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1634708)[0m 2024-04-29 01:48:09.247375: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1634715)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1634715)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1634717)[0m 2024-04-29 01:48:07.116587: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1634717)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1634717)[0m 2024-04-29 01:48:09.406419: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:48:26,955 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:48:28,448 | server.py:125 | fit progress: (1, 1.7067384719848633, {'accuracy': 0.7915, 'data_size': 10000}, 24.397160955006257)
INFO flwr 2024-04-29 01:48:28,449 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:48:28,449 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:48:39,865 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:48:41,355 | server.py:125 | fit progress: (2, 1.6671853065490723, {'accuracy': 0.7936, 'data_size': 10000}, 37.30425041701528)
INFO flwr 2024-04-29 01:48:41,356 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:48:41,356 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:48:51,563 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:48:53,085 | server.py:125 | fit progress: (3, 1.591296672821045, {'accuracy': 0.8765, 'data_size': 10000}, 49.0336584020115)
INFO flwr 2024-04-29 01:48:53,085 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:48:53,085 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:49:02,910 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:49:04,185 | server.py:125 | fit progress: (4, 1.5650837421417236, {'accuracy': 0.9017, 'data_size': 10000}, 60.133751696994295)
INFO flwr 2024-04-29 01:49:04,185 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:49:04,186 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:49:15,068 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:49:16,357 | server.py:125 | fit progress: (5, 1.561978816986084, {'accuracy': 0.9051, 'data_size': 10000}, 72.30588534200797)
INFO flwr 2024-04-29 01:49:16,357 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:49:16,358 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:49:27,324 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:49:28,838 | server.py:125 | fit progress: (6, 1.5611181259155273, {'accuracy': 0.9037, 'data_size': 10000}, 84.78696427101386)
INFO flwr 2024-04-29 01:49:28,838 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:49:28,839 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:49:39,529 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:49:41,028 | server.py:125 | fit progress: (7, 1.5602699518203735, {'accuracy': 0.9035, 'data_size': 10000}, 96.9763236970175)
INFO flwr 2024-04-29 01:49:41,028 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:49:41,028 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:49:52,072 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:49:53,562 | server.py:125 | fit progress: (8, 1.5591151714324951, {'accuracy': 0.9038, 'data_size': 10000}, 109.51049569400493)
INFO flwr 2024-04-29 01:49:53,562 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:49:53,562 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:50:03,588 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:50:05,092 | server.py:125 | fit progress: (9, 1.552595615386963, {'accuracy': 0.9108, 'data_size': 10000}, 121.04082934500184)
INFO flwr 2024-04-29 01:50:05,092 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:50:05,093 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:50:15,200 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:50:16,482 | server.py:125 | fit progress: (10, 1.5608763694763184, {'accuracy': 0.9022, 'data_size': 10000}, 132.43082474300172)
INFO flwr 2024-04-29 01:50:16,482 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:50:16,483 | server.py:153 | FL finished in 132.4312787350209
INFO flwr 2024-04-29 01:50:16,483 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:50:16,488 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00037071,  0.00088799,  0.00043162,  0.00026994, -0.00282235,
       -0.00251195,  0.00130472, -0.00222051,  0.00549992, -0.00121005],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.8686186e-05,  4.2029258e-04,  7.3226291e-04,  8.0522976e-04,
        2.2035216e-03, -7.6689193e-04, -5.3030706e-04, -1.6079650e-03,
       -5.8467005e-04, -7.5010507e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6815204e-05,  2.1855840e-04, -1.3288530e-04,  2.3970616e-04,
        1.5419031e-03, -9.4378833e-04, -9.4817253e-05, -2.1115525e-03,
       -1.3638523e-03,  2.6299395e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.9084534e-03, -2.2015700e-04,  1.3908440e-04,  2.8493977e-04,
       -1.3533885e-03,  1.3306514e-05, -8.6954649e-05, -4.6674968e-04,
       -2.5990163e-03,  2.3805350e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.4473905e-03, -2.7273293e-03,  5.6743261e-04,  1.7740881e-03,
        4.4425245e-04,  1.3486367e-05,  2.3123845e-03, -8.7399682e-04,
        2.2718949e-04,  7.0992479e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00026761,  0.00103346,  0.00015578, -0.00252287, -0.0020332 ,
        0.00025222,  0.0008111 , -0.00040871,  0.00226692,  0.00017774],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00013541, -0.00021335,  0.0002104 ,  0.00483811,  0.0022558 ,
       -0.0015339 ,  0.00011086,  0.00017128, -0.00171911, -0.00425543],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1827710e-04, -8.5841901e-05,  1.0058984e-04, -7.0448968e-06,
       -2.5911731e-04,  2.8201230e-04,  4.2129370e-05,  1.6060307e-04,
        1.9071647e-04, -2.0570798e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.0464964e-04,  1.4295122e-04, -2.4766405e-04, -6.7986788e-05,
        6.2723411e-04,  8.8042155e-04,  2.2515944e-04, -3.5433070e-04,
       -9.6422021e-04, -5.4620823e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.5789961e-04, -2.6600278e-04,  4.7636844e-04,  9.6048694e-04,
       -4.2180360e-05, -1.0267823e-03, -8.6166221e-04, -1.3062199e-04,
        3.9620216e-05, -1.0708148e-04], dtype=float32)])]}
INFO flwr 2024-04-29 01:50:16,488 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:50:16,488 | app.py:229 | app_fit: losses_centralized [(0, 2.3005738258361816), (1, 1.7067384719848633), (2, 1.6671853065490723), (3, 1.591296672821045), (4, 1.5650837421417236), (5, 1.561978816986084), (6, 1.5611181259155273), (7, 1.5602699518203735), (8, 1.5591151714324951), (9, 1.552595615386963), (10, 1.5608763694763184)]
INFO flwr 2024-04-29 01:50:16,489 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1305), (1, 0.7915), (2, 0.7936), (3, 0.8765), (4, 0.9017), (5, 0.9051), (6, 0.9037), (7, 0.9035), (8, 0.9038), (9, 0.9108), (10, 0.9022)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9022
wandb:     loss 1.56088
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_014743-vc476lrn
wandb: Find logs at: ./wandb/offline-run-20240429_014743-vc476lrn/logs
INFO flwr 2024-04-29 01:50:20,519 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:50:21,227 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1634706)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1634706)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:50:26,261	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:50:26,642	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:50:27,070	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:50:27,072	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:50:38,034 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 78514484428.0, 'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 173200463668.0}
INFO flwr 2024-04-29 01:50:38,035 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:50:38,035 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:50:38,052 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:50:38,054 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:50:38,054 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:50:38,054 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:50:41,709 | server.py:94 | initial parameters (loss, other metrics): 2.3013083934783936, {'accuracy': 0.0975, 'data_size': 10000}
INFO flwr 2024-04-29 01:50:41,710 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:50:41,710 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1639927)[0m 2024-04-29 01:50:44.138999: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1639927)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1639929)[0m 2024-04-29 01:50:46.464396: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1639931)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1639931)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1639930)[0m 2024-04-29 01:50:44.228674: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1639930)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1639930)[0m 2024-04-29 01:50:46.610269: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:51:04,878 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:51:06,421 | server.py:125 | fit progress: (1, 1.6930564641952515, {'accuracy': 0.7804, 'data_size': 10000}, 24.71098166500451)
INFO flwr 2024-04-29 01:51:06,421 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:51:06,422 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:51:18,072 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:51:19,596 | server.py:125 | fit progress: (2, 1.5995779037475586, {'accuracy': 0.8692, 'data_size': 10000}, 37.88558689400088)
INFO flwr 2024-04-29 01:51:19,596 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:51:19,596 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:51:29,534 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:51:31,043 | server.py:125 | fit progress: (3, 1.5747404098510742, {'accuracy': 0.8901, 'data_size': 10000}, 49.33242904601502)
INFO flwr 2024-04-29 01:51:31,043 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:51:31,043 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:51:41,907 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:51:43,228 | server.py:125 | fit progress: (4, 1.5786352157592773, {'accuracy': 0.886, 'data_size': 10000}, 61.517952038004296)
INFO flwr 2024-04-29 01:51:43,228 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:51:43,229 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:51:53,085 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:51:54,366 | server.py:125 | fit progress: (5, 1.5608981847763062, {'accuracy': 0.9022, 'data_size': 10000}, 72.65542047700728)
INFO flwr 2024-04-29 01:51:54,366 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:51:54,366 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:52:05,158 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:52:06,664 | server.py:125 | fit progress: (6, 1.5527812242507935, {'accuracy': 0.9102, 'data_size': 10000}, 84.95430356200086)
INFO flwr 2024-04-29 01:52:06,665 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:52:06,665 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:52:17,521 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:52:19,049 | server.py:125 | fit progress: (7, 1.5612910985946655, {'accuracy': 0.9007, 'data_size': 10000}, 97.33852295600809)
INFO flwr 2024-04-29 01:52:19,049 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:52:19,049 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:52:29,610 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:52:31,131 | server.py:125 | fit progress: (8, 1.550599455833435, {'accuracy': 0.9115, 'data_size': 10000}, 109.42067270900588)
INFO flwr 2024-04-29 01:52:31,131 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:52:31,131 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:52:42,010 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:52:43,472 | server.py:125 | fit progress: (9, 1.558351993560791, {'accuracy': 0.9041, 'data_size': 10000}, 121.76158907401259)
INFO flwr 2024-04-29 01:52:43,472 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:52:43,472 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:52:54,654 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:52:55,960 | server.py:125 | fit progress: (10, 1.5494308471679688, {'accuracy': 0.9125, 'data_size': 10000}, 134.25026376801543)
INFO flwr 2024-04-29 01:52:55,961 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:52:55,961 | server.py:153 | FL finished in 134.2508238540031
INFO flwr 2024-04-29 01:52:55,961 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:52:55,966 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2165869e-03,  9.4675440e-03, -2.3851108e-03, -6.7973306e-04,
       -3.0241483e-05, -1.9276943e-03,  1.0349541e-03, -6.0806568e-03,
       -5.4577966e-03,  4.8422157e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00102577, -0.00117189,  0.0004079 , -0.00366574,  0.0016427 ,
        0.00373517,  0.00024864,  0.00344124,  0.00034847, -0.0039607 ],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00060499,  0.00131247, -0.00015931, -0.00372556,  0.00057236,
        0.00228632,  0.00058296,  0.00225348,  0.00137193, -0.0038896 ],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.6664092e-03, -1.5320987e-03,  2.0384488e-03,  9.5646700e-04,
        3.8276467e-05,  1.4157185e-03, -7.8508783e-05,  9.1928792e-05,
       -9.4794790e-04, -3.1582537e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00244314,  0.0004543 , -0.00025544, -0.00149602, -0.0005574 ,
        0.00084828, -0.00266764, -0.00080015,  0.0015738 ,  0.00045719],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.2718516e-04,  1.7472140e-04,  4.3255204e-04,  8.3755599e-03,
        5.9416929e-05, -9.3903858e-03,  1.3383990e-03,  2.9589632e-03,
       -2.0197616e-03, -1.4022146e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.8306629e-05,  3.6178522e-03, -5.9335126e-04, -6.4088387e-04,
        1.6524987e-03,  1.4727220e-03, -4.0885288e-04, -1.4072850e-03,
       -7.8471191e-03,  4.1727521e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.2655036e-05,  4.6133928e-04,  5.0795386e-03, -4.5722323e-03,
        4.5961436e-04,  3.1954171e-03, -2.3526361e-04, -8.0467330e-04,
       -3.6560106e-03,  4.9669703e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.52300170e-04, -2.15361470e-05,  1.50398380e-04,  2.56686908e-04,
       -5.80063439e-04, -7.61713833e-04, -1.16538344e-04, -5.09029378e-05,
        9.34578944e-04,  3.68262517e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5609250e-03,  1.8671110e-03, -3.3401660e-04,  9.7269332e-04,
       -1.1253657e-03, -3.0136583e-03,  1.9654555e-03, -6.6203633e-05,
        1.0594134e-03,  2.3553801e-04], dtype=float32)])]}
INFO flwr 2024-04-29 01:52:55,967 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:52:55,967 | app.py:229 | app_fit: losses_centralized [(0, 2.3013083934783936), (1, 1.6930564641952515), (2, 1.5995779037475586), (3, 1.5747404098510742), (4, 1.5786352157592773), (5, 1.5608981847763062), (6, 1.5527812242507935), (7, 1.5612910985946655), (8, 1.550599455833435), (9, 1.558351993560791), (10, 1.5494308471679688)]
INFO flwr 2024-04-29 01:52:55,967 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0975), (1, 0.7804), (2, 0.8692), (3, 0.8901), (4, 0.886), (5, 0.9022), (6, 0.9102), (7, 0.9007), (8, 0.9115), (9, 0.9041), (10, 0.9125)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9125
wandb:     loss 1.54943
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_015020-7plmunz6
wandb: Find logs at: ./wandb/offline-run-20240429_015020-7plmunz6/logs
INFO flwr 2024-04-29 01:52:59,636 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 10
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:53:00,396 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1639927)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1639927)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:53:05,343	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:53:05,697	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:53:06,036	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:53:06,038	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:53:17,038 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 173240839578.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78531788390.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 01:53:17,038 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:53:17,039 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:53:17,056 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:53:17,057 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:53:17,057 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:53:17,057 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:53:20,309 | server.py:94 | initial parameters (loss, other metrics): 2.304145574569702, {'accuracy': 0.0875, 'data_size': 10000}
INFO flwr 2024-04-29 01:53:20,309 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:53:20,310 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1645770)[0m 2024-04-29 01:53:23.219019: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1645770)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1645770)[0m 2024-04-29 01:53:25.450159: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1645779)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1645779)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1645778)[0m 2024-04-29 01:53:23.371519: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1645778)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1645771)[0m 2024-04-29 01:53:25.822521: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:53:44,724 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:53:46,257 | server.py:125 | fit progress: (1, 2.032089948654175, {'accuracy': 0.4224, 'data_size': 10000}, 25.947208565019537)
INFO flwr 2024-04-29 01:53:46,257 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:53:46,257 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:53:57,234 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:53:58,731 | server.py:125 | fit progress: (2, 1.7957210540771484, {'accuracy': 0.6636, 'data_size': 10000}, 38.421755429997575)
INFO flwr 2024-04-29 01:53:58,732 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:53:58,732 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:54:09,220 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:54:10,707 | server.py:125 | fit progress: (3, 1.6674731969833374, {'accuracy': 0.793, 'data_size': 10000}, 50.397075115994085)
INFO flwr 2024-04-29 01:54:10,707 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:54:10,707 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:54:21,490 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:54:22,782 | server.py:125 | fit progress: (4, 1.6521506309509277, {'accuracy': 0.8083, 'data_size': 10000}, 62.472004251001636)
INFO flwr 2024-04-29 01:54:22,782 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:54:22,782 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:54:32,743 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:54:34,096 | server.py:125 | fit progress: (5, 1.6436771154403687, {'accuracy': 0.8164, 'data_size': 10000}, 73.78646045000642)
INFO flwr 2024-04-29 01:54:34,096 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:54:34,096 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:54:44,586 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:54:46,072 | server.py:125 | fit progress: (6, 1.6492605209350586, {'accuracy': 0.8115, 'data_size': 10000}, 85.7626949849946)
INFO flwr 2024-04-29 01:54:46,073 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:54:46,073 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:54:56,455 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:54:57,938 | server.py:125 | fit progress: (7, 1.642339825630188, {'accuracy': 0.8183, 'data_size': 10000}, 97.62847717601107)
INFO flwr 2024-04-29 01:54:57,938 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:54:57,939 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:55:08,993 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:55:10,536 | server.py:125 | fit progress: (8, 1.6373628377914429, {'accuracy': 0.8227, 'data_size': 10000}, 110.22600865599816)
INFO flwr 2024-04-29 01:55:10,536 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:55:10,536 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:55:21,242 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:55:22,729 | server.py:125 | fit progress: (9, 1.6327732801437378, {'accuracy': 0.8284, 'data_size': 10000}, 122.41953182799625)
INFO flwr 2024-04-29 01:55:22,729 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:55:22,730 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:55:33,317 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:55:34,619 | server.py:125 | fit progress: (10, 1.6360169649124146, {'accuracy': 0.8235, 'data_size': 10000}, 134.30955831200117)
INFO flwr 2024-04-29 01:55:34,619 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:55:34,620 | server.py:153 | FL finished in 134.31005993901636
INFO flwr 2024-04-29 01:55:34,620 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:55:34,627 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.8654098e-04,  2.2006950e-03,  3.0935509e-04,  1.2661475e-03,
       -2.6643797e-06, -4.8598698e-03, -2.6672333e-03,  3.5465523e-03,
        1.5516116e-03, -1.0580365e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.7498541e-03,  1.6115129e-03, -1.5798194e-02,  1.0011123e-02,
       -3.9268059e-08, -3.3190073e-03,  1.7826316e-03,  1.4078702e-02,
        1.6985767e-03, -1.1815128e-02], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00103223,  0.00159799,  0.00544887,  0.00539279, -0.00010039,
       -0.00308054,  0.00266771, -0.00250713, -0.01303677,  0.00464974],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.0593141e-03,  5.0463211e-03, -8.8555375e-03,  1.3469368e-03,
       -7.7758555e-09,  1.1687461e-02,  6.9056987e-04, -3.7738821e-03,
       -1.0047738e-02,  6.9652130e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.3315610e-03, -6.4961736e-05, -4.6771672e-03,  5.7140663e-03,
       -1.7489741e-08, -6.3630659e-03,  1.8494324e-04,  6.1602299e-03,
       -1.0395237e-03, -5.2460409e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1580313e-03, -6.9454208e-04, -2.0489458e-03, -8.4929122e-03,
       -4.6385638e-09,  4.4887434e-03, -3.5210841e-03,  7.0218486e-03,
        7.3556695e-03, -7.2667846e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.3953800e-04,  1.5657098e-04, -4.3677362e-03, -8.4696198e-03,
       -1.1673936e-08,  2.9836162e-03,  5.1659085e-03,  1.4087255e-03,
        3.5301677e-03, -7.4714370e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.2998576e-03,  7.1381908e-03, -4.6167038e-03, -1.7916118e-03,
       -2.2039275e-08, -6.4189369e-03,  2.9493426e-03,  4.0442351e-04,
        2.9680629e-03, -1.9325851e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.4997975e-04,  2.6759922e-03, -4.8966357e-03,  7.2550476e-03,
       -4.5533305e-08, -7.3924167e-03,  1.7943800e-03, -3.7638317e-03,
        6.9517125e-03, -1.8742023e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.7516427e-04,  5.4965360e-04,  3.5667807e-04,  6.3472646e-03,
       -1.6107347e-08,  1.3180608e-03,  6.8230904e-04,  1.1463351e-05,
       -1.0123084e-02,  1.4328643e-03], dtype=float32)])]}
INFO flwr 2024-04-29 01:55:34,628 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:55:34,628 | app.py:229 | app_fit: losses_centralized [(0, 2.304145574569702), (1, 2.032089948654175), (2, 1.7957210540771484), (3, 1.6674731969833374), (4, 1.6521506309509277), (5, 1.6436771154403687), (6, 1.6492605209350586), (7, 1.642339825630188), (8, 1.6373628377914429), (9, 1.6327732801437378), (10, 1.6360169649124146)]
INFO flwr 2024-04-29 01:55:34,628 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0875), (1, 0.4224), (2, 0.6636), (3, 0.793), (4, 0.8083), (5, 0.8164), (6, 0.8115), (7, 0.8183), (8, 0.8227), (9, 0.8284), (10, 0.8235)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8235
wandb:     loss 1.63602
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_015259-f02f96ua
wandb: Find logs at: ./wandb/offline-run-20240429_015259-f02f96ua/logs
INFO flwr 2024-04-29 01:55:38,279 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:55:39,031 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1645770)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1645770)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:55:43,720	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:55:44,094	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:55:44,441	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:55:44,442	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:55:55,432 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 173258888602.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'object_store_memory': 78539523686.0}
INFO flwr 2024-04-29 01:55:55,432 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:55:55,432 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:55:55,451 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:55:55,453 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:55:55,453 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:55:55,453 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:55:58,749 | server.py:94 | initial parameters (loss, other metrics): 2.3045389652252197, {'accuracy': 0.0831, 'data_size': 10000}
INFO flwr 2024-04-29 01:55:58,749 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:55:58,750 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1650993)[0m 2024-04-29 01:56:01.572242: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1650993)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1650993)[0m 2024-04-29 01:56:03.859445: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1651000)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1651000)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1650992)[0m 2024-04-29 01:56:01.699984: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1650992)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1650991)[0m 2024-04-29 01:56:04.022453: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:56:27,014 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:56:28,511 | server.py:125 | fit progress: (1, 1.8143978118896484, {'accuracy': 0.6812, 'data_size': 10000}, 29.76124367999728)
INFO flwr 2024-04-29 01:56:28,511 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:56:28,511 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:56:43,723 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:56:45,233 | server.py:125 | fit progress: (2, 1.730041265487671, {'accuracy': 0.7381, 'data_size': 10000}, 46.48310992799816)
INFO flwr 2024-04-29 01:56:45,233 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:56:45,233 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:56:59,554 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 01:57:01,055 | server.py:125 | fit progress: (3, 1.60049307346344, {'accuracy': 0.8835, 'data_size': 10000}, 62.3049994489993)
INFO flwr 2024-04-29 01:57:01,055 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 01:57:01,055 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:57:14,248 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 01:57:15,528 | server.py:125 | fit progress: (4, 1.5718791484832764, {'accuracy': 0.9051, 'data_size': 10000}, 76.77866354701109)
INFO flwr 2024-04-29 01:57:15,529 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 01:57:15,529 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:57:29,224 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 01:57:30,525 | server.py:125 | fit progress: (5, 1.56926429271698, {'accuracy': 0.9065, 'data_size': 10000}, 91.7754762689874)
INFO flwr 2024-04-29 01:57:30,525 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 01:57:30,526 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:57:44,543 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 01:57:46,108 | server.py:125 | fit progress: (6, 1.5731695890426636, {'accuracy': 0.9036, 'data_size': 10000}, 107.35824187999242)
INFO flwr 2024-04-29 01:57:46,108 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 01:57:46,108 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:58:00,064 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 01:58:01,565 | server.py:125 | fit progress: (7, 1.5671864748001099, {'accuracy': 0.9043, 'data_size': 10000}, 122.81511620301171)
INFO flwr 2024-04-29 01:58:01,565 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 01:58:01,565 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:58:14,465 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 01:58:15,959 | server.py:125 | fit progress: (8, 1.569506049156189, {'accuracy': 0.9012, 'data_size': 10000}, 137.20931103499606)
INFO flwr 2024-04-29 01:58:15,959 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 01:58:15,959 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:58:29,256 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 01:58:30,757 | server.py:125 | fit progress: (9, 1.5671216249465942, {'accuracy': 0.9049, 'data_size': 10000}, 152.00756371600437)
INFO flwr 2024-04-29 01:58:30,757 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 01:58:30,758 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:58:44,591 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 01:58:45,873 | server.py:125 | fit progress: (10, 1.5599018335342407, {'accuracy': 0.9102, 'data_size': 10000}, 167.1231095569965)
INFO flwr 2024-04-29 01:58:45,873 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 01:58:45,873 | server.py:153 | FL finished in 167.12353794201044
INFO flwr 2024-04-29 01:58:45,873 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 01:58:45,881 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00012475,  0.00163552,  0.00260612,  0.00010309,  0.00145241,
       -0.00459125, -0.00137551,  0.00037133,  0.00106369, -0.00114062],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.8313227e-04,  1.3664624e-03,  8.8248041e-04,  1.0034889e-04,
        1.7531804e-03,  1.9042303e-03, -6.4370608e-05, -1.8897646e-03,
       -4.1375374e-03, -5.9812272e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.5400631e-04,  1.2231992e-03,  5.3623359e-04, -4.2537050e-03,
        1.0105711e-03,  5.2635786e-03,  1.1663837e-04,  1.7502278e-05,
       -1.5401157e-03, -1.9198251e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0394311e-04, -7.3314813e-04, -7.2247261e-05, -3.6531602e-04,
       -1.2406827e-03,  4.1597406e-03,  7.6721265e-04,  1.2970833e-03,
       -3.9881747e-03, -2.8378026e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.3909002e-04, -1.6926911e-03, -8.1114884e-04,  2.0444121e-03,
        7.1507256e-04,  1.3099608e-03,  3.2900891e-04,  6.8533287e-04,
       -8.6810469e-05, -1.9539879e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00140776,  0.00056028, -0.00186114, -0.00022431, -0.00012581,
       -0.00074997,  0.0001398 ,  0.00068939,  0.00255142, -0.00238737],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.0031205e-05,  7.2556071e-04,  1.3919971e-03, -1.3787209e-03,
        2.0979689e-03,  8.6032545e-05, -2.0978961e-03,  6.7513552e-04,
        6.8336725e-04, -2.1033699e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00035456, -0.0008131 , -0.00022907,  0.00087623,  0.00161005,
        0.00221564, -0.00111005, -0.0002595 , -0.00155383, -0.00038175],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00091722, -0.0001558 , -0.00023266, -0.00150674,  0.00194485,
        0.00051086,  0.00013438,  0.00334807,  0.00189287, -0.00501854],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00018131, -0.0002171 ,  0.00026168,  0.00066156,  0.00070947,
        0.00100464, -0.00044475,  0.00052906, -0.00157436, -0.00074884],
      dtype=float32)])]}
INFO flwr 2024-04-29 01:58:45,881 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 01:58:45,882 | app.py:229 | app_fit: losses_centralized [(0, 2.3045389652252197), (1, 1.8143978118896484), (2, 1.730041265487671), (3, 1.60049307346344), (4, 1.5718791484832764), (5, 1.56926429271698), (6, 1.5731695890426636), (7, 1.5671864748001099), (8, 1.569506049156189), (9, 1.5671216249465942), (10, 1.5599018335342407)]
INFO flwr 2024-04-29 01:58:45,882 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0831), (1, 0.6812), (2, 0.7381), (3, 0.8835), (4, 0.9051), (5, 0.9065), (6, 0.9036), (7, 0.9043), (8, 0.9012), (9, 0.9049), (10, 0.9102)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9102
wandb:     loss 1.5599
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_015538-ge4e2lqu
wandb: Find logs at: ./wandb/offline-run-20240429_015538-ge4e2lqu/logs
INFO flwr 2024-04-29 01:58:49,535 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 01:58:50,251 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1650991)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1650991)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 01:58:55,102	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 01:58:55,457	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 01:58:55,801	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 01:58:55,803	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 01:59:06,821 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'node:10.20.240.13': 1.0, 'memory': 173280203367.0, 'object_store_memory': 78548658585.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 01:59:06,821 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 01:59:06,821 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 01:59:06,838 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 01:59:06,840 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 01:59:06,841 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 01:59:06,841 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 01:59:10,808 | server.py:94 | initial parameters (loss, other metrics): 2.2993783950805664, {'accuracy': 0.1101, 'data_size': 10000}
INFO flwr 2024-04-29 01:59:10,809 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 01:59:10,809 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1657369)[0m 2024-04-29 01:59:12.981580: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1657369)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1657369)[0m 2024-04-29 01:59:15.213687: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1657373)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1657373)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1657376)[0m 2024-04-29 01:59:13.116977: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1657376)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1657376)[0m 2024-04-29 01:59:15.425920: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 01:59:39,064 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 01:59:40,600 | server.py:125 | fit progress: (1, 1.7666306495666504, {'accuracy': 0.7265, 'data_size': 10000}, 29.791223264997825)
INFO flwr 2024-04-29 01:59:40,601 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 01:59:40,601 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 01:59:54,385 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 01:59:55,910 | server.py:125 | fit progress: (2, 1.5892547369003296, {'accuracy': 0.8942, 'data_size': 10000}, 45.10059567599092)
INFO flwr 2024-04-29 01:59:55,910 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 01:59:55,910 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:00:09,384 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:00:10,917 | server.py:125 | fit progress: (3, 1.5862433910369873, {'accuracy': 0.8891, 'data_size': 10000}, 60.108242361980956)
INFO flwr 2024-04-29 02:00:10,918 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:00:10,918 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:00:24,469 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:00:25,779 | server.py:125 | fit progress: (4, 1.5958281755447388, {'accuracy': 0.8795, 'data_size': 10000}, 74.96993880800437)
INFO flwr 2024-04-29 02:00:25,779 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:00:25,780 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:00:39,739 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:00:41,014 | server.py:125 | fit progress: (5, 1.5667576789855957, {'accuracy': 0.9038, 'data_size': 10000}, 90.20432529799291)
INFO flwr 2024-04-29 02:00:41,014 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:00:41,014 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:00:54,882 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:00:56,424 | server.py:125 | fit progress: (6, 1.561800479888916, {'accuracy': 0.9098, 'data_size': 10000}, 105.61490768098156)
INFO flwr 2024-04-29 02:00:56,424 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:00:56,425 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:01:09,857 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:01:11,367 | server.py:125 | fit progress: (7, 1.5607075691223145, {'accuracy': 0.9083, 'data_size': 10000}, 120.55746661298326)
INFO flwr 2024-04-29 02:01:11,367 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:01:11,367 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:01:25,711 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:01:27,256 | server.py:125 | fit progress: (8, 1.5575472116470337, {'accuracy': 0.9114, 'data_size': 10000}, 136.44710180998663)
INFO flwr 2024-04-29 02:01:27,257 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:01:27,257 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:01:41,646 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:01:43,156 | server.py:125 | fit progress: (9, 1.566361427307129, {'accuracy': 0.9026, 'data_size': 10000}, 152.34662971500074)
INFO flwr 2024-04-29 02:01:43,156 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:01:43,156 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:01:56,961 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:01:58,284 | server.py:125 | fit progress: (10, 1.5596818923950195, {'accuracy': 0.9077, 'data_size': 10000}, 167.4750574689824)
INFO flwr 2024-04-29 02:01:58,284 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:01:58,285 | server.py:153 | FL finished in 167.47547277098056
INFO flwr 2024-04-29 02:01:58,285 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:01:58,290 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5526436e-03, -3.4822707e-04,  1.9747836e-03, -1.0033118e-04,
       -1.1440380e-03, -3.3531091e-03,  8.0456084e-05,  3.1321305e-03,
        1.6997732e-03, -3.4939998e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0003416 ,  0.00137963, -0.00047459,  0.00041105, -0.00114322,
       -0.00164801, -0.00075903, -0.00165602,  0.00384043,  0.00039142],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.3380796e-04, -1.9032866e-04,  6.5231405e-04, -8.2339387e-04,
        1.7939167e-03, -1.3962286e-03,  7.4809024e-05,  8.5154745e-05,
        9.5005851e-04, -1.6800662e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00050852, -0.00061347,  0.00038382, -0.00013101,  0.00075409,
        0.00170166,  0.00038099,  0.00084047, -0.00123431, -0.00259068],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00069554, -0.00121264,  0.00267068, -0.00257218,  0.00124423,
        0.0017677 , -0.00018268, -0.00344729, -0.00095451,  0.00338233],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.4847077e-04,  4.0257920e-04,  1.0206351e-03, -1.2691881e-03,
       -7.9034566e-05,  1.1253563e-03, -7.7131687e-04,  8.0152199e-04,
        9.7005992e-05, -1.8759675e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00010609,  0.00035187, -0.0002286 ,  0.00256261,  0.00054437,
       -0.0021782 , -0.00040746, -0.00015111,  0.00042366, -0.00081097],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00050459, -0.00022905,  0.00113061, -0.00164312,  0.00074114,
        0.00040506,  0.00018893, -0.00147968,  0.00025435,  0.00113643],
      dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.7926133e-03, -5.9193745e-04,  1.4887897e-03,  9.3959522e-04,
        9.4368920e-04,  3.7283441e-03, -6.4456937e-05, -1.0544203e-03,
       -9.9535496e-04, -1.6015412e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6502770e-04,  1.0085970e-03,  2.3364804e-03,  1.4769128e-03,
        7.5621007e-04, -5.7035137e-05, -5.1621287e-03,  5.0693669e-04,
        6.4079301e-04, -1.0416873e-03], dtype=float32)])]}
INFO flwr 2024-04-29 02:01:58,290 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:01:58,290 | app.py:229 | app_fit: losses_centralized [(0, 2.2993783950805664), (1, 1.7666306495666504), (2, 1.5892547369003296), (3, 1.5862433910369873), (4, 1.5958281755447388), (5, 1.5667576789855957), (6, 1.561800479888916), (7, 1.5607075691223145), (8, 1.5575472116470337), (9, 1.566361427307129), (10, 1.5596818923950195)]
INFO flwr 2024-04-29 02:01:58,291 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1101), (1, 0.7265), (2, 0.8942), (3, 0.8891), (4, 0.8795), (5, 0.9038), (6, 0.9098), (7, 0.9083), (8, 0.9114), (9, 0.9026), (10, 0.9077)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9077
wandb:     loss 1.55968
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_015849-au835kpo
wandb: Find logs at: ./wandb/offline-run-20240429_015849-au835kpo/logs
INFO flwr 2024-04-29 02:02:01,927 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:02:02,620 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1657368)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1657368)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:02:07,546	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:02:07,896	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:02:08,243	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:02:08,245	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:02:19,234 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78523975680.0, 'node:10.20.240.13': 1.0, 'memory': 173222609920.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 02:02:19,235 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:02:19,235 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:02:19,251 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:02:19,252 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:02:19,252 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:02:19,252 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:02:22,409 | server.py:94 | initial parameters (loss, other metrics): 2.29986310005188, {'accuracy': 0.1558, 'data_size': 10000}
INFO flwr 2024-04-29 02:02:22,409 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:02:22,410 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1662617)[0m 2024-04-29 02:02:25.458849: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1662617)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1662620)[0m 2024-04-29 02:02:27.779139: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1662620)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1662620)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1662619)[0m 2024-04-29 02:02:25.650736: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1662619)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1662619)[0m 2024-04-29 02:02:27.933119: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:02:51,453 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:02:52,956 | server.py:125 | fit progress: (1, 1.6687183380126953, {'accuracy': 0.8275, 'data_size': 10000}, 30.54581847199006)
INFO flwr 2024-04-29 02:02:52,956 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:02:52,956 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:03:08,067 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:03:09,569 | server.py:125 | fit progress: (2, 1.5892995595932007, {'accuracy': 0.8854, 'data_size': 10000}, 47.15896215298562)
INFO flwr 2024-04-29 02:03:09,569 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:03:09,569 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:03:23,100 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:03:24,610 | server.py:125 | fit progress: (3, 1.5756064653396606, {'accuracy': 0.8949, 'data_size': 10000}, 62.20038961598766)
INFO flwr 2024-04-29 02:03:24,610 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:03:24,611 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:03:39,938 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:03:41,234 | server.py:125 | fit progress: (4, 1.5749973058700562, {'accuracy': 0.8932, 'data_size': 10000}, 78.82382836399483)
INFO flwr 2024-04-29 02:03:41,234 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:03:41,234 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:03:55,318 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:03:56,572 | server.py:125 | fit progress: (5, 1.5764113664627075, {'accuracy': 0.891, 'data_size': 10000}, 94.16214448897517)
INFO flwr 2024-04-29 02:03:56,572 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:03:56,572 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:04:10,710 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:04:12,226 | server.py:125 | fit progress: (6, 1.5608539581298828, {'accuracy': 0.9056, 'data_size': 10000}, 109.81602600897895)
INFO flwr 2024-04-29 02:04:12,226 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:04:12,226 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:04:25,936 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:04:27,429 | server.py:125 | fit progress: (7, 1.5748599767684937, {'accuracy': 0.892, 'data_size': 10000}, 125.01875387097243)
INFO flwr 2024-04-29 02:04:27,429 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:04:27,429 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:04:41,885 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:04:43,384 | server.py:125 | fit progress: (8, 1.5614051818847656, {'accuracy': 0.9045, 'data_size': 10000}, 140.97404485297739)
INFO flwr 2024-04-29 02:04:43,384 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:04:43,384 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:04:56,474 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:04:57,988 | server.py:125 | fit progress: (9, 1.5527011156082153, {'accuracy': 0.914, 'data_size': 10000}, 155.5786124529841)
INFO flwr 2024-04-29 02:04:57,989 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:04:57,989 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:05:12,380 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:05:13,669 | server.py:125 | fit progress: (10, 1.5700104236602783, {'accuracy': 0.8951, 'data_size': 10000}, 171.2589827249758)
INFO flwr 2024-04-29 02:05:13,669 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:05:13,669 | server.py:153 | FL finished in 171.2594246629742
INFO flwr 2024-04-29 02:05:13,669 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:05:13,675 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00051462, -0.00059479,  0.00076533,  0.0026789 ,  0.00261722,
       -0.00030388, -0.00152362, -0.00773256,  0.00533859, -0.00073041],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00038848, -0.00031936,  0.0008039 ,  0.00078707,  0.00136351,
       -0.00182823, -0.00076704, -0.00045089,  0.00165418, -0.00163148],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00032242,  0.00150746, -0.00136196, -0.00138491, -0.00052705,
       -0.00139454,  0.00044222, -0.00128439,  0.00219538,  0.0014855 ],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.0001373 ,  0.00066111,  0.00218844, -0.00010088, -0.0003051 ,
        0.00122787, -0.00035218, -0.00056558, -0.00202982, -0.00058638],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.7714292e-05, -1.2182824e-03,  1.1968685e-03, -7.2293384e-05,
       -1.2607699e-03,  3.9338158e-03, -1.8123969e-03, -9.9356729e-04,
       -1.4344862e-03,  1.5635398e-03], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.3018726e-04,  2.5596833e-04, -1.0146633e-04,  5.4060272e-04,
       -2.4659280e-04, -9.2614669e-04, -2.6649624e-04, -1.2250079e-05,
        5.8318849e-04, -1.5685818e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00026957,  0.00027294,  0.00175802,  0.00019184, -0.00019249,
        0.00020001, -0.00101284,  0.00038367, -0.00068535, -0.00064607],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5090507e-03,  1.0573126e-05,  8.8746042e-04, -9.9864941e-05,
       -1.1523099e-04, -2.5258274e-04,  5.5513341e-05, -1.5557766e-03,
        1.7848870e-03, -2.2239068e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4124469e-05,  4.0191421e-04,  1.5162404e-04,  3.9525770e-05,
        2.2352957e-05, -8.1867544e-04,  3.0508239e-04, -6.2888395e-04,
        5.0768466e-04,  3.3614775e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.5328132e-04, -1.4190287e-04,  4.4156151e-04,  1.7428264e-04,
       -3.6485732e-04,  4.0461589e-04, -9.1424459e-05,  7.7124184e-04,
       -4.1807472e-04, -5.2201311e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:05:13,675 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:05:13,675 | app.py:229 | app_fit: losses_centralized [(0, 2.29986310005188), (1, 1.6687183380126953), (2, 1.5892995595932007), (3, 1.5756064653396606), (4, 1.5749973058700562), (5, 1.5764113664627075), (6, 1.5608539581298828), (7, 1.5748599767684937), (8, 1.5614051818847656), (9, 1.5527011156082153), (10, 1.5700104236602783)]
INFO flwr 2024-04-29 02:05:13,675 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1558), (1, 0.8275), (2, 0.8854), (3, 0.8949), (4, 0.8932), (5, 0.891), (6, 0.9056), (7, 0.892), (8, 0.9045), (9, 0.914), (10, 0.8951)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8951
wandb:     loss 1.57001
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_020202-s7x9flp5
wandb: Find logs at: ./wandb/offline-run-20240429_020202-s7x9flp5/logs
INFO flwr 2024-04-29 02:05:17,308 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:05:18,002 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1662617)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1662617)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:05:23,049	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:05:23,411	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:05:23,760	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:05:23,761	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:05:34,722 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:10.20.240.13': 1.0, 'memory': 173191701504.0, 'CPU': 64.0, 'object_store_memory': 78510729216.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0}
INFO flwr 2024-04-29 02:05:34,723 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:05:34,723 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:05:34,742 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:05:34,743 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:05:34,743 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:05:34,743 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:05:38,861 | server.py:94 | initial parameters (loss, other metrics): 2.304189682006836, {'accuracy': 0.105, 'data_size': 10000}
INFO flwr 2024-04-29 02:05:38,863 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:05:38,865 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1668995)[0m 2024-04-29 02:05:40.758918: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1668995)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1668997)[0m 2024-04-29 02:05:43.112823: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1668997)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1668997)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1668994)[0m 2024-04-29 02:05:40.924962: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1668994)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1668994)[0m 2024-04-29 02:05:43.187593: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:06:05,574 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:06:07,124 | server.py:125 | fit progress: (1, 1.792099952697754, {'accuracy': 0.6946, 'data_size': 10000}, 28.259805213980144)
INFO flwr 2024-04-29 02:06:07,124 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:06:07,124 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:06:22,845 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:06:24,325 | server.py:125 | fit progress: (2, 1.5840516090393066, {'accuracy': 0.8927, 'data_size': 10000}, 45.46144487298443)
INFO flwr 2024-04-29 02:06:24,326 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:06:24,326 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:06:38,725 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:06:40,293 | server.py:125 | fit progress: (3, 1.5823209285736084, {'accuracy': 0.8917, 'data_size': 10000}, 61.429456593992654)
INFO flwr 2024-04-29 02:06:40,294 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:06:40,294 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:06:53,738 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:06:55,016 | server.py:125 | fit progress: (4, 1.5672345161437988, {'accuracy': 0.9036, 'data_size': 10000}, 76.15179464398534)
INFO flwr 2024-04-29 02:06:55,016 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:06:55,016 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:07:07,711 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:07:08,990 | server.py:125 | fit progress: (5, 1.5611934661865234, {'accuracy': 0.9072, 'data_size': 10000}, 90.12636425098754)
INFO flwr 2024-04-29 02:07:08,991 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:07:08,991 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:07:22,774 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:07:24,277 | server.py:125 | fit progress: (6, 1.5647684335708618, {'accuracy': 0.9038, 'data_size': 10000}, 105.41288873497979)
INFO flwr 2024-04-29 02:07:24,277 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:07:24,277 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:07:38,101 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:07:39,631 | server.py:125 | fit progress: (7, 1.568881630897522, {'accuracy': 0.8991, 'data_size': 10000}, 120.76723897299962)
INFO flwr 2024-04-29 02:07:39,632 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:07:39,632 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:07:55,938 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:07:57,434 | server.py:125 | fit progress: (8, 1.5589327812194824, {'accuracy': 0.909, 'data_size': 10000}, 138.5702955039742)
INFO flwr 2024-04-29 02:07:57,435 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:07:57,435 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:08:11,399 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:08:12,946 | server.py:125 | fit progress: (9, 1.5580723285675049, {'accuracy': 0.9086, 'data_size': 10000}, 154.08231351297582)
INFO flwr 2024-04-29 02:08:12,947 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:08:12,947 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:08:26,671 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:08:27,923 | server.py:125 | fit progress: (10, 1.5888032913208008, {'accuracy': 0.8776, 'data_size': 10000}, 169.0592651599727)
INFO flwr 2024-04-29 02:08:27,923 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:08:27,924 | server.py:153 | FL finished in 169.05967789699207
INFO flwr 2024-04-29 02:08:27,924 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:08:27,932 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.19979648e-04,  5.86289214e-04,  3.76538082e-04,  1.02704694e-03,
        3.00564221e-03, -1.42762519e-03,  1.15844785e-04, -2.44690746e-04,
       -3.03755002e-03, -8.14649611e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3082093e-04, -3.0644334e-04, -6.7141911e-05, -2.5807775e-04,
        1.0743001e-03,  5.4158311e-04,  1.7179096e-04,  1.9085873e-04,
        1.0369343e-04, -1.5813545e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00044892, -0.00077177,  0.00029663, -0.00037559,  0.0022132 ,
        0.00140532, -0.00063369, -0.00076738, -0.00024575, -0.00156986],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.7515360e-05,  2.5855136e-04, -1.9152625e-04,  2.1092274e-04,
        1.0831020e-03, -6.2769636e-06,  2.3354178e-06, -4.5690153e-04,
       -6.4488774e-04, -1.5773127e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 9.4481162e-05, -1.4664559e-04,  4.5775718e-04, -8.1540573e-05,
       -9.7910152e-04,  4.9485464e-04, -2.2771882e-04, -3.7813459e-03,
        3.2192732e-03,  9.5001707e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.8492310e-05,  8.0064079e-04,  1.9307202e-04, -3.4596672e-04,
        1.3745019e-03, -4.9838738e-05,  2.7786935e-05, -9.6386747e-04,
       -3.7218034e-04, -5.8562990e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.63447364e-05,  3.45329376e-04,  1.05344014e-04, -5.34012448e-04,
        4.93394837e-05,  1.22319337e-03, -4.37741081e-04,  4.11136396e-04,
       -9.70566005e-04, -1.65641017e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5448208e-04,  3.8516687e-04,  3.3859772e-04,  5.1612884e-04,
        4.1369049e-04,  3.7244004e-05, -5.3119333e-05, -2.4667866e-05,
       -1.0124153e-03, -4.4608844e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.7189692e-04,  3.0320653e-04, -6.1591229e-05, -1.5643202e-03,
        1.3307786e-03,  8.1579684e-04, -8.9853042e-05, -9.0325001e-04,
        1.3904625e-03, -9.4926800e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6240281e-04, -2.0724859e-04,  4.1744942e-04,  8.2931314e-05,
        1.0064450e-03,  7.9666387e-04, -4.6627602e-04, -1.7650198e-04,
       -5.3767220e-04, -6.5332977e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:08:27,932 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:08:27,932 | app.py:229 | app_fit: losses_centralized [(0, 2.304189682006836), (1, 1.792099952697754), (2, 1.5840516090393066), (3, 1.5823209285736084), (4, 1.5672345161437988), (5, 1.5611934661865234), (6, 1.5647684335708618), (7, 1.568881630897522), (8, 1.5589327812194824), (9, 1.5580723285675049), (10, 1.5888032913208008)]
INFO flwr 2024-04-29 02:08:27,932 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.105), (1, 0.6946), (2, 0.8927), (3, 0.8917), (4, 0.9036), (5, 0.9072), (6, 0.9038), (7, 0.8991), (8, 0.909), (9, 0.9086), (10, 0.8776)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8776
wandb:     loss 1.5888
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_020517-glpv481f
wandb: Find logs at: ./wandb/offline-run-20240429_020517-glpv481f/logs
INFO flwr 2024-04-29 02:08:31,598 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:08:32,277 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1668990)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1668990)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:08:37,194	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:08:37,613	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:08:37,985	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:08:37,987	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:08:48,953 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'CPU': 64.0, 'object_store_memory': 78525942988.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 173227200308.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 02:08:48,953 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:08:48,953 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:08:48,970 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:08:48,972 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:08:48,972 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:08:48,972 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:08:52,412 | server.py:94 | initial parameters (loss, other metrics): 2.3055524826049805, {'accuracy': 0.0545, 'data_size': 10000}
INFO flwr 2024-04-29 02:08:52,413 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:08:52,413 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1675440)[0m 2024-04-29 02:08:55.124539: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1675440)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1675380)[0m 2024-04-29 02:08:57.406420: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1675420)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1675420)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1675352)[0m 2024-04-29 02:08:55.180397: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1675352)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1675352)[0m 2024-04-29 02:08:57.472190: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:09:22,140 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:09:23,689 | server.py:125 | fit progress: (1, 1.7393027544021606, {'accuracy': 0.7342, 'data_size': 10000}, 31.276455915998667)
INFO flwr 2024-04-29 02:09:23,690 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:09:23,690 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:09:38,824 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:09:40,340 | server.py:125 | fit progress: (2, 1.6272958517074585, {'accuracy': 0.8401, 'data_size': 10000}, 47.92669731899514)
INFO flwr 2024-04-29 02:09:40,340 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:09:40,340 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:09:55,705 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:09:57,246 | server.py:125 | fit progress: (3, 1.5673389434814453, {'accuracy': 0.9025, 'data_size': 10000}, 64.83331273199292)
INFO flwr 2024-04-29 02:09:57,246 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:09:57,247 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:10:11,583 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:10:12,872 | server.py:125 | fit progress: (4, 1.5580711364746094, {'accuracy': 0.9105, 'data_size': 10000}, 80.45955879497342)
INFO flwr 2024-04-29 02:10:12,873 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:10:12,873 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:10:28,101 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:10:29,389 | server.py:125 | fit progress: (5, 1.565535306930542, {'accuracy': 0.9007, 'data_size': 10000}, 96.97645592098706)
INFO flwr 2024-04-29 02:10:29,390 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:10:29,390 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:10:43,899 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:10:45,370 | server.py:125 | fit progress: (6, 1.5564991235733032, {'accuracy': 0.9104, 'data_size': 10000}, 112.9570371049922)
INFO flwr 2024-04-29 02:10:45,370 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:10:45,370 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:10:59,533 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:11:01,061 | server.py:125 | fit progress: (7, 1.5633445978164673, {'accuracy': 0.9034, 'data_size': 10000}, 128.6481244059978)
INFO flwr 2024-04-29 02:11:01,061 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:11:01,061 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:11:14,183 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:11:15,683 | server.py:125 | fit progress: (8, 1.5521796941757202, {'accuracy': 0.9121, 'data_size': 10000}, 143.27051214198582)
INFO flwr 2024-04-29 02:11:15,684 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:11:15,684 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:11:29,255 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:11:30,790 | server.py:125 | fit progress: (9, 1.550740361213684, {'accuracy': 0.9151, 'data_size': 10000}, 158.37742579597398)
INFO flwr 2024-04-29 02:11:30,791 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:11:30,791 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:11:44,935 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:11:46,264 | server.py:125 | fit progress: (10, 1.572678565979004, {'accuracy': 0.8927, 'data_size': 10000}, 173.85147825698368)
INFO flwr 2024-04-29 02:11:46,265 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:11:46,265 | server.py:153 | FL finished in 173.85190334898653
INFO flwr 2024-04-29 02:11:46,265 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:11:46,270 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.2300703e-05, -1.7627382e-03,  9.7903609e-04,  4.5216631e-04,
        9.7127492e-04, -1.1123570e-03, -2.8518803e-04, -9.5341948e-04,
        2.9792532e-04,  1.4856597e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.5227953e-04,  2.1085303e-04,  1.0969541e-03, -1.4063549e-04,
       -1.2658293e-03,  1.8164174e-04, -3.0164534e-04, -6.8353176e-05,
        5.1369285e-04,  3.2567279e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.9838583e-04,  1.0493238e-05,  5.0901133e-04,  1.8385434e-04,
        1.1036802e-03,  8.0815796e-04, -4.9061771e-04, -1.7463330e-03,
       -1.1322747e-03,  1.1524992e-03], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5073147e-04, -5.5746740e-04,  3.2766347e-04,  1.3023906e-03,
        3.9697898e-05, -1.0465165e-03,  1.1034433e-05, -8.1875408e-04,
        8.5040386e-04,  4.2327338e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00025771,  0.0002749 ,  0.00064513,  0.00083955,  0.00057909,
       -0.00112225, -0.00020514,  0.00028133, -0.00054543, -0.00048938],
      dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3060805e-04, -1.9783223e-05,  5.6246924e-04, -1.4044634e-03,
       -1.2519020e-04,  1.2967245e-03, -9.7597520e-05,  8.7950309e-04,
       -7.9488219e-04, -1.6609496e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.7571521e-04, -1.2838270e-04,  6.3836254e-04, -2.4501554e-04,
        3.4047654e-04, -6.8798137e-05,  3.6334299e-05, -3.9093444e-05,
       -3.5117273e-04, -6.9279004e-06], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.8070936e-04, -4.3796437e-04, -2.1574117e-05,  3.8288822e-04,
        3.8068756e-04,  1.0996954e-04,  8.1110506e-05, -1.2944717e-04,
        2.3826459e-04, -8.8460697e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.8719489e-04, -5.6150672e-04, -1.0774581e-03,  8.5083867e-04,
        2.1181777e-04,  5.4369459e-04, -1.8117868e-04,  4.1436169e-06,
        3.5566176e-04,  4.1227879e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.0934854e-05, -2.1817033e-05,  2.0552345e-04, -3.5999787e-05,
        4.8337609e-04,  1.1133371e-03, -2.0751587e-04, -7.7821169e-04,
       -4.4498712e-04, -2.6271239e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:11:46,271 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:11:46,271 | app.py:229 | app_fit: losses_centralized [(0, 2.3055524826049805), (1, 1.7393027544021606), (2, 1.6272958517074585), (3, 1.5673389434814453), (4, 1.5580711364746094), (5, 1.565535306930542), (6, 1.5564991235733032), (7, 1.5633445978164673), (8, 1.5521796941757202), (9, 1.550740361213684), (10, 1.572678565979004)]
INFO flwr 2024-04-29 02:11:46,271 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0545), (1, 0.7342), (2, 0.8401), (3, 0.9025), (4, 0.9105), (5, 0.9007), (6, 0.9104), (7, 0.9034), (8, 0.9121), (9, 0.9151), (10, 0.8927)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8927
wandb:     loss 1.57268
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_020831-rwt0zht9
wandb: Find logs at: ./wandb/offline-run-20240429_020831-rwt0zht9/logs
INFO flwr 2024-04-29 02:11:49,915 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:11:50,626 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1675348)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1675348)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:11:55,539	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:11:55,901	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:11:56,351	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:11:56,352	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:12:07,310 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78508307251.0, 'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'memory': 173186050253.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 02:12:07,310 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:12:07,310 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:12:07,326 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:12:07,328 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:12:07,329 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:12:07,329 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:12:10,733 | server.py:94 | initial parameters (loss, other metrics): 2.2976372241973877, {'accuracy': 0.1731, 'data_size': 10000}
INFO flwr 2024-04-29 02:12:10,733 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:12:10,734 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1681502)[0m 2024-04-29 02:12:13.357864: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1681502)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1681502)[0m 2024-04-29 02:12:15.665743: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1681504)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1681504)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1681499)[0m 2024-04-29 02:12:13.618413: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1681499)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1681499)[0m 2024-04-29 02:12:15.839115: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:12:40,310 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:12:41,816 | server.py:125 | fit progress: (1, 1.808592438697815, {'accuracy': 0.6532, 'data_size': 10000}, 31.08230395501596)
INFO flwr 2024-04-29 02:12:41,816 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:12:41,817 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:12:56,192 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:12:57,711 | server.py:125 | fit progress: (2, 1.7074657678604126, {'accuracy': 0.7523, 'data_size': 10000}, 46.97744325801614)
INFO flwr 2024-04-29 02:12:57,711 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:12:57,712 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:13:10,979 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:13:12,472 | server.py:125 | fit progress: (3, 1.5731655359268188, {'accuracy': 0.8909, 'data_size': 10000}, 61.738507488014875)
INFO flwr 2024-04-29 02:13:12,473 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:13:12,473 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:13:25,650 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:13:26,961 | server.py:125 | fit progress: (4, 1.5758334398269653, {'accuracy': 0.8875, 'data_size': 10000}, 76.22722218499985)
INFO flwr 2024-04-29 02:13:26,961 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:13:26,962 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:13:40,834 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:13:42,102 | server.py:125 | fit progress: (5, 1.565586805343628, {'accuracy': 0.8974, 'data_size': 10000}, 91.36792146001244)
INFO flwr 2024-04-29 02:13:42,102 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:13:42,103 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:13:56,054 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:13:57,587 | server.py:125 | fit progress: (6, 1.5610014200210571, {'accuracy': 0.9017, 'data_size': 10000}, 106.85308234600234)
INFO flwr 2024-04-29 02:13:57,587 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:13:57,587 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:14:12,328 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:14:13,815 | server.py:125 | fit progress: (7, 1.5560334920883179, {'accuracy': 0.9061, 'data_size': 10000}, 123.0816414449946)
INFO flwr 2024-04-29 02:14:13,816 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:14:13,816 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:14:27,987 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:14:29,470 | server.py:125 | fit progress: (8, 1.5475966930389404, {'accuracy': 0.9152, 'data_size': 10000}, 138.7361435139901)
INFO flwr 2024-04-29 02:14:29,470 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:14:29,471 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:14:43,880 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:14:45,394 | server.py:125 | fit progress: (9, 1.5482269525527954, {'accuracy': 0.9141, 'data_size': 10000}, 154.66049070400186)
INFO flwr 2024-04-29 02:14:45,395 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:14:45,395 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:14:58,527 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:14:59,838 | server.py:125 | fit progress: (10, 1.5481122732162476, {'accuracy': 0.9138, 'data_size': 10000}, 169.10459142999025)
INFO flwr 2024-04-29 02:14:59,839 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:14:59,839 | server.py:153 | FL finished in 169.1051124049991
INFO flwr 2024-04-29 02:14:59,839 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:14:59,847 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1806752e-03,  3.5261787e-03, -5.9969658e-03, -9.7574230e-05,
        6.3142553e-03, -4.7701970e-04,  3.6909367e-04,  1.7026096e-04,
       -7.0978582e-05, -2.5565117e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.7874195e-04,  7.4583746e-05,  1.2623487e-03,  1.3011199e-04,
       -2.6927100e-04,  9.4122597e-04, -3.9145452e-04,  5.7155448e-03,
       -2.6507506e-03, -5.2909269e-03], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00048376, -0.00011523,  0.0008052 ,  0.00089127, -0.00019495,
       -0.00084535, -0.00033027,  0.00019387,  0.00101284, -0.0009335 ],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.6406479e-05, -5.5813850e-03,  4.9667107e-03,  5.4089705e-05,
       -2.3524037e-04,  1.3529343e-03,  8.2686114e-05, -6.6440983e-04,
        3.7596776e-04, -2.8485156e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.3944589e-04,  1.2906682e-03,  2.1050307e-03, -3.8954837e-04,
       -7.8629542e-05, -1.8168126e-03,  1.6835440e-03, -2.7388800e-03,
       -3.9440969e-05,  2.2358597e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4281753e-04, -7.9120196e-05,  1.0318188e-04, -2.3205957e-05,
       -2.8310405e-04,  2.1097013e-03, -1.9042078e-05, -5.3788116e-04,
       -1.8133558e-03,  6.8576896e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4928635e-04,  1.2957213e-03,  7.2133448e-04, -1.7547312e-04,
        2.1499766e-04, -3.2814711e-04,  6.2207233e-05,  6.7387911e-05,
        3.5429279e-05, -1.7440907e-03], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.9737061e-06,  5.1422080e-04,  4.8012770e-04,  5.2640575e-04,
        7.1115611e-04, -1.0208004e-04,  2.8200279e-04,  1.6622801e-03,
       -8.3634339e-04, -3.2307301e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.9531762e-04,  9.3440023e-05,  1.9317890e-04,  2.5089767e-03,
        6.4622291e-05, -2.2423777e-03, -9.5502146e-05, -1.7913831e-04,
       -2.0924031e-06,  1.5427305e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.4173201e-05, -9.3225288e-05,  1.0522166e-03, -2.3336306e-03,
        8.3138060e-05,  2.3368706e-05,  1.1726587e-05,  1.0448521e-03,
       -4.9425242e-04,  7.5007358e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:14:59,847 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:14:59,848 | app.py:229 | app_fit: losses_centralized [(0, 2.2976372241973877), (1, 1.808592438697815), (2, 1.7074657678604126), (3, 1.5731655359268188), (4, 1.5758334398269653), (5, 1.565586805343628), (6, 1.5610014200210571), (7, 1.5560334920883179), (8, 1.5475966930389404), (9, 1.5482269525527954), (10, 1.5481122732162476)]
INFO flwr 2024-04-29 02:14:59,848 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1731), (1, 0.6532), (2, 0.7523), (3, 0.8909), (4, 0.8875), (5, 0.8974), (6, 0.9017), (7, 0.9061), (8, 0.9152), (9, 0.9141), (10, 0.9138)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9138
wandb:     loss 1.54811
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_021150-ymvhdxxo
wandb: Find logs at: ./wandb/offline-run-20240429_021150-ymvhdxxo/logs
INFO flwr 2024-04-29 02:15:03,495 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:15:04,193 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1681498)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1681498)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:15:09,042	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:15:09,400	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:15:09,742	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:15:09,744	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:15:20,798 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78895503360.0, 'memory': 174089507840.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 02:15:20,799 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:15:20,799 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:15:20,814 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:15:20,816 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:15:20,816 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:15:20,816 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:15:24,632 | server.py:94 | initial parameters (loss, other metrics): 2.3003292083740234, {'accuracy': 0.1099, 'data_size': 10000}
INFO flwr 2024-04-29 02:15:24,633 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:15:24,633 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1687872)[0m 2024-04-29 02:15:26.932550: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1687872)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1687872)[0m 2024-04-29 02:15:29.243776: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1687872)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1687872)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1687871)[0m 2024-04-29 02:15:27.195512: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1687871)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1687871)[0m 2024-04-29 02:15:29.442163: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:15:50,757 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:15:52,264 | server.py:125 | fit progress: (1, 1.652514100074768, {'accuracy': 0.8292, 'data_size': 10000}, 27.631017198000336)
INFO flwr 2024-04-29 02:15:52,264 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:15:52,265 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:16:06,191 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:16:07,698 | server.py:125 | fit progress: (2, 1.5756752490997314, {'accuracy': 0.8937, 'data_size': 10000}, 43.06478676700499)
INFO flwr 2024-04-29 02:16:07,698 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:16:07,698 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:16:21,192 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:16:22,702 | server.py:125 | fit progress: (3, 1.5925904512405396, {'accuracy': 0.8747, 'data_size': 10000}, 58.0686049789947)
INFO flwr 2024-04-29 02:16:22,702 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:16:22,702 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:16:36,303 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:16:37,665 | server.py:125 | fit progress: (4, 1.5596942901611328, {'accuracy': 0.9071, 'data_size': 10000}, 73.03154152800562)
INFO flwr 2024-04-29 02:16:37,665 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:16:37,665 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:16:51,726 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:16:53,000 | server.py:125 | fit progress: (5, 1.5642297267913818, {'accuracy': 0.8997, 'data_size': 10000}, 88.36662687599892)
INFO flwr 2024-04-29 02:16:53,000 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:16:53,000 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:17:06,678 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:17:08,182 | server.py:125 | fit progress: (6, 1.557319164276123, {'accuracy': 0.9083, 'data_size': 10000}, 103.5490447540069)
INFO flwr 2024-04-29 02:17:08,182 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:17:08,183 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:17:22,417 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:17:23,886 | server.py:125 | fit progress: (7, 1.559070348739624, {'accuracy': 0.9063, 'data_size': 10000}, 119.25258407799993)
INFO flwr 2024-04-29 02:17:23,886 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:17:23,886 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:17:36,505 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:17:37,987 | server.py:125 | fit progress: (8, 1.554293155670166, {'accuracy': 0.9114, 'data_size': 10000}, 133.3541667299869)
INFO flwr 2024-04-29 02:17:37,987 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:17:37,988 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:17:52,581 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:17:54,143 | server.py:125 | fit progress: (9, 1.5691663026809692, {'accuracy': 0.8959, 'data_size': 10000}, 149.5105043220101)
INFO flwr 2024-04-29 02:17:54,144 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:17:54,144 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:18:08,505 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:18:09,767 | server.py:125 | fit progress: (10, 1.5622462034225464, {'accuracy': 0.9031, 'data_size': 10000}, 165.13357467899914)
INFO flwr 2024-04-29 02:18:09,767 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:18:09,767 | server.py:153 | FL finished in 165.13398713700008
INFO flwr 2024-04-29 02:18:09,767 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:18:09,772 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.5063064e-04,  6.4269443e-05,  3.1812207e-05, -1.6673766e-04,
       -1.2219194e-05,  8.4801158e-04, -7.6771545e-04,  2.4345606e-04,
       -6.4287795e-04,  8.5267646e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.53571816e-06, -7.08359039e-06,  1.06033585e-04,  5.22560549e-05,
        4.58640832e-04,  4.75583292e-05, -4.58260729e-05, -4.50149120e-04,
        2.27918543e-04, -3.79767560e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.4898743e-04, -8.1468090e-05,  1.1406577e-04,  9.2526687e-05,
        3.8025487e-04,  2.1808629e-04, -6.2312611e-06, -5.0319341e-04,
        1.8350261e-04, -1.4849543e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5041778e-04, -1.3076872e-04,  2.8182546e-04, -3.3449098e-06,
        2.1037868e-04,  2.0790477e-04,  1.4011409e-04, -6.1057886e-04,
        7.9313375e-04, -7.3819538e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5582751e-05,  9.0868916e-06,  1.5184259e-04,  1.3733039e-03,
        4.8607471e-04,  4.5379365e-04, -1.4254155e-05, -2.6121692e-04,
       -1.9997803e-03, -2.2437445e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.8033175e-06, -7.0160488e-05,  2.1963688e-03,  2.1821947e-03,
        2.7882872e-04, -1.9339221e-03,  8.6836098e-04, -5.9853708e-05,
       -1.1424025e-03, -2.3281462e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3340954e-04, -7.7464538e-05,  3.8657297e-04,  5.3139089e-04,
        2.1109132e-04, -3.9294540e-04,  3.7841102e-05, -1.3413002e-04,
       -2.9403903e-04, -1.3486543e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.1100120e-04,  1.0164758e-07,  5.4765743e-04, -1.8183268e-03,
        1.5470537e-04,  3.0241723e-04, -4.7219481e-05,  1.1323739e-03,
       -2.9004313e-04,  2.2937184e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.2124834e-06, -3.3517375e-05,  1.6275233e-04,  1.1576824e-04,
        5.7564530e-04, -6.6482506e-05, -8.5354455e-05,  4.6735981e-06,
       -3.1039886e-05, -6.3818396e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.1937172e-04, -2.0174679e-04, -3.4142402e-05, -2.5128343e-04,
        1.7802583e-04, -1.1412566e-04,  2.3813847e-04, -9.5826494e-05,
        4.5031114e-04, -4.9944578e-05], dtype=float32)])]}
INFO flwr 2024-04-29 02:18:09,773 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:18:09,773 | app.py:229 | app_fit: losses_centralized [(0, 2.3003292083740234), (1, 1.652514100074768), (2, 1.5756752490997314), (3, 1.5925904512405396), (4, 1.5596942901611328), (5, 1.5642297267913818), (6, 1.557319164276123), (7, 1.559070348739624), (8, 1.554293155670166), (9, 1.5691663026809692), (10, 1.5622462034225464)]
INFO flwr 2024-04-29 02:18:09,773 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1099), (1, 0.8292), (2, 0.8937), (3, 0.8747), (4, 0.9071), (5, 0.8997), (6, 0.9083), (7, 0.9063), (8, 0.9114), (9, 0.8959), (10, 0.9031)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9031
wandb:     loss 1.56225
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_021503-yxkg6ukn
wandb: Find logs at: ./wandb/offline-run-20240429_021503-yxkg6ukn/logs
INFO flwr 2024-04-29 02:18:13,423 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:18:14,122 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1687860)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1687860)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:18:19,047	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:18:19,485	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:18:19,838	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:18:19,840	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:18:30,781 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'memory': 173991223092.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 78853381324.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0}
INFO flwr 2024-04-29 02:18:30,781 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:18:30,781 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:18:30,800 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:18:30,801 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:18:30,802 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:18:30,802 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:18:33,972 | server.py:94 | initial parameters (loss, other metrics): 2.30330753326416, {'accuracy': 0.0551, 'data_size': 10000}
INFO flwr 2024-04-29 02:18:33,973 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:18:33,973 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1691681)[0m 2024-04-29 02:18:36.874068: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1691681)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1691678)[0m 2024-04-29 02:18:39.255381: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1691677)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1691677)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1691673)[0m 2024-04-29 02:18:37.254850: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1691673)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1691673)[0m 2024-04-29 02:18:39.419978: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:19:01,208 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:19:02,681 | server.py:125 | fit progress: (1, 1.7837517261505127, {'accuracy': 0.6677, 'data_size': 10000}, 28.708203343005152)
INFO flwr 2024-04-29 02:19:02,681 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:19:02,682 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:19:18,001 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:19:19,554 | server.py:125 | fit progress: (2, 1.611737847328186, {'accuracy': 0.8529, 'data_size': 10000}, 45.580781329015736)
INFO flwr 2024-04-29 02:19:19,554 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:19:19,554 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:19:34,907 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:19:36,439 | server.py:125 | fit progress: (3, 1.5711121559143066, {'accuracy': 0.8942, 'data_size': 10000}, 62.46615664099227)
INFO flwr 2024-04-29 02:19:36,439 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:19:36,440 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:19:50,060 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:19:51,368 | server.py:125 | fit progress: (4, 1.5603691339492798, {'accuracy': 0.9023, 'data_size': 10000}, 77.39504937001038)
INFO flwr 2024-04-29 02:19:51,368 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:19:51,369 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:20:04,952 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:20:06,245 | server.py:125 | fit progress: (5, 1.5539666414260864, {'accuracy': 0.9099, 'data_size': 10000}, 92.27228864899371)
INFO flwr 2024-04-29 02:20:06,276 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:20:06,276 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:20:20,577 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:20:22,094 | server.py:125 | fit progress: (6, 1.5648545026779175, {'accuracy': 0.8978, 'data_size': 10000}, 108.12091059199884)
INFO flwr 2024-04-29 02:20:22,094 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:20:22,094 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:20:38,221 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:20:39,722 | server.py:125 | fit progress: (7, 1.5604724884033203, {'accuracy': 0.9035, 'data_size': 10000}, 125.74911388399778)
INFO flwr 2024-04-29 02:20:39,723 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:20:39,723 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:20:54,206 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:20:55,731 | server.py:125 | fit progress: (8, 1.55076265335083, {'accuracy': 0.911, 'data_size': 10000}, 141.7578149040055)
INFO flwr 2024-04-29 02:20:55,731 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:20:55,731 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:21:09,937 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:21:11,417 | server.py:125 | fit progress: (9, 1.5557769536972046, {'accuracy': 0.9061, 'data_size': 10000}, 157.4441489560122)
INFO flwr 2024-04-29 02:21:11,417 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:21:11,418 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:21:24,996 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:21:26,313 | server.py:125 | fit progress: (10, 1.5469413995742798, {'accuracy': 0.915, 'data_size': 10000}, 172.34043639400625)
INFO flwr 2024-04-29 02:21:26,314 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:21:26,314 | server.py:153 | FL finished in 172.34109696399537
INFO flwr 2024-04-29 02:21:26,314 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:21:26,320 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.1550224e-04, -7.3650765e-05,  1.6881634e-03, -6.1612620e-05,
        7.1385433e-04, -2.4198211e-04, -6.4048677e-04,  3.6620542e-05,
       -1.0956516e-03,  2.9030145e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5888648e-04,  1.8561223e-04,  4.2248907e-04, -5.0131264e-05,
       -3.6421150e-04, -8.3505787e-05, -1.6718442e-04, -2.6990569e-04,
       -3.2723782e-04,  4.9526512e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.5022179e-04, -1.2936545e-04,  1.3913124e-04,  3.9696784e-05,
       -4.9396793e-05, -3.0653395e-05, -1.0949376e-04,  1.6287639e-04,
        8.5222469e-05,  4.2270032e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5143297e-04,  2.7783792e-06,  2.0408894e-05, -1.5130499e-04,
       -6.3196663e-04, -3.3285061e-04, -2.5341223e-04, -2.7171997e-04,
        3.6733257e-04,  9.9936349e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.1056055e-04, -5.2406290e-04,  4.7091795e-03,  3.2467916e-04,
        5.4593474e-06, -1.8159618e-03, -7.5665616e-06, -1.4649215e-05,
       -3.3353558e-03,  2.4774834e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.6506197e-05, -6.6396067e-05,  1.6855231e-06,  1.7837687e-04,
        2.0250496e-05, -3.3785189e-05,  2.0743941e-05, -1.3156753e-04,
       -3.5313253e-05,  6.2573723e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.3574603e-05, -9.7663462e-05,  3.1571504e-05,  2.0462787e-03,
        1.3291434e-04,  1.3859764e-04,  2.8290340e-05,  1.6732572e-04,
       -2.3474616e-03, -7.6213822e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.6466280e-05, -1.7084315e-04,  2.5178981e-05, -8.5825151e-05,
       -8.4356514e-05,  3.8559753e-07, -6.9836315e-05, -1.2237697e-04,
        1.0860598e-04,  3.8265140e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.0449642e-05,  2.0303969e-05,  6.1129085e-06,  2.8235043e-05,
        2.1616629e-04, -1.9417924e-04,  9.5098394e-06, -7.9170692e-05,
        1.9798768e-04, -1.4448464e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.49295439e-05,  3.83793842e-04,  2.41716014e-04,  5.72845674e-05,
        2.35696585e-04,  1.01554266e-04,  2.12189061e-05, -1.44970283e-04,
       -6.84053171e-04, -2.57128791e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:21:26,320 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:21:26,320 | app.py:229 | app_fit: losses_centralized [(0, 2.30330753326416), (1, 1.7837517261505127), (2, 1.611737847328186), (3, 1.5711121559143066), (4, 1.5603691339492798), (5, 1.5539666414260864), (6, 1.5648545026779175), (7, 1.5604724884033203), (8, 1.55076265335083), (9, 1.5557769536972046), (10, 1.5469413995742798)]
INFO flwr 2024-04-29 02:21:26,320 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0551), (1, 0.6677), (2, 0.8529), (3, 0.8942), (4, 0.9023), (5, 0.9099), (6, 0.8978), (7, 0.9035), (8, 0.911), (9, 0.9061), (10, 0.915)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.915
wandb:     loss 1.54694
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_021813-pk3r4rjw
wandb: Find logs at: ./wandb/offline-run-20240429_021813-pk3r4rjw/logs
INFO flwr 2024-04-29 02:21:29,995 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 20
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:21:30,705 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1691668)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1691668)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:21:35,609	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:21:35,991	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:21:36,345	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:21:36,347	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:21:47,275 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 173931109376.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78827618304.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-29 02:21:47,275 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:21:47,275 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:21:47,292 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:21:47,293 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:21:47,294 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:21:47,294 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:21:50,658 | server.py:94 | initial parameters (loss, other metrics): 2.3016932010650635, {'accuracy': 0.0532, 'data_size': 10000}
INFO flwr 2024-04-29 02:21:50,659 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:21:50,659 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1694818)[0m 2024-04-29 02:21:53.339871: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1694818)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1694818)[0m 2024-04-29 02:21:55.622738: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1694821)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1694821)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1694819)[0m 2024-04-29 02:21:53.586453: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1694819)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1694819)[0m 2024-04-29 02:21:55.831039: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:22:17,708 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:22:19,265 | server.py:125 | fit progress: (1, 1.7436168193817139, {'accuracy': 0.7334, 'data_size': 10000}, 28.605769738991512)
INFO flwr 2024-04-29 02:22:19,265 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:22:19,266 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:22:33,548 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:22:35,076 | server.py:125 | fit progress: (2, 1.590427279472351, {'accuracy': 0.8712, 'data_size': 10000}, 44.41649541599327)
INFO flwr 2024-04-29 02:22:35,076 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:22:35,076 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:22:48,245 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:22:49,755 | server.py:125 | fit progress: (3, 1.570602297782898, {'accuracy': 0.8915, 'data_size': 10000}, 59.09606017798069)
INFO flwr 2024-04-29 02:22:49,756 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:22:49,756 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:23:03,707 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:23:05,023 | server.py:125 | fit progress: (4, 1.570778489112854, {'accuracy': 0.8892, 'data_size': 10000}, 74.36367513099685)
INFO flwr 2024-04-29 02:23:05,023 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:23:05,023 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:23:17,951 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:23:19,232 | server.py:125 | fit progress: (5, 1.5539618730545044, {'accuracy': 0.9065, 'data_size': 10000}, 88.57300851799664)
INFO flwr 2024-04-29 02:23:19,233 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:23:19,233 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:23:33,443 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:23:34,955 | server.py:125 | fit progress: (6, 1.5589756965637207, {'accuracy': 0.9023, 'data_size': 10000}, 104.295539335988)
INFO flwr 2024-04-29 02:23:34,955 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:23:34,955 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:23:51,210 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:23:52,754 | server.py:125 | fit progress: (7, 1.5683016777038574, {'accuracy': 0.8926, 'data_size': 10000}, 122.09484679898014)
INFO flwr 2024-04-29 02:23:52,754 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:23:52,755 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:24:07,431 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:24:08,938 | server.py:125 | fit progress: (8, 1.5639262199401855, {'accuracy': 0.8976, 'data_size': 10000}, 138.27877826598706)
INFO flwr 2024-04-29 02:24:08,938 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:24:08,939 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:24:22,519 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:24:24,011 | server.py:125 | fit progress: (9, 1.5530893802642822, {'accuracy': 0.9076, 'data_size': 10000}, 153.35141884998302)
INFO flwr 2024-04-29 02:24:24,011 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:24:24,011 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:24:38,326 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:24:39,624 | server.py:125 | fit progress: (10, 1.5525182485580444, {'accuracy': 0.9088, 'data_size': 10000}, 168.96446127298987)
INFO flwr 2024-04-29 02:24:39,624 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:24:39,624 | server.py:153 | FL finished in 168.9649715689884
INFO flwr 2024-04-29 02:24:39,625 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:24:39,633 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00220498, -0.00164363,  0.00065106,  0.00135573, -0.00552243,
       -0.00177126, -0.00090636,  0.00010171,  0.00080529,  0.00472492],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00030439, -0.00022505,  0.00023096,  0.00359108, -0.00092854,
       -0.00027309, -0.00048693,  0.00261369, -0.00465114, -0.00017534],
      dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00016822,  0.00775822,  0.00016084, -0.00062901,  0.00180771,
       -0.00122116, -0.00052822,  0.00064714, -0.00914567,  0.00098197],
      dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00140195,  0.00198517,  0.00045922, -0.00324911, -0.00035175,
       -0.00280796,  0.00084573, -0.00018827,  0.00404678, -0.00214171],
      dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0985391e-04, -3.2534642e-04, -7.4901199e-04, -3.4572528e-05,
        3.6635707e-04,  1.2780754e-03, -8.7469989e-06, -3.1827978e-05,
       -6.3282705e-04, -7.1917755e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.4368423e-04,  8.5050298e-05,  4.6753581e-04, -3.8874487e-04,
        1.2673117e-03, -2.3041593e-04, -3.6091445e-04, -5.6605926e-04,
       -3.7777517e-04, -3.3965131e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1533164e-03,  7.3285640e-04,  2.4710913e-04, -2.4315501e-04,
       -2.1517827e-04,  2.4684451e-03, -1.0766774e-05,  9.8797056e-05,
        6.4062857e-05,  1.1189227e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.6404863e-04,  9.5409392e-05,  3.3606245e-04, -1.5932764e-04,
        9.4552315e-06, -6.2303399e-05, -2.7565437e-04, -2.9966004e-05,
       -9.5296971e-05,  3.4569757e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5032990e-04,  5.4585940e-05,  1.5162588e-04,  1.9637783e-04,
       -8.0890219e-05, -5.6783337e-04,  3.2720793e-05,  3.6593941e-05,
        6.8999463e-05, -4.2481002e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.9539170e-03, -2.3663092e-04,  1.0348267e-04, -1.2059320e-03,
       -1.0566043e-05, -2.5772206e-03, -3.8321633e-03, -1.0858203e-04,
        3.4216454e-04,  3.5715629e-03], dtype=float32)])]}
INFO flwr 2024-04-29 02:24:39,633 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:24:39,633 | app.py:229 | app_fit: losses_centralized [(0, 2.3016932010650635), (1, 1.7436168193817139), (2, 1.590427279472351), (3, 1.570602297782898), (4, 1.570778489112854), (5, 1.5539618730545044), (6, 1.5589756965637207), (7, 1.5683016777038574), (8, 1.5639262199401855), (9, 1.5530893802642822), (10, 1.5525182485580444)]
INFO flwr 2024-04-29 02:24:39,633 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0532), (1, 0.7334), (2, 0.8712), (3, 0.8915), (4, 0.8892), (5, 0.9065), (6, 0.9023), (7, 0.8926), (8, 0.8976), (9, 0.9076), (10, 0.9088)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9088
wandb:     loss 1.55252
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_022130-riudj7ml
wandb: Find logs at: ./wandb/offline-run-20240429_022130-riudj7ml/logs
INFO flwr 2024-04-29 02:24:43,262 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:24:43,921 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1694812)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1694812)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:24:48,712	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:24:49,179	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:24:49,561	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:24:49,562	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:25:00,448 | app.py:213 | Flower VCE: Ray initialized with resources: {'node:__internal_head__': 1.0, 'object_store_memory': 78833865523.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'CPU': 64.0, 'node:10.20.240.13': 1.0, 'memory': 173945686221.0}
INFO flwr 2024-04-29 02:25:00,448 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:25:00,448 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:25:00,466 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:25:00,467 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:25:00,467 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:25:00,467 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:25:03,682 | server.py:94 | initial parameters (loss, other metrics): 2.30074405670166, {'accuracy': 0.1815, 'data_size': 10000}
INFO flwr 2024-04-29 02:25:03,683 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:25:03,683 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1698546)[0m 2024-04-29 02:25:06.607077: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1698546)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1698546)[0m 2024-04-29 02:25:08.945740: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1698553)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1698553)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1698552)[0m 2024-04-29 02:25:06.835482: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1698552)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1698552)[0m 2024-04-29 02:25:09.088742: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:25:45,646 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:25:47,198 | server.py:125 | fit progress: (1, 1.7538939714431763, {'accuracy': 0.7365, 'data_size': 10000}, 43.515126804995816)
INFO flwr 2024-04-29 02:25:47,198 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:25:47,199 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:26:16,643 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:26:18,178 | server.py:125 | fit progress: (2, 1.652061939239502, {'accuracy': 0.8154, 'data_size': 10000}, 74.49496559600811)
INFO flwr 2024-04-29 02:26:18,178 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:26:18,178 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:26:47,138 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:26:48,764 | server.py:125 | fit progress: (3, 1.5803529024124146, {'accuracy': 0.8967, 'data_size': 10000}, 105.08146535599371)
INFO flwr 2024-04-29 02:26:48,765 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:26:48,765 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:27:16,890 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:27:18,198 | server.py:125 | fit progress: (4, 1.5691287517547607, {'accuracy': 0.9029, 'data_size': 10000}, 134.51547184801893)
INFO flwr 2024-04-29 02:27:18,199 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:27:18,199 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:27:49,648 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:27:51,151 | server.py:125 | fit progress: (5, 1.5700324773788452, {'accuracy': 0.8997, 'data_size': 10000}, 167.4682441590121)
INFO flwr 2024-04-29 02:27:51,152 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:27:51,152 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:28:23,036 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:28:24,555 | server.py:125 | fit progress: (6, 1.5561586618423462, {'accuracy': 0.9134, 'data_size': 10000}, 200.8721755290171)
INFO flwr 2024-04-29 02:28:24,555 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:28:24,556 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:28:49,416 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:28:50,992 | server.py:125 | fit progress: (7, 1.5704498291015625, {'accuracy': 0.8977, 'data_size': 10000}, 227.30873113599955)
INFO flwr 2024-04-29 02:28:50,992 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:28:50,992 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:29:16,512 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:29:18,028 | server.py:125 | fit progress: (8, 1.5679795742034912, {'accuracy': 0.9026, 'data_size': 10000}, 254.34544100001222)
INFO flwr 2024-04-29 02:29:18,029 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:29:18,029 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:29:46,408 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:29:47,913 | server.py:125 | fit progress: (9, 1.576872706413269, {'accuracy': 0.8931, 'data_size': 10000}, 284.23005620000185)
INFO flwr 2024-04-29 02:29:47,913 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:29:47,913 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:30:15,889 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:30:17,178 | server.py:125 | fit progress: (10, 1.564318060874939, {'accuracy': 0.9038, 'data_size': 10000}, 313.4955377310107)
INFO flwr 2024-04-29 02:30:17,179 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:30:17,179 | server.py:153 | FL finished in 313.49611151299905
INFO flwr 2024-04-29 02:30:17,179 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:30:17,185 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.9738316e-05, -1.5732026e-04,  1.7472501e-03, -1.2700221e-03,
        1.0799431e-03, -1.9845646e-03,  1.8738958e-04,  2.1963697e-05,
        9.1412198e-04, -5.0900120e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.2685951e-05,  8.7560504e-04,  4.6334029e-04,  3.1690008e-04,
        6.9231685e-04,  1.1327650e-03,  1.4973282e-04, -1.1777956e-03,
       -1.9071156e-03, -6.1839388e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.0144067e-04, -2.0312295e-04,  5.1469076e-04,  8.7089356e-05,
        6.3256848e-05, -3.4867830e-05,  1.4544067e-04,  5.1311974e-04,
       -1.0232383e-03, -7.6376344e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.9333919e-06,  4.4496881e-04, -1.6470048e-04,  6.0361763e-04,
       -1.5725648e-04, -7.3635965e-05,  2.0556484e-04, -4.9350434e-04,
        4.0327659e-04, -7.6137588e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.4651103e-05, -1.5399305e-04,  9.0873439e-04,  1.7283742e-04,
        1.0081895e-03,  5.5116048e-04, -8.0163218e-04, -3.7032375e-04,
       -9.4498583e-04, -2.8528410e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.6390796e-04, -7.5473770e-04,  7.7180337e-04, -2.5158987e-04,
        8.1712496e-04, -2.8922508e-04, -2.0391513e-05, -2.1789179e-04,
        1.5850507e-03, -1.0761913e-03], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6734092e-04,  3.3563134e-05,  5.2783336e-04, -5.3640979e-04,
       -1.4522133e-04,  4.9182877e-04, -1.9133935e-04,  3.5421536e-04,
        1.9957742e-04, -4.6665792e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.5846541e-06,  7.3425348e-05, -2.1552991e-05,  6.7631481e-04,
        5.1275478e-04,  3.2315537e-04,  2.1557127e-04,  3.0223928e-05,
       -7.9194602e-04, -1.0093241e-03], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00018525,  0.00012578, -0.00014393,  0.0002337 ,  0.00080217,
        0.00047336, -0.00027047, -0.0002618 , -0.0002638 , -0.00088021],
      dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.8515473e-04,  1.4250190e-04,  3.6476780e-05,  1.1634998e-03,
        1.9814620e-04, -5.0296792e-04, -1.2507431e-04,  3.3877025e-04,
       -1.9555178e-04, -8.7058119e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:30:17,185 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:30:17,185 | app.py:229 | app_fit: losses_centralized [(0, 2.30074405670166), (1, 1.7538939714431763), (2, 1.652061939239502), (3, 1.5803529024124146), (4, 1.5691287517547607), (5, 1.5700324773788452), (6, 1.5561586618423462), (7, 1.5704498291015625), (8, 1.5679795742034912), (9, 1.576872706413269), (10, 1.564318060874939)]
INFO flwr 2024-04-29 02:30:17,185 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1815), (1, 0.7365), (2, 0.8154), (3, 0.8967), (4, 0.9029), (5, 0.8997), (6, 0.9134), (7, 0.8977), (8, 0.9026), (9, 0.8931), (10, 0.9038)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9038
wandb:     loss 1.56432
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_022443-ydexmhcz
wandb: Find logs at: ./wandb/offline-run-20240429_022443-ydexmhcz/logs
INFO flwr 2024-04-29 02:30:20,819 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:30:21,569 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1698543)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1698543)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:30:26,561	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:30:26,925	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:30:27,273	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:30:27,275	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:30:38,267 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'CPU': 64.0, 'object_store_memory': 78814647091.0, 'memory': 173900843213.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 02:30:38,268 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:30:38,268 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:30:38,286 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:30:38,288 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:30:38,289 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:30:38,289 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:30:41,611 | server.py:94 | initial parameters (loss, other metrics): 2.298464059829712, {'accuracy': 0.1477, 'data_size': 10000}
INFO flwr 2024-04-29 02:30:41,611 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:30:41,612 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1702315)[0m 2024-04-29 02:30:44.482243: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1702315)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1702315)[0m 2024-04-29 02:30:46.738083: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1702320)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1702320)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1702317)[0m 2024-04-29 02:30:44.777009: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1702317)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1702317)[0m 2024-04-29 02:30:47.233180: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:31:18,234 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:31:19,785 | server.py:125 | fit progress: (1, 1.7591241598129272, {'accuracy': 0.6999, 'data_size': 10000}, 38.17314929299755)
INFO flwr 2024-04-29 02:31:19,785 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:31:19,785 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:31:46,975 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:31:48,515 | server.py:125 | fit progress: (2, 1.5966471433639526, {'accuracy': 0.8821, 'data_size': 10000}, 66.90346224000677)
INFO flwr 2024-04-29 02:31:48,515 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:31:48,516 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:32:16,517 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:32:18,047 | server.py:125 | fit progress: (3, 1.569458246231079, {'accuracy': 0.901, 'data_size': 10000}, 96.43510137399426)
INFO flwr 2024-04-29 02:32:18,047 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:32:18,047 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:32:45,459 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:32:46,966 | server.py:125 | fit progress: (4, 1.5700150728225708, {'accuracy': 0.9, 'data_size': 10000}, 125.35465530501097)
INFO flwr 2024-04-29 02:32:46,967 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:32:46,967 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:33:15,920 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:33:17,462 | server.py:125 | fit progress: (5, 1.5683261156082153, {'accuracy': 0.9009, 'data_size': 10000}, 155.8506361710024)
INFO flwr 2024-04-29 02:33:17,462 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:33:17,463 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:33:45,289 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:33:46,834 | server.py:125 | fit progress: (6, 1.5632500648498535, {'accuracy': 0.9062, 'data_size': 10000}, 185.22238629398635)
INFO flwr 2024-04-29 02:33:46,834 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:33:46,834 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:34:16,729 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:34:18,272 | server.py:125 | fit progress: (7, 1.5611233711242676, {'accuracy': 0.9066, 'data_size': 10000}, 216.66072737099603)
INFO flwr 2024-04-29 02:34:18,273 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:34:18,273 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:34:42,703 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:34:44,229 | server.py:125 | fit progress: (8, 1.5529738664627075, {'accuracy': 0.9137, 'data_size': 10000}, 242.61695261398563)
INFO flwr 2024-04-29 02:34:44,229 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:34:44,229 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:35:11,901 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:35:13,193 | server.py:125 | fit progress: (9, 1.5538711547851562, {'accuracy': 0.9116, 'data_size': 10000}, 271.58145420099027)
INFO flwr 2024-04-29 02:35:13,193 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:35:13,194 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:35:42,193 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:35:43,508 | server.py:125 | fit progress: (10, 1.558290958404541, {'accuracy': 0.9093, 'data_size': 10000}, 301.8960429430008)
INFO flwr 2024-04-29 02:35:43,508 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:35:43,508 | server.py:153 | FL finished in 301.8965590780135
INFO flwr 2024-04-29 02:35:43,508 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:35:43,514 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.8661467e-05, -6.3601648e-05,  1.8357404e-03, -4.2509302e-04,
       -2.6397911e-05, -1.9654864e-03, -3.6890811e-04, -5.2285090e-04,
        1.8368113e-03, -3.2880111e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.0404202e-04, -3.8225908e-04,  7.5667907e-05,  3.9550563e-04,
        8.5080205e-04, -1.2444847e-03,  8.6411666e-05, -1.2224916e-03,
        1.0126857e-03, -7.5807569e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.43160536e-05, -9.77524556e-04,  8.06195487e-04, -2.53787701e-04,
        4.06732172e-04,  1.21686186e-04, -1.85959812e-04,  1.15798779e-04,
        4.76247340e-04, -5.43643604e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.5008128e-04, -2.0739250e-04,  4.7988453e-04, -6.5316923e-04,
       -7.2698225e-05,  1.5455335e-03,  1.4567522e-04,  3.2916031e-04,
       -1.0769720e-03, -3.9915911e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.6564207e-05,  2.3377703e-04,  3.2773267e-05,  6.1663112e-04,
        3.7167844e-04,  1.3872875e-04,  4.4544118e-05, -3.4861508e-04,
       -9.6651420e-05, -9.0619788e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00028451,  0.00030768,  0.00095933, -0.00035788,  0.0007632 ,
        0.00050141, -0.00038364,  0.00041464, -0.00112279, -0.00079739],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.0579687e-04, -3.6769256e-04,  1.0002957e-03, -1.0898660e-04,
        4.2901951e-04,  2.8057935e-04,  4.0423947e-05, -2.1739106e-04,
       -8.4184627e-05, -3.6620026e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1685420e-04,  6.6490017e-04, -4.7813381e-05, -4.1372780e-04,
       -3.2517302e-04, -1.1069770e-03,  6.3983188e-04, -6.7888544e-04,
        7.4341882e-04,  3.0760962e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.4995662e-04, -8.8971702e-04, -6.5408676e-04,  1.5013895e-04,
       -7.8036494e-05,  4.5657580e-04,  3.3050170e-04,  2.4443868e-04,
        2.6226911e-04, -7.1967981e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.7338959e-05, -3.4570499e-04,  1.5171093e-04, -9.8284268e-05,
        6.4476953e-05,  3.1859454e-04, -9.8380362e-05,  2.1058786e-05,
        1.9472591e-05, -9.0248010e-05], dtype=float32)])]}
INFO flwr 2024-04-29 02:35:43,514 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:35:43,514 | app.py:229 | app_fit: losses_centralized [(0, 2.298464059829712), (1, 1.7591241598129272), (2, 1.5966471433639526), (3, 1.569458246231079), (4, 1.5700150728225708), (5, 1.5683261156082153), (6, 1.5632500648498535), (7, 1.5611233711242676), (8, 1.5529738664627075), (9, 1.5538711547851562), (10, 1.558290958404541)]
INFO flwr 2024-04-29 02:35:43,514 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1477), (1, 0.6999), (2, 0.8821), (3, 0.901), (4, 0.9), (5, 0.9009), (6, 0.9062), (7, 0.9066), (8, 0.9137), (9, 0.9116), (10, 0.9093)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9093
wandb:     loss 1.55829
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_023021-hsml8p3g
wandb: Find logs at: ./wandb/offline-run-20240429_023021-hsml8p3g/logs
INFO flwr 2024-04-29 02:35:47,183 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.05
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:35:47,949 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1702315)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1702315)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:35:52,814	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:35:53,172	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:35:53,557	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:35:53,559	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:36:04,538 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 78794484940.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:10.20.240.13': 1.0, 'memory': 173853798196.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 02:36:04,539 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:36:04,539 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:36:04,558 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:36:04,559 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:36:04,559 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:36:04,560 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:36:07,998 | server.py:94 | initial parameters (loss, other metrics): 2.3036158084869385, {'accuracy': 0.1139, 'data_size': 10000}
INFO flwr 2024-04-29 02:36:07,999 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:36:07,999 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1706124)[0m 2024-04-29 02:36:10.604539: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1706124)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1706124)[0m 2024-04-29 02:36:12.879799: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1706121)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1706121)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1706125)[0m 2024-04-29 02:36:10.806500: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1706125)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1706123)[0m 2024-04-29 02:36:13.054937: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:36:48,037 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:36:49,569 | server.py:125 | fit progress: (1, 1.6663652658462524, {'accuracy': 0.8086, 'data_size': 10000}, 41.56996950699249)
INFO flwr 2024-04-29 02:36:49,570 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:36:49,570 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:37:18,007 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:37:19,520 | server.py:125 | fit progress: (2, 1.5876718759536743, {'accuracy': 0.8833, 'data_size': 10000}, 71.52071292800247)
INFO flwr 2024-04-29 02:37:19,520 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:37:19,521 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:37:47,330 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:37:48,839 | server.py:125 | fit progress: (3, 1.5716272592544556, {'accuracy': 0.8951, 'data_size': 10000}, 100.83924225901137)
INFO flwr 2024-04-29 02:37:48,839 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:37:48,839 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:38:14,847 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:38:16,373 | server.py:125 | fit progress: (4, 1.5699812173843384, {'accuracy': 0.8968, 'data_size': 10000}, 128.37410986900795)
INFO flwr 2024-04-29 02:38:16,374 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:38:16,374 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:38:44,497 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:38:46,014 | server.py:125 | fit progress: (5, 1.5579676628112793, {'accuracy': 0.909, 'data_size': 10000}, 158.0142544650007)
INFO flwr 2024-04-29 02:38:46,014 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:38:46,014 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:39:13,794 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:39:15,322 | server.py:125 | fit progress: (6, 1.555143117904663, {'accuracy': 0.9086, 'data_size': 10000}, 187.32250990800094)
INFO flwr 2024-04-29 02:39:15,322 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:39:15,322 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:39:44,874 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:39:46,186 | server.py:125 | fit progress: (7, 1.5992333889007568, {'accuracy': 0.8644, 'data_size': 10000}, 218.18641491499147)
INFO flwr 2024-04-29 02:39:46,186 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:39:46,187 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:40:15,485 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:40:16,805 | server.py:125 | fit progress: (8, 1.5744044780731201, {'accuracy': 0.8896, 'data_size': 10000}, 248.80613015999552)
INFO flwr 2024-04-29 02:40:16,806 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:40:16,806 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:40:42,155 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:40:43,712 | server.py:125 | fit progress: (9, 1.5534498691558838, {'accuracy': 0.9108, 'data_size': 10000}, 275.7126470509975)
INFO flwr 2024-04-29 02:40:43,712 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:40:43,713 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:41:10,703 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:41:12,028 | server.py:125 | fit progress: (10, 1.5565361976623535, {'accuracy': 0.9071, 'data_size': 10000}, 304.0287932190113)
INFO flwr 2024-04-29 02:41:12,028 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:41:12,029 | server.py:153 | FL finished in 304.0292559810041
INFO flwr 2024-04-29 02:41:12,029 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:41:12,034 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.5745055e-05, -3.0029967e-04, -3.2440483e-05,  1.4980303e-03,
       -1.6705034e-04, -1.4328860e-03,  1.7405396e-04,  2.9876997e-04,
        2.1777018e-05, -9.5540527e-05], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.9358252e-05,  6.8837529e-05,  5.9332920e-04, -7.4483344e-04,
        9.8815850e-05, -5.4908503e-04,  1.3527226e-04,  1.8234889e-04,
       -3.8071818e-04,  5.4683612e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.5349209e-04, -2.7010188e-04, -1.5035860e-04, -3.4812931e-04,
       -8.5195670e-06, -2.2606530e-04, -2.4032472e-04,  8.4290048e-04,
        1.7320988e-04, -2.5945415e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.10550783e-05,  7.79750408e-04,  8.86717535e-05,  3.70284048e-04,
       -9.71164482e-05, -1.58257855e-04,  1.05427454e-04, -2.51371064e-04,
       -7.61597767e-04, -1.16679184e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-8.7460481e-05, -4.6380523e-05, -6.1417173e-05,  3.9741781e-04,
       -2.4127866e-04,  3.3853433e-04,  4.0398816e-05, -2.1612800e-04,
       -2.3336879e-05, -1.0018784e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 0.00015746, -0.00235413, -0.00011808,  0.00025893,  0.00015728,
        0.00054082,  0.00028575,  0.00111048,  0.00044572, -0.0004841 ],
      dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00017955, -0.00012255,  0.00040723,  0.00016397,  0.00020071,
       -0.00047444,  0.00030668,  0.00017376,  0.00014681, -0.00062249],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.2774252e-04,  2.5403897e-05, -2.1574553e-05, -1.1599021e-03,
        9.3575647e-05,  5.5031560e-04,  9.5083349e-05,  4.9394293e-04,
        3.0712519e-05, -3.3518404e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2134740e-05,  1.2681473e-04, -1.6855390e-04,  4.8322192e-05,
       -2.9645348e-04,  1.6009832e-04,  2.6593893e-04,  2.5291560e-04,
       -1.3205140e-04, -2.2477537e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.13667083e-04,  9.76936644e-05,  6.43816311e-05,  9.41409598e-05,
       -1.20238823e-04, -3.42611427e-04, -1.03440025e-05, -6.68529028e-05,
        2.68676900e-04, -9.83937207e-05], dtype=float32)])]}
INFO flwr 2024-04-29 02:41:12,035 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:41:12,035 | app.py:229 | app_fit: losses_centralized [(0, 2.3036158084869385), (1, 1.6663652658462524), (2, 1.5876718759536743), (3, 1.5716272592544556), (4, 1.5699812173843384), (5, 1.5579676628112793), (6, 1.555143117904663), (7, 1.5992333889007568), (8, 1.5744044780731201), (9, 1.5534498691558838), (10, 1.5565361976623535)]
INFO flwr 2024-04-29 02:41:12,035 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1139), (1, 0.8086), (2, 0.8833), (3, 0.8951), (4, 0.8968), (5, 0.909), (6, 0.9086), (7, 0.8644), (8, 0.8896), (9, 0.9108), (10, 0.9071)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9071
wandb:     loss 1.55654
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_023547-in65s3y5
wandb: Find logs at: ./wandb/offline-run-20240429_023547-in65s3y5/logs
INFO flwr 2024-04-29 02:41:15,667 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:41:16,405 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1706115)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1706115)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:41:21,311	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:41:21,669	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:41:22,018	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:41:22,020	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:41:33,037 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78780769075.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:10.20.240.13': 1.0, 'memory': 173821794509.0, 'CPU': 64.0}
INFO flwr 2024-04-29 02:41:33,037 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:41:33,037 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:41:33,056 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:41:33,057 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:41:33,057 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:41:33,057 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:41:37,187 | server.py:94 | initial parameters (loss, other metrics): 2.303546190261841, {'accuracy': 0.0802, 'data_size': 10000}
INFO flwr 2024-04-29 02:41:37,187 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:41:37,188 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1710072)[0m 2024-04-29 02:41:39.094558: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1710072)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1710072)[0m 2024-04-29 02:41:41.475010: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1710072)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1710072)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1710071)[0m 2024-04-29 02:41:39.212226: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1710071)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1710070)[0m 2024-04-29 02:41:41.525450: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:42:23,528 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:42:25,066 | server.py:125 | fit progress: (1, 1.829535961151123, {'accuracy': 0.6363, 'data_size': 10000}, 47.878160391992424)
INFO flwr 2024-04-29 02:42:25,066 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:42:25,066 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:42:54,432 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:42:55,952 | server.py:125 | fit progress: (2, 1.6171153783798218, {'accuracy': 0.8549, 'data_size': 10000}, 78.76439267600654)
INFO flwr 2024-04-29 02:42:55,952 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:42:55,952 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:43:21,438 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:43:22,958 | server.py:125 | fit progress: (3, 1.5708386898040771, {'accuracy': 0.901, 'data_size': 10000}, 105.77031623298535)
INFO flwr 2024-04-29 02:43:22,958 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:43:22,958 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:43:53,003 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:43:54,536 | server.py:125 | fit progress: (4, 1.5637240409851074, {'accuracy': 0.9057, 'data_size': 10000}, 137.3487683729909)
INFO flwr 2024-04-29 02:43:54,537 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:43:54,537 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:44:21,477 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:44:23,047 | server.py:125 | fit progress: (5, 1.5652559995651245, {'accuracy': 0.9024, 'data_size': 10000}, 165.85921279600007)
INFO flwr 2024-04-29 02:44:23,047 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:44:23,047 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:44:52,857 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:44:54,375 | server.py:125 | fit progress: (6, 1.5658771991729736, {'accuracy': 0.901, 'data_size': 10000}, 197.18768797599478)
INFO flwr 2024-04-29 02:44:54,376 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:44:54,376 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:45:22,684 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:45:24,062 | server.py:125 | fit progress: (7, 1.5559020042419434, {'accuracy': 0.9113, 'data_size': 10000}, 226.87490582998726)
INFO flwr 2024-04-29 02:45:24,063 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:45:24,063 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:45:54,044 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:45:55,421 | server.py:125 | fit progress: (8, 1.5518187284469604, {'accuracy': 0.9144, 'data_size': 10000}, 258.23387505099527)
INFO flwr 2024-04-29 02:45:55,422 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:45:55,422 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:46:22,030 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:46:23,591 | server.py:125 | fit progress: (9, 1.5555192232131958, {'accuracy': 0.9111, 'data_size': 10000}, 286.40375267199124)
INFO flwr 2024-04-29 02:46:23,592 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:46:23,592 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:46:48,770 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:46:50,318 | server.py:125 | fit progress: (10, 1.554589033126831, {'accuracy': 0.9125, 'data_size': 10000}, 313.1306410749967)
INFO flwr 2024-04-29 02:46:50,319 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:46:50,319 | server.py:153 | FL finished in 313.1310690859973
INFO flwr 2024-04-29 02:46:50,319 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:46:50,324 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.0609615e-05,  4.3021209e-04,  1.1943384e-03, -2.1381956e-04,
        2.2167229e-04, -4.2723338e-04, -2.0970445e-04,  3.8278472e-04,
       -8.3848112e-04, -6.0032390e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.2982559e-05,  4.8540413e-04,  4.1602933e-04, -8.8443776e-05,
        9.6920860e-04, -1.6465083e-04, -2.6889291e-04, -2.9010637e-04,
       -1.2050841e-03,  6.3583022e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.2633762e-06, -3.5783192e-04, -2.3632505e-04,  4.7263445e-04,
        3.3914743e-04,  1.4584686e-04,  1.2654449e-04, -1.2240712e-04,
       -6.0586979e-05, -3.0070337e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.5510721e-05, -1.8760767e-04,  1.2213454e-04,  5.4717642e-05,
       -5.5400666e-04,  4.5957204e-05, -1.2221944e-04, -2.3890218e-05,
        1.8289816e-03, -1.2495315e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0162962e-04, -1.6190136e-04,  9.8653014e-05,  2.4839197e-04,
        3.8181775e-04, -1.2765877e-04, -1.3932539e-04, -3.9710428e-04,
        1.2318250e-04, -1.2762030e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0683750e-04, -4.4429784e-05,  3.7954267e-04, -4.0683950e-05,
        8.2506813e-05,  5.0490133e-05, -1.2689143e-04, -1.4873705e-04,
        2.6774686e-04, -5.2632036e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00014056, -0.00016226,  0.00031693, -0.00047774, -0.00017808,
        0.00052007, -0.00024947, -0.00109714,  0.0005194 ,  0.0009489 ],
      dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.6837612e-05, -1.4864567e-04,  2.2887232e-04, -3.2175941e-04,
        4.7406758e-04, -1.0273798e-04,  4.5034747e-05, -3.8577931e-04,
        2.3268966e-04,  5.5153359e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.31866866e-04, -3.41392093e-04,  3.32371856e-04, -6.17747603e-04,
        1.71084001e-04,  1.18225675e-04,  3.05547546e-05,  9.98856267e-05,
        2.90698772e-05,  4.61099153e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.2540189e-05, -1.5869767e-04,  3.0397841e-05,  2.2770303e-04,
       -7.5197779e-05, -2.5817935e-04,  2.7887305e-05,  4.9918477e-04,
       -9.7750228e-05, -2.1783460e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:46:50,324 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:46:50,325 | app.py:229 | app_fit: losses_centralized [(0, 2.303546190261841), (1, 1.829535961151123), (2, 1.6171153783798218), (3, 1.5708386898040771), (4, 1.5637240409851074), (5, 1.5652559995651245), (6, 1.5658771991729736), (7, 1.5559020042419434), (8, 1.5518187284469604), (9, 1.5555192232131958), (10, 1.554589033126831)]
INFO flwr 2024-04-29 02:46:50,325 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0802), (1, 0.6363), (2, 0.8549), (3, 0.901), (4, 0.9057), (5, 0.9024), (6, 0.901), (7, 0.9113), (8, 0.9144), (9, 0.9111), (10, 0.9125)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9125
wandb:     loss 1.55459
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_024115-4c55vzmz
wandb: Find logs at: ./wandb/offline-run-20240429_024115-4c55vzmz/logs
INFO flwr 2024-04-29 02:46:53,967 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:46:54,730 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1710064)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1710064)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:46:59,586	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:46:59,945	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:47:00,294	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:47:00,296	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:47:11,272 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'object_store_memory': 78765122764.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'memory': 173785286452.0, 'node:10.20.240.13': 1.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 02:47:11,272 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:47:11,273 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:47:11,293 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:47:11,294 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:47:11,294 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:47:11,294 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:47:14,970 | server.py:94 | initial parameters (loss, other metrics): 2.3028182983398438, {'accuracy': 0.0882, 'data_size': 10000}
INFO flwr 2024-04-29 02:47:14,976 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:47:14,977 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1714044)[0m 2024-04-29 02:47:17.382534: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1714044)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1714049)[0m 2024-04-29 02:47:19.741082: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1714050)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1714050)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1714045)[0m 2024-04-29 02:47:17.512803: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1714045)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1714050)[0m 2024-04-29 02:47:19.795161: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:47:55,933 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:47:57,465 | server.py:125 | fit progress: (1, 1.7233705520629883, {'accuracy': 0.7501, 'data_size': 10000}, 42.48879558700719)
INFO flwr 2024-04-29 02:47:57,466 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:47:57,466 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:48:27,757 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:48:29,081 | server.py:125 | fit progress: (2, 1.6248226165771484, {'accuracy': 0.8425, 'data_size': 10000}, 74.10405443501077)
INFO flwr 2024-04-29 02:48:29,081 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:48:29,081 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:48:56,487 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:48:57,986 | server.py:125 | fit progress: (3, 1.5657049417495728, {'accuracy': 0.9039, 'data_size': 10000}, 103.00986370901228)
INFO flwr 2024-04-29 02:48:57,987 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:48:57,987 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:49:26,606 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:49:28,158 | server.py:125 | fit progress: (4, 1.5739986896514893, {'accuracy': 0.8923, 'data_size': 10000}, 133.18108375300653)
INFO flwr 2024-04-29 02:49:28,158 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:49:28,158 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:49:57,620 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:49:59,170 | server.py:125 | fit progress: (5, 1.5619244575500488, {'accuracy': 0.9056, 'data_size': 10000}, 164.19308595801704)
INFO flwr 2024-04-29 02:49:59,170 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:49:59,170 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:50:28,670 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:50:29,959 | server.py:125 | fit progress: (6, 1.5570193529129028, {'accuracy': 0.9081, 'data_size': 10000}, 194.98280583400629)
INFO flwr 2024-04-29 02:50:29,960 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:50:29,960 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:50:58,173 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:50:59,500 | server.py:125 | fit progress: (7, 1.5630128383636475, {'accuracy': 0.9012, 'data_size': 10000}, 224.5230618120113)
INFO flwr 2024-04-29 02:50:59,500 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:50:59,500 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:51:23,998 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:51:25,294 | server.py:125 | fit progress: (8, 1.5661683082580566, {'accuracy': 0.9009, 'data_size': 10000}, 250.31766527800937)
INFO flwr 2024-04-29 02:51:25,294 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:51:25,295 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:51:51,733 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:51:53,241 | server.py:125 | fit progress: (9, 1.557477593421936, {'accuracy': 0.9058, 'data_size': 10000}, 278.2646512640058)
INFO flwr 2024-04-29 02:51:53,242 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:51:53,242 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:52:22,746 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:52:24,263 | server.py:125 | fit progress: (10, 1.551559567451477, {'accuracy': 0.912, 'data_size': 10000}, 309.2867542320164)
INFO flwr 2024-04-29 02:52:24,264 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:52:24,264 | server.py:153 | FL finished in 309.287209867005
INFO flwr 2024-04-29 02:52:24,264 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:52:24,269 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7230815e-04, -1.3184977e-03, -7.0984745e-05,  1.7255375e-03,
       -6.6340389e-04, -1.4990909e-03,  1.5598824e-05,  2.3702277e-04,
       -4.7060740e-04,  1.3721609e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0592511e-03, -1.2455729e-05,  3.4206655e-04,  7.4757868e-04,
        8.2330540e-04,  4.5803736e-04, -2.2122430e-04, -3.5650027e-03,
       -4.6372603e-04,  8.3222042e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.3017967e-04, -8.6795670e-05,  2.1332879e-04, -1.5115837e-04,
        6.3294056e-04,  3.0054763e-04, -1.1595894e-04, -3.3250957e-04,
        4.1409666e-04, -7.4425910e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4166626e-04, -1.5300726e-05, -1.0173299e-05,  2.0999716e-04,
        3.0878073e-04,  3.4637746e-04,  5.4408552e-05, -2.0636139e-04,
       -3.3260684e-04, -2.1340554e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.3228188e-05,  1.0344656e-04,  6.6810685e-08, -2.0377818e-04,
        1.7553128e-04, -1.8913476e-06, -1.2531570e-04,  3.8828020e-05,
        3.0201858e-05, -8.0275895e-05], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2626889e-04,  8.6589466e-04,  2.7987652e-04, -1.1827907e-04,
       -1.0833752e-04,  2.2908502e-04,  3.2522826e-04, -4.8131467e-05,
       -1.4629469e-03,  1.6396334e-04], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.6282701e-05, -1.0673205e-04,  1.9132840e-05, -1.5443699e-04,
        3.5360473e-04,  3.1531040e-04, -5.7199479e-05, -8.4733707e-05,
       -3.4831246e-04,  1.0971248e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.83796030e-05, -1.35098293e-04,  8.78887513e-05, -1.34227175e-05,
        3.49202805e-04,  1.97497677e-04, -8.95691701e-05,  7.08290027e-05,
       -1.12024012e-04, -4.03598184e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-9.5309697e-05,  1.7313314e-04, -8.4956999e-05, -3.2537500e-05,
        5.4737331e-05, -8.8353314e-05,  7.1213508e-05, -2.7711215e-04,
        1.3661964e-04,  1.4266222e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.2305423e-05, -9.0821180e-05,  4.9825579e-05,  1.0317163e-04,
        2.3500774e-04,  1.0679887e-04, -8.3806182e-05, -1.3346956e-04,
        5.0371029e-05, -2.6934568e-04], dtype=float32)])]}
INFO flwr 2024-04-29 02:52:24,269 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:52:24,270 | app.py:229 | app_fit: losses_centralized [(0, 2.3028182983398438), (1, 1.7233705520629883), (2, 1.6248226165771484), (3, 1.5657049417495728), (4, 1.5739986896514893), (5, 1.5619244575500488), (6, 1.5570193529129028), (7, 1.5630128383636475), (8, 1.5661683082580566), (9, 1.557477593421936), (10, 1.551559567451477)]
INFO flwr 2024-04-29 02:52:24,270 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0882), (1, 0.7501), (2, 0.8425), (3, 0.9039), (4, 0.8923), (5, 0.9056), (6, 0.9081), (7, 0.9012), (8, 0.9009), (9, 0.9058), (10, 0.912)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.912
wandb:     loss 1.55156
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_024654-9bkqnd13
wandb: Find logs at: ./wandb/offline-run-20240429_024654-9bkqnd13/logs
INFO flwr 2024-04-29 02:52:27,894 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.1
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:52:28,672 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1714042)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1714042)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:52:34,524	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:52:34,973	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:52:35,314	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:52:35,316	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:52:46,256 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'memory': 173798292071.0, 'node:10.20.240.13': 1.0, 'object_store_memory': 78770696601.0, 'node:__internal_head__': 1.0}
INFO flwr 2024-04-29 02:52:46,257 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:52:46,257 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:52:46,275 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:52:46,277 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:52:46,278 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:52:46,278 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:52:49,512 | server.py:94 | initial parameters (loss, other metrics): 2.3042218685150146, {'accuracy': 0.052, 'data_size': 10000}
INFO flwr 2024-04-29 02:52:49,512 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:52:49,512 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1717822)[0m 2024-04-29 02:52:52.456459: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1717822)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1717813)[0m 2024-04-29 02:52:54.704359: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1717813)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1717813)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1717812)[0m 2024-04-29 02:52:52.817084: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1717812)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1717812)[0m 2024-04-29 02:52:54.905672: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:53:30,168 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:53:31,703 | server.py:125 | fit progress: (1, 1.7498339414596558, {'accuracy': 0.7121, 'data_size': 10000}, 42.19123863198911)
INFO flwr 2024-04-29 02:53:31,704 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:53:31,704 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:53:57,440 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:53:58,934 | server.py:125 | fit progress: (2, 1.5777382850646973, {'accuracy': 0.8868, 'data_size': 10000}, 69.42168539197883)
INFO flwr 2024-04-29 02:53:58,934 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:53:58,934 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:54:26,182 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 02:54:27,497 | server.py:125 | fit progress: (3, 1.5909000635147095, {'accuracy': 0.8727, 'data_size': 10000}, 97.9845848089899)
INFO flwr 2024-04-29 02:54:27,497 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 02:54:27,497 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:54:53,558 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 02:54:54,840 | server.py:125 | fit progress: (4, 1.5599433183670044, {'accuracy': 0.9026, 'data_size': 10000}, 125.32751665500109)
INFO flwr 2024-04-29 02:54:54,840 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 02:54:54,840 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:55:24,059 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 02:55:25,360 | server.py:125 | fit progress: (5, 1.56598699092865, {'accuracy': 0.897, 'data_size': 10000}, 155.8473173469829)
INFO flwr 2024-04-29 02:55:25,360 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 02:55:25,360 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:55:53,952 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 02:55:55,478 | server.py:125 | fit progress: (6, 1.5686148405075073, {'accuracy': 0.8935, 'data_size': 10000}, 185.9663133629947)
INFO flwr 2024-04-29 02:55:55,479 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 02:55:55,479 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:56:25,756 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 02:56:27,269 | server.py:125 | fit progress: (7, 1.5729923248291016, {'accuracy': 0.8873, 'data_size': 10000}, 217.75678977297503)
INFO flwr 2024-04-29 02:56:27,269 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 02:56:27,270 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:56:57,426 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 02:56:58,949 | server.py:125 | fit progress: (8, 1.5535558462142944, {'accuracy': 0.9088, 'data_size': 10000}, 249.43688468099572)
INFO flwr 2024-04-29 02:56:58,949 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 02:56:58,950 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:57:26,075 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 02:57:27,601 | server.py:125 | fit progress: (9, 1.5478389263153076, {'accuracy': 0.915, 'data_size': 10000}, 278.0891031229985)
INFO flwr 2024-04-29 02:57:27,602 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 02:57:27,602 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:58:04,053 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 02:58:05,606 | server.py:125 | fit progress: (10, 1.552030086517334, {'accuracy': 0.9099, 'data_size': 10000}, 316.0933483459812)
INFO flwr 2024-04-29 02:58:05,606 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 02:58:05,606 | server.py:153 | FL finished in 316.0937608059903
INFO flwr 2024-04-29 02:58:05,606 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 02:58:05,611 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.4162158e-04, -1.3494374e-04,  3.1966003e-04,  2.5897776e-04,
       -1.4351717e-04, -1.6538275e-04, -7.7403158e-05,  4.8287096e-04,
       -7.5218512e-04, -2.2958675e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.7702149e-05,  3.3629293e-04, -1.1656457e-05,  1.0950271e-05,
       -1.9147541e-04,  5.0475042e-05, -7.6917771e-05, -2.0952060e-04,
        1.1783500e-04,  2.1839362e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.1080326e-05,  6.7327885e-05, -1.4828103e-04,  1.3187286e-04,
        1.3447551e-04, -8.7262917e-05, -3.4095337e-05,  1.7325119e-04,
       -1.6322557e-04, -1.2503294e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.6243124e-05,  4.4723070e-05, -1.2564400e-04, -8.8650216e-07,
        1.6472963e-04,  6.7295085e-05, -1.7619311e-04,  1.9675333e-04,
       -5.1589588e-05, -9.2829614e-05], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 4.0270363e-05,  1.4600319e-04, -1.2253320e-05, -1.4176342e-04,
        1.6139032e-04,  5.1405288e-05,  1.3968514e-04, -1.7581810e-04,
       -6.6058252e-05, -1.4278418e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0256157e-05,  2.4286415e-05,  1.1267261e-04, -2.6461112e-05,
        8.6958797e-05,  3.8874092e-05, -6.7448389e-05, -1.8885154e-05,
       -9.4219766e-05, -6.5954533e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.5365465e-05,  6.4398220e-05, -1.1618560e-04,  9.2861846e-05,
        1.9691897e-06,  2.1244765e-04,  3.0811589e-05, -2.7754341e-04,
        3.8227237e-05, -1.1583069e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.05373736e-04,  4.92887411e-05,  1.66597980e-04,  3.59046535e-05,
        2.38618886e-05, -2.76145238e-06, -4.15381328e-05, -6.27133777e-05,
       -1.23406426e-04,  6.02231121e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.7862537e-05, -2.5620886e-05,  3.2312167e-04, -8.5390828e-05,
       -3.7521932e-05,  3.4817305e-05, -1.6448714e-06, -3.2210972e-03,
        2.8411049e-04,  2.6614454e-03], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.5639549e-05, -1.0860690e-05,  2.4709656e-05,  1.9923762e-06,
        5.2453262e-05, -7.9065263e-05, -2.0144447e-05,  4.0068917e-05,
       -5.2545522e-05,  2.7834107e-05], dtype=float32)])]}
INFO flwr 2024-04-29 02:58:05,612 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 02:58:05,612 | app.py:229 | app_fit: losses_centralized [(0, 2.3042218685150146), (1, 1.7498339414596558), (2, 1.5777382850646973), (3, 1.5909000635147095), (4, 1.5599433183670044), (5, 1.56598699092865), (6, 1.5686148405075073), (7, 1.5729923248291016), (8, 1.5535558462142944), (9, 1.5478389263153076), (10, 1.552030086517334)]
INFO flwr 2024-04-29 02:58:05,612 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.052), (1, 0.7121), (2, 0.8868), (3, 0.8727), (4, 0.9026), (5, 0.897), (6, 0.8935), (7, 0.8873), (8, 0.9088), (9, 0.915), (10, 0.9099)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9099
wandb:     loss 1.55203
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_025228-vapcw59g
wandb: Find logs at: ./wandb/offline-run-20240429_025228-vapcw59g/logs
INFO flwr 2024-04-29 02:58:09,279 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.85
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 02:58:10,095 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1717812)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1717812)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 02:58:14,939	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 02:58:15,353	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 02:58:15,697	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 02:58:15,699	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 02:58:26,687 | app.py:213 | Flower VCE: Ray initialized with resources: {'CPU': 64.0, 'node:__internal_head__': 1.0, 'object_store_memory': 78704907878.0, 'node:10.20.240.13': 1.0, 'memory': 173644785050.0, 'GPU': 1.0, 'accelerator_type:G': 1.0}
INFO flwr 2024-04-29 02:58:26,687 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 02:58:26,688 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 02:58:26,704 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 02:58:26,705 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 02:58:26,706 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 02:58:26,706 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 02:58:29,863 | server.py:94 | initial parameters (loss, other metrics): 2.3044025897979736, {'accuracy': 0.0855, 'data_size': 10000}
INFO flwr 2024-04-29 02:58:29,863 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 02:58:29,864 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1722186)[0m 2024-04-29 02:58:32.682740: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1722186)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1722186)[0m 2024-04-29 02:58:34.984937: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1722186)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1722186)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1722184)[0m 2024-04-29 02:58:32.906648: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1722184)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1722184)[0m 2024-04-29 02:58:35.170799: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 02:59:09,150 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 02:59:10,429 | server.py:125 | fit progress: (1, 1.6752042770385742, {'accuracy': 0.7939, 'data_size': 10000}, 40.56588238000404)
INFO flwr 2024-04-29 02:59:10,430 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 02:59:10,430 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 02:59:39,128 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 02:59:40,639 | server.py:125 | fit progress: (2, 1.5755836963653564, {'accuracy': 0.8917, 'data_size': 10000}, 70.77529872200103)
INFO flwr 2024-04-29 02:59:40,639 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 02:59:40,639 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:00:07,970 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 03:00:09,454 | server.py:125 | fit progress: (3, 1.5831773281097412, {'accuracy': 0.8841, 'data_size': 10000}, 99.59087362099672)
INFO flwr 2024-04-29 03:00:09,455 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 03:00:09,455 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:00:39,596 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 03:00:41,118 | server.py:125 | fit progress: (4, 1.5595264434814453, {'accuracy': 0.9066, 'data_size': 10000}, 131.25410121300956)
INFO flwr 2024-04-29 03:00:41,118 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 03:00:41,118 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:01:08,061 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 03:01:09,339 | server.py:125 | fit progress: (5, 1.5596855878829956, {'accuracy': 0.9045, 'data_size': 10000}, 159.4755484139896)
INFO flwr 2024-04-29 03:01:09,339 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 03:01:09,340 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:01:39,756 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 03:01:41,044 | server.py:125 | fit progress: (6, 1.5560014247894287, {'accuracy': 0.9074, 'data_size': 10000}, 191.18037532400922)
INFO flwr 2024-04-29 03:01:41,044 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 03:01:41,044 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:02:05,515 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 03:02:06,829 | server.py:125 | fit progress: (7, 1.554760217666626, {'accuracy': 0.9084, 'data_size': 10000}, 216.96538595299353)
INFO flwr 2024-04-29 03:02:06,829 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 03:02:06,829 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:02:34,686 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 03:02:36,193 | server.py:125 | fit progress: (8, 1.5493183135986328, {'accuracy': 0.9138, 'data_size': 10000}, 246.3298827020044)
INFO flwr 2024-04-29 03:02:36,194 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 03:02:36,194 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:03:03,569 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 03:03:05,065 | server.py:125 | fit progress: (9, 1.5478218793869019, {'accuracy': 0.9149, 'data_size': 10000}, 275.2014585059951)
INFO flwr 2024-04-29 03:03:05,065 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 03:03:05,066 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:03:33,359 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 03:03:34,891 | server.py:125 | fit progress: (10, 1.556638479232788, {'accuracy': 0.9073, 'data_size': 10000}, 305.0275540139992)
INFO flwr 2024-04-29 03:03:34,891 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 03:03:34,892 | server.py:153 | FL finished in 305.02804941500654
INFO flwr 2024-04-29 03:03:34,892 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 03:03:34,897 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.26101581e-05, -3.36919402e-05, -3.13843309e-04,  3.83011175e-05,
       -1.18564989e-03, -1.16680145e-04,  1.19861272e-06,  1.58235943e-03,
        1.91581508e-04, -1.30918532e-04], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.1127172e-05,  1.6057615e-04,  7.2184288e-05,  1.2640466e-05,
        7.3093142e-05,  7.7921795e-05, -1.1652817e-04, -7.3926523e-05,
       -6.4241081e-05, -1.7279570e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.0951794e-04,  2.0507336e-05,  1.6302909e-04,  1.2997504e-05,
        2.6008594e-04,  2.2289797e-04, -2.4251432e-05, -1.1051986e-04,
       -5.1679908e-05, -3.8350845e-04], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.3555548e-05, -1.3319144e-04,  2.1324297e-04,  6.7399917e-05,
       -4.5318691e-05, -1.5876925e-04, -1.0632143e-05,  2.0506608e-04,
       -2.8884178e-04,  1.3752875e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.4863014e-05, -1.7291875e-05, -4.4301808e-07, -3.6171514e-05,
        1.0814084e-04,  1.6183965e-05, -4.9652244e-05,  9.6260672e-05,
        1.6631117e-05, -1.1875274e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-1.2642585e-04, -6.3226976e-06,  1.2582920e-04, -8.7289307e-05,
        1.8126467e-04, -1.0337422e-04,  3.5164821e-06,  8.2791601e-05,
        8.6280261e-06, -7.8594247e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.65874657e-05,  1.85555236e-05, -4.70320856e-06,  1.61308469e-03,
        1.00191086e-04, -5.46006311e-04,  4.45432443e-06,  2.69632455e-05,
       -1.11278263e-03, -1.36310322e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-6.2754887e-05,  1.2602614e-05,  8.1591868e-05,  7.3164418e-05,
        6.7341192e-05, -3.9032852e-06,  5.7926623e-05, -1.5651729e-04,
       -3.9508446e-05, -2.9917857e-05], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-4.0334849e-05, -4.0994975e-05,  1.3245548e-04,  3.4819695e-04,
        1.2238116e-04, -2.6211014e-04,  1.7958865e-04, -4.0976034e-04,
       -1.5551441e-04,  1.2614211e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.3065979e-05,  3.6666970e-05,  1.9881645e-05, -2.0967160e-05,
        1.4526134e-04,  2.7075381e-05, -1.4661607e-05,  2.2267121e-05,
       -3.1901985e-05, -2.1665782e-04], dtype=float32)])]}
INFO flwr 2024-04-29 03:03:34,897 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 03:03:34,898 | app.py:229 | app_fit: losses_centralized [(0, 2.3044025897979736), (1, 1.6752042770385742), (2, 1.5755836963653564), (3, 1.5831773281097412), (4, 1.5595264434814453), (5, 1.5596855878829956), (6, 1.5560014247894287), (7, 1.554760217666626), (8, 1.5493183135986328), (9, 1.5478218793869019), (10, 1.556638479232788)]
INFO flwr 2024-04-29 03:03:34,898 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0855), (1, 0.7939), (2, 0.8917), (3, 0.8841), (4, 0.9066), (5, 0.9045), (6, 0.9074), (7, 0.9084), (8, 0.9138), (9, 0.9149), (10, 0.9073)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9073
wandb:     loss 1.55664
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_025809-sex39v6h
wandb: Find logs at: ./wandb/offline-run-20240429_025809-sex39v6h/logs
INFO flwr 2024-04-29 03:03:38,543 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.9
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 03:03:39,293 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1722181)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1722181)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 03:03:44,162	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 03:03:44,525	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 03:03:44,872	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 03:03:44,874	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 03:03:55,845 | app.py:213 | Flower VCE: Ray initialized with resources: {'GPU': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 78688437043.0, 'CPU': 64.0, 'node:__internal_head__': 1.0, 'memory': 173606353101.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 03:03:55,845 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 03:03:55,845 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 03:03:55,867 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 03:03:55,869 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 03:03:55,869 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 03:03:55,869 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 03:03:58,537 | server.py:94 | initial parameters (loss, other metrics): 2.3015620708465576, {'accuracy': 0.1224, 'data_size': 10000}
INFO flwr 2024-04-29 03:03:58,537 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 03:03:58,538 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1725968)[0m 2024-04-29 03:04:02.043015: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1725968)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1725968)[0m 2024-04-29 03:04:04.328519: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1725977)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1725977)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1725972)[0m 2024-04-29 03:04:02.201721: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1725972)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1725972)[0m 2024-04-29 03:04:04.520539: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 03:04:41,332 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 03:04:42,852 | server.py:125 | fit progress: (1, 1.7217365503311157, {'accuracy': 0.7386, 'data_size': 10000}, 44.31462630201713)
INFO flwr 2024-04-29 03:04:42,853 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 03:04:42,853 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:05:10,310 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 03:05:11,841 | server.py:125 | fit progress: (2, 1.584648847579956, {'accuracy': 0.8822, 'data_size': 10000}, 73.30365666601574)
INFO flwr 2024-04-29 03:05:11,842 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 03:05:11,842 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:05:38,981 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 03:05:40,472 | server.py:125 | fit progress: (3, 1.6090803146362305, {'accuracy': 0.8539, 'data_size': 10000}, 101.93473710201215)
INFO flwr 2024-04-29 03:05:40,473 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 03:05:40,473 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:06:08,009 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 03:06:09,539 | server.py:125 | fit progress: (4, 1.5643513202667236, {'accuracy': 0.8982, 'data_size': 10000}, 131.00163944798987)
INFO flwr 2024-04-29 03:06:09,540 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 03:06:09,540 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:06:39,423 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 03:06:40,966 | server.py:125 | fit progress: (5, 1.5622689723968506, {'accuracy': 0.901, 'data_size': 10000}, 162.4278852470161)
INFO flwr 2024-04-29 03:06:40,966 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 03:06:40,966 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:07:07,885 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 03:07:09,402 | server.py:125 | fit progress: (6, 1.563156008720398, {'accuracy': 0.9001, 'data_size': 10000}, 190.86402909300523)
INFO flwr 2024-04-29 03:07:09,402 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 03:07:09,402 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:07:38,086 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 03:07:39,409 | server.py:125 | fit progress: (7, 1.5569210052490234, {'accuracy': 0.9054, 'data_size': 10000}, 220.8716309860174)
INFO flwr 2024-04-29 03:07:39,410 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 03:07:39,410 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:08:08,708 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 03:08:09,996 | server.py:125 | fit progress: (8, 1.5485140085220337, {'accuracy': 0.9146, 'data_size': 10000}, 251.4579980869894)
INFO flwr 2024-04-29 03:08:09,996 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 03:08:09,996 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:08:38,674 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 03:08:40,200 | server.py:125 | fit progress: (9, 1.5648908615112305, {'accuracy': 0.8978, 'data_size': 10000}, 281.662246737018)
INFO flwr 2024-04-29 03:08:40,200 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 03:08:40,200 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:09:08,948 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 03:09:10,424 | server.py:125 | fit progress: (10, 1.5556221008300781, {'accuracy': 0.9069, 'data_size': 10000}, 311.8865121100098)
INFO flwr 2024-04-29 03:09:10,424 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 03:09:10,425 | server.py:153 | FL finished in 311.88696361600887
INFO flwr 2024-04-29 03:09:10,425 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 03:09:10,430 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1251463e-04,  1.3709546e-04, -1.3803464e-03,  1.1080847e-03,
        1.4525531e-03,  3.4256405e-04,  6.2290572e-05, -1.7872227e-04,
        3.4131671e-03, -5.0691436e-03], dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.20755828e-05,  4.11098445e-05,  2.44487983e-05, -1.21898745e-04,
        5.03562114e-05, -5.92875222e-06,  2.97441293e-05,  5.22276205e-05,
        2.18797450e-05, -1.13973823e-04], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.1562828e-05,  9.7599695e-05, -3.9232400e-05,  3.1317206e-05,
       -1.2380255e-05, -6.6132903e-05,  3.0779174e-05,  5.8918154e-06,
       -5.2863845e-05, -6.4884543e-06], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 8.9236555e-06, -1.3105170e-05,  5.0512872e-06, -2.7310266e-04,
        1.6962487e-04, -5.7466364e-06, -3.6478461e-05,  1.8496182e-03,
        8.7999142e-05, -1.7927345e-03], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 6.9512926e-06,  1.3480241e-05, -1.4256582e-05, -7.8660465e-04,
       -3.5324642e-06, -1.1242796e-04,  1.2241128e-03, -7.6411947e-05,
       -2.3882101e-05, -2.2738858e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 7.3335133e-05, -1.4963630e-04,  1.9216177e-06,  1.0934273e-04,
        3.3582470e-05,  8.7655142e-05, -5.5566015e-06, -9.0928879e-05,
        1.7076165e-05, -7.6737218e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.2762482e-06, -4.8689679e-05, -1.2723402e-04,  1.3327103e-05,
        7.3648560e-05,  1.8514724e-03,  1.2850676e-04, -1.0518795e-05,
       -1.9054664e-03,  2.8282435e-05], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-3.1870343e-06, -4.3698430e-05,  3.2930988e-05,  1.9127785e-04,
       -5.1757990e-04, -9.8528144e-05,  4.9969200e-05,  6.5989948e-06,
        5.2594941e-04, -1.4370373e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-2.7967648e-05,  1.0724113e-05,  8.5531814e-05,  7.1334871e-05,
        1.5607096e-06, -4.4678918e-06,  1.6343656e-05, -3.1996774e-06,
       -5.7564270e-05, -9.2236427e-05], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 5.2288642e-06, -9.6926206e-06,  3.1012638e-05,  3.9799186e-05,
       -4.3708064e-06,  3.7660549e-05, -1.3355215e-05, -4.5108798e-05,
        5.3375144e-05, -9.4524054e-05], dtype=float32)])]}
INFO flwr 2024-04-29 03:09:10,430 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 03:09:10,430 | app.py:229 | app_fit: losses_centralized [(0, 2.3015620708465576), (1, 1.7217365503311157), (2, 1.584648847579956), (3, 1.6090803146362305), (4, 1.5643513202667236), (5, 1.5622689723968506), (6, 1.563156008720398), (7, 1.5569210052490234), (8, 1.5485140085220337), (9, 1.5648908615112305), (10, 1.5556221008300781)]
INFO flwr 2024-04-29 03:09:10,431 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.1224), (1, 0.7386), (2, 0.8822), (3, 0.8539), (4, 0.8982), (5, 0.901), (6, 0.9001), (7, 0.9054), (8, 0.9146), (9, 0.8978), (10, 0.9069)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.9069
wandb:     loss 1.55562
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_030338-g2dsaqbx
wandb: Find logs at: ./wandb/offline-run-20240429_030338-g2dsaqbx/logs
INFO flwr 2024-04-29 03:09:14,063 | run_simulation.py:150 | 
Running with Config
	Simulation
		batch_size: 4
		client_count: 100
		fraction_fit: 0.1
		global_rounds: 10
		local_rounds: 50
		Optimizer: FedNAG
			lr: 0.2
			momentum: 0.95
	Dataset
		name: MNIST
		preprocess_fn:
			def preprocess_fn(element):
			  return {
			    "x": element["image"].reshape(784) / 255.,
			    "y": element["label"]
			  }
			
		splitter:
			alpha: 1.0
			percent_non_iid: 25.0
	Model
		name: Logistic Regression
		criterion: CrossEntropyLoss()
		layers:
			Net(
			  (layers): Sequential(
			    (0): Linear(in_features=784, out_features=10, bias=True)
			    (1): Softmax(dim=-1)
			  )
			)
wandb: Tracking run with wandb version 0.16.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
INFO flwr 2024-04-29 03:09:14,771 | app.py:178 | Starting Flower simulation, config: ServerConfig(num_rounds=10, round_timeout=None)
[2m[36m(DefaultActor pid=1725964)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1725964)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
2024-04-29 03:09:19,630	INFO worker.py:1621 -- Started a local Ray instance.
2024-04-29 03:09:19,990	INFO packaging.py:518 -- Creating a file package for local directory '/home/s2240084/conFEDential'.
2024-04-29 03:09:20,445	INFO packaging.py:346 -- Pushing file package 'gcs://_ray_pkg_eb8d014d6717886c.zip' (0.20MiB) to Ray cluster...
2024-04-29 03:09:20,447	INFO packaging.py:359 -- Successfully pushed file package 'gcs://_ray_pkg_eb8d014d6717886c.zip'.
INFO flwr 2024-04-29 03:09:31,376 | app.py:213 | Flower VCE: Ray initialized with resources: {'object_store_memory': 78695737344.0, 'accelerator_type:G': 1.0, 'GPU': 1.0, 'node:__internal_head__': 1.0, 'CPU': 64.0, 'memory': 173623387136.0, 'node:10.20.240.13': 1.0}
INFO flwr 2024-04-29 03:09:31,376 | app.py:219 | Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
INFO flwr 2024-04-29 03:09:31,377 | app.py:242 | Flower VCE: Resources for each Virtual Client: {'num_cpus': 8, 'num_gpus': 0.125}
INFO flwr 2024-04-29 03:09:31,398 | app.py:288 | Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
INFO flwr 2024-04-29 03:09:31,400 | server.py:89 | Initializing global parameters
INFO flwr 2024-04-29 03:09:31,400 | server.py:272 | Using initial parameters provided by strategy
INFO flwr 2024-04-29 03:09:31,400 | server.py:91 | Evaluating initial parameters
INFO flwr 2024-04-29 03:09:34,610 | server.py:94 | initial parameters (loss, other metrics): 2.305995225906372, {'accuracy': 0.0691, 'data_size': 10000}
INFO flwr 2024-04-29 03:09:34,610 | server.py:104 | FL starting
DEBUG flwr 2024-04-29 03:09:34,611 | server.py:222 | fit_round 1: strategy sampled 10 clients (out of 100)
[2m[36m(pid=1729732)[0m 2024-04-29 03:09:37.564908: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[2m[36m(pid=1729732)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2m[36m(pid=1729732)[0m 2024-04-29 03:09:39.812490: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[2m[36m(DefaultActor pid=1729731)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
[2m[36m(DefaultActor pid=1729731)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
[2m[36m(pid=1729734)[0m 2024-04-29 03:09:37.729615: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1729734)[0m To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.[32m [repeated 7x across cluster][0m
[2m[36m(pid=1729734)[0m 2024-04-29 03:09:40.035324: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT[32m [repeated 7x across cluster][0m
DEBUG flwr 2024-04-29 03:10:18,732 | server.py:236 | fit_round 1 received 10 results and 0 failures
INFO flwr 2024-04-29 03:10:20,251 | server.py:125 | fit progress: (1, 1.7786986827850342, {'accuracy': 0.6839, 'data_size': 10000}, 45.640733698004624)
INFO flwr 2024-04-29 03:10:20,252 | server.py:171 | evaluate_round 1: no clients selected, cancel
DEBUG flwr 2024-04-29 03:10:20,252 | server.py:222 | fit_round 2: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:10:47,775 | server.py:236 | fit_round 2 received 10 results and 0 failures
INFO flwr 2024-04-29 03:10:49,344 | server.py:125 | fit progress: (2, 1.6556475162506104, {'accuracy': 0.8051, 'data_size': 10000}, 74.73335386798135)
INFO flwr 2024-04-29 03:10:49,344 | server.py:171 | evaluate_round 2: no clients selected, cancel
DEBUG flwr 2024-04-29 03:10:49,344 | server.py:222 | fit_round 3: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:11:15,814 | server.py:236 | fit_round 3 received 10 results and 0 failures
INFO flwr 2024-04-29 03:11:17,121 | server.py:125 | fit progress: (3, 1.5676474571228027, {'accuracy': 0.8942, 'data_size': 10000}, 102.51008304298739)
INFO flwr 2024-04-29 03:11:17,121 | server.py:171 | evaluate_round 3: no clients selected, cancel
DEBUG flwr 2024-04-29 03:11:17,121 | server.py:222 | fit_round 4: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:11:43,965 | server.py:236 | fit_round 4 received 10 results and 0 failures
INFO flwr 2024-04-29 03:11:45,253 | server.py:125 | fit progress: (4, 1.5623393058776855, {'accuracy': 0.8983, 'data_size': 10000}, 130.6422451249964)
INFO flwr 2024-04-29 03:11:45,253 | server.py:171 | evaluate_round 4: no clients selected, cancel
DEBUG flwr 2024-04-29 03:11:45,253 | server.py:222 | fit_round 5: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:12:13,135 | server.py:236 | fit_round 5 received 10 results and 0 failures
INFO flwr 2024-04-29 03:12:14,658 | server.py:125 | fit progress: (5, 1.5608892440795898, {'accuracy': 0.9005, 'data_size': 10000}, 160.0472479859891)
INFO flwr 2024-04-29 03:12:14,658 | server.py:171 | evaluate_round 5: no clients selected, cancel
DEBUG flwr 2024-04-29 03:12:14,658 | server.py:222 | fit_round 6: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:12:43,753 | server.py:236 | fit_round 6 received 10 results and 0 failures
INFO flwr 2024-04-29 03:12:45,049 | server.py:125 | fit progress: (6, 1.5696967840194702, {'accuracy': 0.8913, 'data_size': 10000}, 190.4382572369941)
INFO flwr 2024-04-29 03:12:45,049 | server.py:171 | evaluate_round 6: no clients selected, cancel
DEBUG flwr 2024-04-29 03:12:45,049 | server.py:222 | fit_round 7: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:13:12,458 | server.py:236 | fit_round 7 received 10 results and 0 failures
INFO flwr 2024-04-29 03:13:13,759 | server.py:125 | fit progress: (7, 1.5582798719406128, {'accuracy': 0.9028, 'data_size': 10000}, 219.14882123700227)
INFO flwr 2024-04-29 03:13:13,760 | server.py:171 | evaluate_round 7: no clients selected, cancel
DEBUG flwr 2024-04-29 03:13:13,760 | server.py:222 | fit_round 8: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:13:44,931 | server.py:236 | fit_round 8 received 10 results and 0 failures
INFO flwr 2024-04-29 03:13:46,234 | server.py:125 | fit progress: (8, 1.5555449724197388, {'accuracy': 0.905, 'data_size': 10000}, 251.6236276709824)
INFO flwr 2024-04-29 03:13:46,235 | server.py:171 | evaluate_round 8: no clients selected, cancel
DEBUG flwr 2024-04-29 03:13:46,235 | server.py:222 | fit_round 9: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:14:14,643 | server.py:236 | fit_round 9 received 10 results and 0 failures
INFO flwr 2024-04-29 03:14:15,947 | server.py:125 | fit progress: (9, 1.5482163429260254, {'accuracy': 0.9129, 'data_size': 10000}, 281.3364664169785)
INFO flwr 2024-04-29 03:14:15,947 | server.py:171 | evaluate_round 9: no clients selected, cancel
DEBUG flwr 2024-04-29 03:14:15,948 | server.py:222 | fit_round 10: strategy sampled 10 clients (out of 100)
DEBUG flwr 2024-04-29 03:14:45,515 | server.py:236 | fit_round 10 received 10 results and 0 failures
INFO flwr 2024-04-29 03:14:47,055 | server.py:125 | fit progress: (10, 1.5618149042129517, {'accuracy': 0.8988, 'data_size': 10000}, 312.44459537099465)
INFO flwr 2024-04-29 03:14:47,056 | server.py:171 | evaluate_round 10: no clients selected, cancel
INFO flwr 2024-04-29 03:14:47,056 | server.py:153 | FL finished in 312.44509345298866
INFO flwr 2024-04-29 03:14:47,056 | app.py:226 | app_fit: losses_distributed []
INFO flwr 2024-04-29 03:14:47,061 | app.py:227 | app_fit: metrics_distributed_fit {'velocity': [(1, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-0.00017794,  0.00032235, -0.00094338,  0.00012302,  0.00041415,
        0.00133909,  0.00125796, -0.00121754, -0.00034301, -0.00077467],
      dtype=float32)]), (2, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.1536241e-04,  9.6662715e-04, -1.6274708e-04, -2.6713719e-04,
       -6.8379231e-05, -8.1120385e-04, -8.3781255e-05,  2.8094405e-04,
       -4.4863453e-05, -2.4773146e-05], dtype=float32)]), (3, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.9454395e-04, -4.1800344e-04, -3.0585910e-05, -2.3947735e-04,
        2.3163775e-05,  5.7726231e-04, -1.4008785e-04,  1.2956621e-04,
       -1.3446045e-04, -6.1868064e-05], dtype=float32)]), (4, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-5.0323950e-05, -2.5280118e-05, -1.2538102e-04,  4.0151537e-04,
       -2.5024608e-06, -5.6159410e-05,  2.2463514e-04, -2.5466477e-04,
        4.8201505e-06, -1.1661308e-04], dtype=float32)]), (5, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 3.6203382e-05,  1.4898612e-04, -8.9223729e-05, -1.7388992e-04,
        2.6508252e-04, -2.7416558e-05, -7.9542158e-05,  1.8323854e-05,
       -3.8093422e-04,  2.8243908e-04], dtype=float32)]), (6, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.2237441e-04, -1.6239575e-04, -1.7371109e-04,  5.0895702e-05,
        2.3327095e-05,  1.2366664e-04,  3.7563117e-05, -3.7822363e-05,
       -1.5728075e-04,  7.3407704e-05], dtype=float32)]), (7, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.0155371e-04,  1.3268934e-04, -3.4677211e-04, -8.8299028e-05,
       -3.5237643e-04,  4.2453111e-04,  7.4532094e-05, -1.7416707e-04,
       -2.1307915e-04,  4.4141771e-04], dtype=float32)]), (8, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 1.4243135e-04,  3.9252522e-05,  1.5080372e-04, -2.3929954e-04,
       -1.6514411e-04,  1.1081088e-05, -2.1868244e-04, -4.5835252e-05,
       -1.2327006e-04,  4.4868598e-04], dtype=float32)]), (9, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([-7.9378035e-05, -6.6199544e-05,  2.0225650e-04, -3.6131711e-05,
       -4.1831969e-04, -8.6301086e-05,  2.4696949e-04, -2.8749244e-04,
       -5.7551548e-05,  5.8218645e-04], dtype=float32)]), (10, [array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), array([ 2.0322614e-05,  1.4982117e-05, -6.5537890e-05,  9.9408433e-05,
       -9.6329699e-05, -1.9368079e-05,  1.2774988e-04,  5.3725780e-05,
       -5.1598024e-04,  3.8106268e-04], dtype=float32)])]}
INFO flwr 2024-04-29 03:14:47,061 | app.py:228 | app_fit: metrics_distributed {}
INFO flwr 2024-04-29 03:14:47,062 | app.py:229 | app_fit: losses_centralized [(0, 2.305995225906372), (1, 1.7786986827850342), (2, 1.6556475162506104), (3, 1.5676474571228027), (4, 1.5623393058776855), (5, 1.5608892440795898), (6, 1.5696967840194702), (7, 1.5582798719406128), (8, 1.5555449724197388), (9, 1.5482163429260254), (10, 1.5618149042129517)]
INFO flwr 2024-04-29 03:14:47,062 | app.py:230 | app_fit: metrics_centralized {'accuracy': [(0, 0.0691), (1, 0.6839), (2, 0.8051), (3, 0.8942), (4, 0.8983), (5, 0.9005), (6, 0.8913), (7, 0.9028), (8, 0.905), (9, 0.9129), (10, 0.8988)], 'data_size': [(0, 10000), (1, 10000), (2, 10000), (3, 10000), (4, 10000), (5, 10000), (6, 10000), (7, 10000), (8, 10000), (9, 10000), (10, 10000)]}
wandb: - 0.000 MB of 0.000 MB uploadedwandb:                                                                                
wandb: 
wandb: Run summary:
wandb: accuracy 0.8988
wandb:     loss 1.56181
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /home/s2240084/conFEDential/wandb/offline-run-20240429_030914-son3m5pg
wandb: Find logs at: ./wandb/offline-run-20240429_030914-son3m5pg/logs
[2m[36m(DefaultActor pid=1729724)[0m /home/s2240084/conFEDential/venv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py:183: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)[32m [repeated 7x across cluster][0m
[2m[36m(DefaultActor pid=1729724)[0m   return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)[32m [repeated 7x across cluster][0m
