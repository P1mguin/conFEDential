ctit081
2024-05-14 16:06:23.543354: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-14 16:06:26.560385: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
INFO flwr 2024-05-14 16:06:34,909 | Data.py:31 | Preprocessing the federated learning dataset
INFO flwr 2024-05-14 16:06:34,910 | Data.py:107 | Found preprocessed data for the given preprocess function, returning
Traceback (most recent call last):
  File "/home/s2240084/conFEDential/src/main.py", line 75, in <module>
    main()
  File "/home/s2240084/conFEDential/src/main.py", line 63, in main
    configs = batch_config.generate_configs_from_yaml_file(str(Path(args.yaml_file).resolve()))
  File "/home/s2240084/conFEDential/src/utils/batch_config.py", line 77, in generate_configs_from_yaml_file
    configs = [Config.from_dict(raw_config) for raw_config in raw_configs]
  File "/home/s2240084/conFEDential/src/utils/batch_config.py", line 77, in <listcomp>
    configs = [Config.from_dict(raw_config) for raw_config in raw_configs]
  File "/home/s2240084/conFEDential/src/experiment/Config.py", line 45, in from_dict
    simulation=Simulation.from_dict(config['simulation']),
  File "/home/s2240084/conFEDential/src/experiment/Simulation.py", line 58, in from_dict
    model=Model.from_dict(config['model'])
  File "/home/s2240084/conFEDential/src/experiment/Model.py", line 63, in from_dict
    return Model(
  File "/home/s2240084/conFEDential/src/experiment/Model.py", line 34, in __init__
    self._prepare_learning_method()
  File "/home/s2240084/conFEDential/src/experiment/Model.py", line 187, in _prepare_learning_method
    model_weights = training.get_weights(model)
  File "/home/s2240084/conFEDential/src/training/common.py", line 16, in get_weights
    return [val.cpu().numpy().copy() for _, val in model.state_dict().items()]
TypeError: Module.state_dict() missing 1 required positional argument: 'self'
srun: error: ctit081: task 0: Exited with exit code 1
